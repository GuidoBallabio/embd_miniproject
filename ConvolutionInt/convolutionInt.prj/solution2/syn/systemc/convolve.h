// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _convolve_HH_
#define _convolve_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "convolve_mul_6ns_bkb.h"
#include "convolve_mul_mul_cud.h"
#include "convolve_mac_muladEe.h"
#include "convolve_conv_s_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_CONV_ADDR_WIDTH = 15,
         unsigned int C_S_AXI_CONV_DATA_WIDTH = 32>
struct convolve : public sc_module {
    // Port declarations 20
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_logic > s_axi_conv_AWVALID;
    sc_out< sc_logic > s_axi_conv_AWREADY;
    sc_in< sc_uint<C_S_AXI_CONV_ADDR_WIDTH> > s_axi_conv_AWADDR;
    sc_in< sc_logic > s_axi_conv_WVALID;
    sc_out< sc_logic > s_axi_conv_WREADY;
    sc_in< sc_uint<C_S_AXI_CONV_DATA_WIDTH> > s_axi_conv_WDATA;
    sc_in< sc_uint<C_S_AXI_CONV_DATA_WIDTH/8> > s_axi_conv_WSTRB;
    sc_in< sc_logic > s_axi_conv_ARVALID;
    sc_out< sc_logic > s_axi_conv_ARREADY;
    sc_in< sc_uint<C_S_AXI_CONV_ADDR_WIDTH> > s_axi_conv_ARADDR;
    sc_out< sc_logic > s_axi_conv_RVALID;
    sc_in< sc_logic > s_axi_conv_RREADY;
    sc_out< sc_uint<C_S_AXI_CONV_DATA_WIDTH> > s_axi_conv_RDATA;
    sc_out< sc_lv<2> > s_axi_conv_RRESP;
    sc_out< sc_logic > s_axi_conv_BVALID;
    sc_in< sc_logic > s_axi_conv_BREADY;
    sc_out< sc_lv<2> > s_axi_conv_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    convolve(sc_module_name name);
    SC_HAS_PROCESS(convolve);

    ~convolve();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    convolve_conv_s_axi<C_S_AXI_CONV_ADDR_WIDTH,C_S_AXI_CONV_DATA_WIDTH>* convolve_conv_s_axi_U;
    convolve_mul_6ns_bkb<1,2,6,7,12>* convolve_mul_6ns_bkb_U0;
    convolve_mul_6ns_bkb<1,2,6,7,12>* convolve_mul_6ns_bkb_U1;
    convolve_mul_6ns_bkb<1,2,6,7,12>* convolve_mul_6ns_bkb_U2;
    convolve_mul_mul_cud<1,1,8,16,16>* convolve_mul_mul_cud_U3;
    convolve_mac_muladEe<1,1,8,16,16,16>* convolve_mac_muladEe_U4;
    convolve_mul_mul_cud<1,1,8,16,16>* convolve_mul_mul_cud_U5;
    convolve_mac_muladEe<1,1,8,16,16,16>* convolve_mac_muladEe_U6;
    convolve_mul_mul_cud<1,1,8,16,16>* convolve_mul_mul_cud_U7;
    convolve_mac_muladEe<1,1,8,16,16,16>* convolve_mac_muladEe_U8;
    convolve_mul_mul_cud<1,1,8,16,16>* convolve_mul_mul_cud_U9;
    convolve_mac_muladEe<1,1,8,16,16,16>* convolve_mac_muladEe_U10;
    convolve_mac_muladEe<1,1,8,16,16,16>* convolve_mac_muladEe_U11;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<19> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<12> > in_r_address0;
    sc_signal< sc_logic > in_r_ce0;
    sc_signal< sc_lv<16> > in_r_q0;
    sc_signal< sc_logic > out_r_ce0;
    sc_signal< sc_logic > out_r_we0;
    sc_signal< sc_lv<16> > out_r_d0;
    sc_signal< sc_lv<4> > krnl_address0;
    sc_signal< sc_logic > krnl_ce0;
    sc_signal< sc_lv<8> > krnl_q0;
    sc_signal< sc_lv<16> > reg_250;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<8> > reg_254;
    sc_signal< sc_lv<16> > reg_258;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_lv<8> > reg_262;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<12> > grp_fu_270_p2;
    sc_signal< sc_lv<12> > tmp_4_reg_585;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<6> > tmp_1_fu_282_p2;
    sc_signal< sc_lv<6> > tmp_1_reg_595;
    sc_signal< sc_lv<1> > exitcond1_fu_276_p2;
    sc_signal< sc_lv<6> > r_fu_288_p2;
    sc_signal< sc_lv<6> > r_reg_600;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<12> > grp_fu_297_p2;
    sc_signal< sc_lv<12> > tmp_5_reg_616;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<12> > grp_fu_306_p2;
    sc_signal< sc_lv<12> > tmp_6_reg_623;
    sc_signal< sc_lv<12> > in_addr_3_reg_630;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<12> > in_addr_4_reg_635;
    sc_signal< sc_lv<12> > in_addr_5_reg_640;
    sc_signal< sc_lv<12> > out_addr_reg_645;
    sc_signal< sc_lv<6> > tmp_s_fu_353_p2;
    sc_signal< sc_lv<6> > tmp_s_reg_653;
    sc_signal< sc_lv<1> > exitcond_fu_347_p2;
    sc_signal< sc_lv<12> > tmp_cast_cast_fu_359_p1;
    sc_signal< sc_lv<12> > tmp_cast_cast_reg_658;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<12> > tmp_12_fu_381_p2;
    sc_signal< sc_lv<12> > tmp_12_reg_674;
    sc_signal< sc_lv<6> > c_1_fu_385_p2;
    sc_signal< sc_lv<6> > c_1_reg_679;
    sc_signal< sc_lv<12> > tmp_13_fu_395_p2;
    sc_signal< sc_lv<12> > tmp_13_reg_684;
    sc_signal< sc_lv<12> > tmp_14_fu_400_p2;
    sc_signal< sc_lv<12> > tmp_14_reg_689;
    sc_signal< sc_lv<12> > tmp_15_fu_405_p2;
    sc_signal< sc_lv<12> > tmp_15_reg_694;
    sc_signal< sc_lv<16> > tmp_3_fu_475_p2;
    sc_signal< sc_lv<16> > tmp_3_reg_704;
    sc_signal< sc_lv<16> > grp_fu_481_p3;
    sc_signal< sc_lv<16> > tmp1_reg_709;
    sc_signal< sc_lv<16> > tmp_22_1_fu_488_p2;
    sc_signal< sc_lv<16> > tmp_22_1_reg_714;
    sc_signal< sc_lv<16> > tmp_fu_434_p2;
    sc_signal< sc_lv<16> > tmp_reg_724;
    sc_signal< sc_lv<16> > tmp_22_1_2_fu_502_p2;
    sc_signal< sc_lv<16> > tmp_22_1_2_reg_729;
    sc_signal< sc_lv<16> > grp_fu_508_p3;
    sc_signal< sc_lv<16> > tmp4_reg_744;
    sc_signal< sc_lv<16> > in_load_8_reg_749;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_lv<8> > krnl_load_8_reg_754;
    sc_signal< sc_lv<16> > tmp_22_2_2_fu_515_p2;
    sc_signal< sc_lv<16> > tmp_22_2_2_reg_759;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_lv<16> > grp_fu_520_p3;
    sc_signal< sc_lv<16> > tmp5_reg_764;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_lv<6> > r1_reg_226;
    sc_signal< sc_lv<6> > c_reg_238;
    sc_signal< sc_logic > ap_CS_fsm_state19;
    sc_signal< sc_lv<32> > tmp_7_cast_fu_321_p1;
    sc_signal< sc_lv<32> > tmp_8_cast_fu_331_p1;
    sc_signal< sc_lv<32> > tmp_9_cast_fu_342_p1;
    sc_signal< sc_lv<32> > tmp_10_cast_fu_367_p1;
    sc_signal< sc_lv<32> > tmp_11_cast_fu_376_p1;
    sc_signal< sc_lv<32> > tmp_12_cast_fu_410_p1;
    sc_signal< sc_lv<32> > tmp_13_cast_fu_430_p1;
    sc_signal< sc_lv<32> > tmp_14_cast_fu_442_p1;
    sc_signal< sc_lv<32> > tmp_15_cast_fu_450_p1;
    sc_signal< sc_lv<6> > grp_fu_270_p0;
    sc_signal< sc_lv<7> > grp_fu_270_p1;
    sc_signal< sc_lv<6> > grp_fu_297_p0;
    sc_signal< sc_lv<7> > grp_fu_297_p1;
    sc_signal< sc_lv<6> > grp_fu_306_p0;
    sc_signal< sc_lv<7> > grp_fu_306_p1;
    sc_signal< sc_lv<12> > c_cast7_cast_fu_312_p1;
    sc_signal< sc_lv<12> > tmp_7_fu_316_p2;
    sc_signal< sc_lv<12> > tmp_8_fu_326_p2;
    sc_signal< sc_lv<12> > tmp_9_fu_337_p2;
    sc_signal< sc_lv<12> > tmp_10_fu_362_p2;
    sc_signal< sc_lv<12> > tmp_11_fu_372_p2;
    sc_signal< sc_lv<12> > c_1_cast_cast_fu_391_p1;
    sc_signal< sc_lv<16> > grp_fu_494_p3;
    sc_signal< sc_lv<16> > tmp3_fu_465_p2;
    sc_signal< sc_lv<16> > grp_fu_527_p3;
    sc_signal< sc_lv<19> > ap_NS_fsm;
    sc_signal< sc_lv<12> > grp_fu_270_p00;
    sc_signal< sc_lv<12> > grp_fu_297_p00;
    sc_signal< sc_lv<12> > grp_fu_306_p00;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<19> ap_ST_fsm_state1;
    static const sc_lv<19> ap_ST_fsm_state2;
    static const sc_lv<19> ap_ST_fsm_state3;
    static const sc_lv<19> ap_ST_fsm_state4;
    static const sc_lv<19> ap_ST_fsm_state5;
    static const sc_lv<19> ap_ST_fsm_state6;
    static const sc_lv<19> ap_ST_fsm_state7;
    static const sc_lv<19> ap_ST_fsm_state8;
    static const sc_lv<19> ap_ST_fsm_state9;
    static const sc_lv<19> ap_ST_fsm_state10;
    static const sc_lv<19> ap_ST_fsm_state11;
    static const sc_lv<19> ap_ST_fsm_state12;
    static const sc_lv<19> ap_ST_fsm_state13;
    static const sc_lv<19> ap_ST_fsm_state14;
    static const sc_lv<19> ap_ST_fsm_state15;
    static const sc_lv<19> ap_ST_fsm_state16;
    static const sc_lv<19> ap_ST_fsm_state17;
    static const sc_lv<19> ap_ST_fsm_state18;
    static const sc_lv<19> ap_ST_fsm_state19;
    static const sc_lv<32> ap_const_lv32_0;
    static const int C_S_AXI_DATA_WIDTH;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<12> ap_const_lv12_32;
    static const sc_lv<6> ap_const_lv6_31;
    static const sc_lv<6> ap_const_lv6_3F;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state19();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_c_1_cast_cast_fu_391_p1();
    void thread_c_1_fu_385_p2();
    void thread_c_cast7_cast_fu_312_p1();
    void thread_exitcond1_fu_276_p2();
    void thread_exitcond_fu_347_p2();
    void thread_grp_fu_270_p0();
    void thread_grp_fu_270_p00();
    void thread_grp_fu_270_p1();
    void thread_grp_fu_297_p0();
    void thread_grp_fu_297_p00();
    void thread_grp_fu_297_p1();
    void thread_grp_fu_306_p0();
    void thread_grp_fu_306_p00();
    void thread_grp_fu_306_p1();
    void thread_in_r_address0();
    void thread_in_r_ce0();
    void thread_krnl_address0();
    void thread_krnl_ce0();
    void thread_out_r_ce0();
    void thread_out_r_d0();
    void thread_out_r_we0();
    void thread_r_fu_288_p2();
    void thread_tmp3_fu_465_p2();
    void thread_tmp_10_cast_fu_367_p1();
    void thread_tmp_10_fu_362_p2();
    void thread_tmp_11_cast_fu_376_p1();
    void thread_tmp_11_fu_372_p2();
    void thread_tmp_12_cast_fu_410_p1();
    void thread_tmp_12_fu_381_p2();
    void thread_tmp_13_cast_fu_430_p1();
    void thread_tmp_13_fu_395_p2();
    void thread_tmp_14_cast_fu_442_p1();
    void thread_tmp_14_fu_400_p2();
    void thread_tmp_15_cast_fu_450_p1();
    void thread_tmp_15_fu_405_p2();
    void thread_tmp_1_fu_282_p2();
    void thread_tmp_7_cast_fu_321_p1();
    void thread_tmp_7_fu_316_p2();
    void thread_tmp_8_cast_fu_331_p1();
    void thread_tmp_8_fu_326_p2();
    void thread_tmp_9_cast_fu_342_p1();
    void thread_tmp_9_fu_337_p2();
    void thread_tmp_cast_cast_fu_359_p1();
    void thread_tmp_fu_434_p2();
    void thread_tmp_s_fu_353_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif

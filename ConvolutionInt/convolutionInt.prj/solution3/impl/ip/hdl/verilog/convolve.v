// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="convolve,hls_ip_2017_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z010clg400-1,HLS_INPUT_CLOCK=8.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.400000,HLS_SYN_LAT=11282,HLS_SYN_TPT=none,HLS_SYN_MEM=10,HLS_SYN_DSP=45,HLS_SYN_FF=3047,HLS_SYN_LUT=1634}" *)

module convolve (
        ap_clk,
        ap_rst_n,
        s_axi_conv_AWVALID,
        s_axi_conv_AWREADY,
        s_axi_conv_AWADDR,
        s_axi_conv_WVALID,
        s_axi_conv_WREADY,
        s_axi_conv_WDATA,
        s_axi_conv_WSTRB,
        s_axi_conv_ARVALID,
        s_axi_conv_ARREADY,
        s_axi_conv_ARADDR,
        s_axi_conv_RVALID,
        s_axi_conv_RREADY,
        s_axi_conv_RDATA,
        s_axi_conv_RRESP,
        s_axi_conv_BVALID,
        s_axi_conv_BREADY,
        s_axi_conv_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 47'd1;
parameter    ap_ST_fsm_state2 = 47'd2;
parameter    ap_ST_fsm_state3 = 47'd4;
parameter    ap_ST_fsm_state4 = 47'd8;
parameter    ap_ST_fsm_state5 = 47'd16;
parameter    ap_ST_fsm_state6 = 47'd32;
parameter    ap_ST_fsm_state7 = 47'd64;
parameter    ap_ST_fsm_state8 = 47'd128;
parameter    ap_ST_fsm_state9 = 47'd256;
parameter    ap_ST_fsm_state10 = 47'd512;
parameter    ap_ST_fsm_state11 = 47'd1024;
parameter    ap_ST_fsm_state12 = 47'd2048;
parameter    ap_ST_fsm_state13 = 47'd4096;
parameter    ap_ST_fsm_state14 = 47'd8192;
parameter    ap_ST_fsm_state15 = 47'd16384;
parameter    ap_ST_fsm_state16 = 47'd32768;
parameter    ap_ST_fsm_state17 = 47'd65536;
parameter    ap_ST_fsm_state18 = 47'd131072;
parameter    ap_ST_fsm_state19 = 47'd262144;
parameter    ap_ST_fsm_state20 = 47'd524288;
parameter    ap_ST_fsm_state21 = 47'd1048576;
parameter    ap_ST_fsm_state22 = 47'd2097152;
parameter    ap_ST_fsm_state23 = 47'd4194304;
parameter    ap_ST_fsm_state24 = 47'd8388608;
parameter    ap_ST_fsm_state25 = 47'd16777216;
parameter    ap_ST_fsm_state26 = 47'd33554432;
parameter    ap_ST_fsm_state27 = 47'd67108864;
parameter    ap_ST_fsm_state28 = 47'd134217728;
parameter    ap_ST_fsm_state29 = 47'd268435456;
parameter    ap_ST_fsm_state30 = 47'd536870912;
parameter    ap_ST_fsm_state31 = 47'd1073741824;
parameter    ap_ST_fsm_state32 = 47'd2147483648;
parameter    ap_ST_fsm_state33 = 47'd4294967296;
parameter    ap_ST_fsm_state34 = 47'd8589934592;
parameter    ap_ST_fsm_state35 = 47'd17179869184;
parameter    ap_ST_fsm_state36 = 47'd34359738368;
parameter    ap_ST_fsm_state37 = 47'd68719476736;
parameter    ap_ST_fsm_state38 = 47'd137438953472;
parameter    ap_ST_fsm_state39 = 47'd274877906944;
parameter    ap_ST_fsm_state40 = 47'd549755813888;
parameter    ap_ST_fsm_state41 = 47'd1099511627776;
parameter    ap_ST_fsm_state42 = 47'd2199023255552;
parameter    ap_ST_fsm_state43 = 47'd4398046511104;
parameter    ap_ST_fsm_state44 = 47'd8796093022208;
parameter    ap_ST_fsm_state45 = 47'd17592186044416;
parameter    ap_ST_fsm_state46 = 47'd35184372088832;
parameter    ap_ST_fsm_state47 = 47'd70368744177664;
parameter    C_S_AXI_CONV_DATA_WIDTH = 32;
parameter    C_S_AXI_CONV_ADDR_WIDTH = 15;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONV_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input   s_axi_conv_AWVALID;
output   s_axi_conv_AWREADY;
input  [C_S_AXI_CONV_ADDR_WIDTH - 1:0] s_axi_conv_AWADDR;
input   s_axi_conv_WVALID;
output   s_axi_conv_WREADY;
input  [C_S_AXI_CONV_DATA_WIDTH - 1:0] s_axi_conv_WDATA;
input  [C_S_AXI_CONV_WSTRB_WIDTH - 1:0] s_axi_conv_WSTRB;
input   s_axi_conv_ARVALID;
output   s_axi_conv_ARREADY;
input  [C_S_AXI_CONV_ADDR_WIDTH - 1:0] s_axi_conv_ARADDR;
output   s_axi_conv_RVALID;
input   s_axi_conv_RREADY;
output  [C_S_AXI_CONV_DATA_WIDTH - 1:0] s_axi_conv_RDATA;
output  [1:0] s_axi_conv_RRESP;
output   s_axi_conv_BVALID;
input   s_axi_conv_BREADY;
output  [1:0] s_axi_conv_BRESP;
output   interrupt;

reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [46:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
reg   [11:0] in_r_address0;
reg    in_r_ce0;
wire   [15:0] in_r_q0;
reg   [11:0] out_r_address0;
reg    out_r_ce0;
reg    out_r_we0;
reg   [15:0] out_r_d0;
reg   [3:0] krnl_address0;
reg    krnl_ce0;
wire   [7:0] krnl_q0;
reg  signed [15:0] reg_388;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state42;
reg  signed [15:0] reg_392;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state43;
reg  signed [15:0] reg_396;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state44;
wire    ap_CS_fsm_state2;
wire   [11:0] grp_fu_404_p2;
reg   [11:0] tmp_2_reg_1124;
wire    ap_CS_fsm_state3;
wire   [5:0] tmp_3_fu_416_p2;
reg   [5:0] tmp_3_reg_1138;
wire   [0:0] exitcond_fu_410_p2;
wire   [5:0] r_fu_422_p2;
reg   [5:0] r_reg_1143;
wire    ap_CS_fsm_state4;
wire   [11:0] grp_fu_431_p2;
reg   [11:0] tmp_4_reg_1159;
wire    ap_CS_fsm_state5;
wire   [11:0] grp_fu_440_p2;
reg   [11:0] tmp_5_reg_1170;
reg   [11:0] in_addr_3_reg_1181;
wire    ap_CS_fsm_state6;
reg   [11:0] in_addr_4_reg_1186;
reg   [11:0] in_addr_5_reg_1191;
reg   [11:0] out_addr_reg_1196;
wire   [0:0] tmp_s_fu_481_p2;
reg   [0:0] tmp_s_reg_1201;
wire   [5:0] tmp_1_fu_487_p2;
reg   [5:0] tmp_1_reg_1205;
wire   [11:0] tmp_18_cast_cast_fu_493_p1;
reg   [11:0] tmp_18_cast_cast_reg_1210;
wire    ap_CS_fsm_state7;
reg  signed [7:0] krnl_load_reg_1226;
reg  signed [7:0] krnl_load_1_reg_1236;
reg  signed [7:0] krnl_load_2_reg_1241;
reg  signed [15:0] in_load_3_reg_1246;
wire    ap_CS_fsm_state11;
reg  signed [7:0] krnl_load_3_reg_1252;
reg  signed [15:0] in_load_4_reg_1257;
wire    ap_CS_fsm_state12;
reg  signed [7:0] krnl_load_4_reg_1263;
wire   [5:0] col_offset_0_2_fu_524_p2;
reg   [5:0] col_offset_0_2_reg_1268;
reg  signed [15:0] in_load_5_reg_1274;
wire    ap_CS_fsm_state13;
reg  signed [7:0] krnl_load_5_reg_1280;
wire   [11:0] col_offset_0_2_cast_s_fu_530_p1;
reg   [11:0] col_offset_0_2_cast_s_reg_1285;
wire   [0:0] tmp_1_6_fu_543_p2;
reg   [0:0] tmp_1_6_reg_1296;
wire    ap_CS_fsm_state14;
reg   [11:0] out_addr_1_reg_1305;
reg  signed [15:0] in_load_6_reg_1310;
reg  signed [7:0] krnl_load_6_reg_1317;
wire    ap_CS_fsm_state15;
reg  signed [15:0] in_load_7_reg_1327;
reg  signed [7:0] krnl_load_7_reg_1334;
reg  signed [15:0] in_load_8_reg_1339;
wire    ap_CS_fsm_state16;
reg  signed [7:0] krnl_load_8_reg_1346;
wire  signed [15:0] tmp_12_fu_567_p1;
reg  signed [15:0] tmp_12_reg_1351;
wire    ap_CS_fsm_state17;
wire  signed [15:0] tmp_13_fu_830_p2;
reg  signed [15:0] tmp_13_reg_1359;
wire  signed [15:0] tmp_21_0_1_fu_570_p1;
reg  signed [15:0] tmp_21_0_1_reg_1364;
wire  signed [15:0] tmp_22_0_1_fu_836_p2;
reg  signed [15:0] tmp_22_0_1_reg_1372;
wire  signed [15:0] tmp_21_0_1_2_fu_573_p1;
reg  signed [15:0] tmp_21_0_1_2_reg_1377;
wire  signed [15:0] tmp_22_0_1_2_fu_841_p2;
reg  signed [15:0] tmp_22_0_1_2_reg_1385;
wire  signed [15:0] tmp_21_0_2_2_fu_576_p1;
reg  signed [15:0] tmp_21_0_2_2_reg_1390;
wire  signed [15:0] tmp_22_0_2_2_fu_846_p2;
reg  signed [15:0] tmp_22_0_2_2_reg_1398;
wire  signed [15:0] tmp_21_0_0_1_fu_579_p1;
reg  signed [15:0] tmp_21_0_0_1_reg_1403;
wire    ap_CS_fsm_state18;
wire  signed [15:0] tmp_21_0_0_2_fu_582_p1;
reg  signed [15:0] tmp_21_0_0_2_reg_1411;
wire  signed [15:0] tmp_21_0_1_1_fu_585_p1;
reg  signed [15:0] tmp_21_0_1_1_reg_1419;
wire  signed [15:0] tmp_21_0_2_fu_588_p1;
reg  signed [15:0] tmp_21_0_2_reg_1427;
wire  signed [15:0] tmp_21_0_2_1_fu_591_p1;
reg  signed [15:0] tmp_21_0_2_1_reg_1435;
(* use_dsp48 = "no" *) wire   [15:0] tmp_fu_594_p2;
reg   [15:0] tmp_reg_1443;
wire  signed [15:0] grp_fu_867_p3;
reg  signed [15:0] tmp4_reg_1448;
wire  signed [15:0] grp_fu_873_p3;
reg  signed [15:0] tmp5_reg_1453;
wire  signed [15:0] tmp_22_1_fu_886_p2;
reg  signed [15:0] tmp_22_1_reg_1458;
wire    ap_CS_fsm_state19;
wire  signed [15:0] tmp_22_1_1_fu_890_p2;
reg  signed [15:0] tmp_22_1_1_reg_1463;
wire   [5:0] col_offset_1_2_fu_608_p2;
reg   [5:0] col_offset_1_2_reg_1468;
wire   [11:0] col_offset_1_2_cast_s_fu_614_p1;
reg   [11:0] col_offset_1_2_cast_s_reg_1474;
wire    ap_CS_fsm_state20;
(* use_dsp48 = "no" *) wire   [15:0] tmp7_fu_627_p2;
reg   [15:0] tmp7_reg_1485;
wire   [0:0] tmp_2_7_fu_631_p2;
reg   [0:0] tmp_2_7_reg_1490;
reg   [11:0] out_addr_2_reg_1499;
wire  signed [15:0] tmp_22_1_1_2_fu_906_p2;
reg  signed [15:0] tmp_22_1_1_2_reg_1509;
wire    ap_CS_fsm_state24;
wire  signed [15:0] tmp_22_1_2_2_fu_910_p2;
reg  signed [15:0] tmp_22_1_2_2_reg_1514;
wire  signed [15:0] grp_fu_915_p3;
reg  signed [15:0] tmp11_reg_1519;
wire    ap_CS_fsm_state25;
wire  signed [15:0] grp_fu_920_p3;
reg  signed [15:0] tmp12_reg_1524;
wire  signed [15:0] tmp_22_2_fu_933_p2;
reg  signed [15:0] tmp_22_2_reg_1529;
wire    ap_CS_fsm_state26;
wire  signed [15:0] tmp_22_2_1_fu_937_p2;
reg  signed [15:0] tmp_22_2_1_reg_1534;
wire   [5:0] col_offset_2_2_fu_665_p2;
reg   [5:0] col_offset_2_2_reg_1539;
wire   [11:0] col_offset_2_2_cast_s_fu_671_p1;
reg   [11:0] col_offset_2_2_cast_s_reg_1545;
wire    ap_CS_fsm_state27;
(* use_dsp48 = "no" *) wire   [15:0] tmp14_fu_684_p2;
reg   [15:0] tmp14_reg_1556;
wire   [0:0] tmp_3_8_fu_688_p2;
reg   [0:0] tmp_3_8_reg_1561;
wire    ap_CS_fsm_state28;
reg   [11:0] out_addr_3_reg_1570;
reg  signed [15:0] in_load_12_reg_1575;
wire    ap_CS_fsm_state29;
reg  signed [15:0] in_load_13_reg_1587;
reg  signed [15:0] in_load_14_reg_1594;
wire    ap_CS_fsm_state30;
wire  signed [15:0] tmp_22_2_1_2_fu_954_p2;
reg  signed [15:0] tmp_22_2_1_2_reg_1601;
wire    ap_CS_fsm_state31;
wire  signed [15:0] tmp_22_2_2_2_fu_959_p2;
reg  signed [15:0] tmp_22_2_2_2_reg_1606;
wire  signed [15:0] grp_fu_963_p3;
reg  signed [15:0] tmp18_reg_1611;
wire    ap_CS_fsm_state32;
wire  signed [15:0] grp_fu_969_p3;
reg  signed [15:0] tmp19_reg_1616;
wire  signed [15:0] tmp_22_3_fu_980_p2;
reg  signed [15:0] tmp_22_3_reg_1621;
wire    ap_CS_fsm_state33;
wire  signed [15:0] tmp_22_3_1_fu_985_p2;
reg  signed [15:0] tmp_22_3_1_reg_1626;
wire   [5:0] col_offset_3_2_fu_722_p2;
reg   [5:0] col_offset_3_2_reg_1631;
wire   [11:0] col_offset_3_2_cast_s_fu_728_p1;
reg   [11:0] col_offset_3_2_cast_s_reg_1637;
wire    ap_CS_fsm_state34;
(* use_dsp48 = "no" *) wire   [15:0] tmp21_fu_741_p2;
reg   [15:0] tmp21_reg_1648;
wire   [0:0] tmp_4_9_fu_745_p2;
reg   [0:0] tmp_4_9_reg_1653;
wire    ap_CS_fsm_state35;
reg   [11:0] out_addr_4_reg_1662;
reg  signed [15:0] in_load_15_reg_1667;
wire    ap_CS_fsm_state36;
reg  signed [15:0] in_load_16_reg_1678;
reg  signed [15:0] in_load_17_reg_1684;
wire    ap_CS_fsm_state37;
wire  signed [15:0] tmp_22_3_1_2_fu_1003_p2;
reg  signed [15:0] tmp_22_3_1_2_reg_1690;
wire    ap_CS_fsm_state38;
wire  signed [15:0] tmp_22_3_2_2_fu_1007_p2;
reg  signed [15:0] tmp_22_3_2_2_reg_1695;
wire  signed [15:0] grp_fu_1011_p3;
reg  signed [15:0] tmp25_reg_1700;
wire    ap_CS_fsm_state39;
wire  signed [15:0] grp_fu_1016_p3;
reg  signed [15:0] tmp26_reg_1705;
wire  signed [15:0] tmp_22_4_fu_1027_p2;
reg  signed [15:0] tmp_22_4_reg_1710;
wire    ap_CS_fsm_state40;
wire  signed [15:0] tmp_22_4_1_fu_1031_p2;
reg  signed [15:0] tmp_22_4_1_reg_1715;
wire  signed [15:0] tmp_22_4_1_2_fu_1035_p2;
reg  signed [15:0] tmp_22_4_1_2_reg_1720;
wire   [5:0] col_offset_4_2_fu_779_p2;
reg   [5:0] col_offset_4_2_reg_1725;
wire   [11:0] tmp_26_fu_789_p2;
reg   [11:0] tmp_26_reg_1730;
wire   [11:0] tmp_27_fu_794_p2;
reg   [11:0] tmp_27_reg_1735;
wire   [11:0] tmp_28_fu_799_p2;
reg   [11:0] tmp_28_reg_1740;
wire    ap_CS_fsm_state41;
(* use_dsp48 = "no" *) wire   [15:0] tmp28_fu_808_p2;
reg   [15:0] tmp28_reg_1750;
wire  signed [15:0] grp_fu_1051_p3;
reg  signed [15:0] tmp32_reg_1755;
wire  signed [15:0] tmp_22_4_2_2_fu_1056_p2;
reg  signed [15:0] tmp_22_4_2_2_reg_1770;
wire    ap_CS_fsm_state45;
wire  signed [15:0] grp_fu_1061_p3;
reg  signed [15:0] tmp33_reg_1775;
wire    ap_CS_fsm_state46;
reg   [5:0] r1_reg_364;
reg   [5:0] c_reg_376;
wire    ap_CS_fsm_state47;
wire   [31:0] tmp_6_cast_fu_455_p1;
wire   [31:0] tmp_7_cast_fu_465_p1;
wire   [31:0] tmp_8_cast_fu_476_p1;
wire   [31:0] tmp_9_cast_fu_501_p1;
wire   [31:0] tmp_10_cast_fu_510_p1;
wire   [31:0] tmp_11_cast_fu_519_p1;
wire   [31:0] tmp_14_cast_fu_538_p1;
wire   [31:0] tmp_15_cast_fu_552_p1;
wire   [31:0] tmp_16_cast_fu_562_p1;
wire   [31:0] tmp_17_cast_fu_622_p1;
wire   [31:0] tmp_18_cast1_fu_640_p1;
wire   [31:0] tmp_19_cast_fu_650_p1;
wire   [31:0] tmp_20_cast_fu_679_p1;
wire   [31:0] tmp_21_cast_fu_697_p1;
wire   [31:0] tmp_22_cast_fu_707_p1;
wire   [31:0] tmp_23_cast_fu_736_p1;
wire   [31:0] tmp_24_cast_fu_754_p1;
wire   [31:0] tmp_25_cast_fu_764_p1;
wire   [31:0] tmp_28_cast_fu_804_p1;
wire   [31:0] tmp_29_cast_fu_812_p1;
wire   [31:0] tmp_30_cast_fu_816_p1;
wire   [15:0] sum_2_0_2_2_fu_602_p2;
wire   [15:0] sum_2_1_2_2_fu_659_p2;
wire   [15:0] sum_2_2_2_2_fu_716_p2;
wire   [15:0] sum_2_3_2_2_fu_773_p2;
wire   [15:0] sum_2_4_2_2_fu_824_p2;
wire   [5:0] grp_fu_404_p0;
wire   [6:0] grp_fu_404_p1;
wire   [5:0] grp_fu_431_p0;
wire   [6:0] grp_fu_431_p1;
wire   [5:0] grp_fu_440_p0;
wire   [6:0] grp_fu_440_p1;
wire   [11:0] c_cast_cast_fu_446_p1;
wire   [11:0] tmp_6_fu_450_p2;
wire   [11:0] tmp_7_fu_460_p2;
wire   [11:0] tmp_8_fu_471_p2;
wire   [11:0] tmp_9_fu_496_p2;
wire   [11:0] tmp_10_fu_506_p2;
wire   [11:0] tmp_11_fu_515_p2;
wire   [11:0] tmp_14_fu_533_p2;
wire   [11:0] tmp_15_fu_548_p2;
wire   [11:0] tmp_16_fu_558_p2;
wire  signed [15:0] grp_fu_851_p3;
wire  signed [15:0] grp_fu_859_p3;
(* use_dsp48 = "no" *) wire   [15:0] tmp3_fu_598_p2;
wire   [11:0] tmp_17_fu_617_p2;
wire  signed [15:0] grp_fu_894_p3;
wire  signed [15:0] grp_fu_900_p3;
wire   [11:0] tmp_18_fu_636_p2;
wire   [11:0] tmp_19_fu_646_p2;
(* use_dsp48 = "no" *) wire   [15:0] tmp10_fu_655_p2;
wire   [11:0] tmp_20_fu_674_p2;
wire  signed [15:0] grp_fu_942_p3;
wire  signed [15:0] grp_fu_948_p3;
wire   [11:0] tmp_21_fu_693_p2;
wire   [11:0] tmp_22_fu_703_p2;
(* use_dsp48 = "no" *) wire   [15:0] tmp17_fu_712_p2;
wire   [11:0] tmp_23_fu_731_p2;
wire  signed [15:0] grp_fu_989_p3;
wire  signed [15:0] grp_fu_996_p3;
wire   [11:0] tmp_24_fu_750_p2;
wire   [11:0] tmp_25_fu_760_p2;
(* use_dsp48 = "no" *) wire   [15:0] tmp24_fu_769_p2;
wire   [11:0] col_offset_4_2_cast_s_fu_785_p1;
wire  signed [15:0] grp_fu_1039_p3;
wire  signed [15:0] grp_fu_1045_p3;
(* use_dsp48 = "no" *) wire   [15:0] tmp31_fu_820_p2;
wire  signed [15:0] grp_fu_879_p3;
wire  signed [7:0] tmp_22_1_fu_886_p0;
wire  signed [7:0] tmp_22_1_1_fu_890_p0;
wire  signed [7:0] grp_fu_894_p0;
wire  signed [7:0] grp_fu_900_p0;
wire  signed [7:0] tmp_22_1_1_2_fu_906_p0;
wire  signed [7:0] tmp_22_1_2_2_fu_910_p0;
wire  signed [7:0] grp_fu_915_p0;
wire  signed [7:0] grp_fu_920_p0;
wire  signed [15:0] grp_fu_926_p3;
wire  signed [7:0] grp_fu_926_p0;
wire  signed [7:0] tmp_22_2_fu_933_p0;
wire  signed [7:0] tmp_22_2_1_fu_937_p0;
wire  signed [7:0] grp_fu_942_p0;
wire  signed [7:0] grp_fu_948_p0;
wire  signed [7:0] tmp_22_2_1_2_fu_954_p0;
wire  signed [7:0] tmp_22_2_2_2_fu_959_p0;
wire  signed [7:0] grp_fu_963_p0;
wire  signed [7:0] grp_fu_969_p0;
wire  signed [15:0] grp_fu_974_p3;
wire  signed [7:0] grp_fu_974_p0;
wire  signed [7:0] tmp_22_3_fu_980_p0;
wire  signed [7:0] tmp_22_3_1_fu_985_p0;
wire  signed [7:0] grp_fu_989_p0;
wire  signed [7:0] grp_fu_996_p0;
wire  signed [7:0] tmp_22_3_1_2_fu_1003_p0;
wire  signed [7:0] tmp_22_3_2_2_fu_1007_p0;
wire  signed [7:0] grp_fu_1011_p0;
wire  signed [7:0] grp_fu_1016_p0;
wire  signed [15:0] grp_fu_1021_p3;
wire  signed [7:0] grp_fu_1021_p0;
wire  signed [7:0] tmp_22_4_fu_1027_p0;
wire  signed [7:0] tmp_22_4_1_fu_1031_p0;
wire  signed [7:0] tmp_22_4_1_2_fu_1035_p0;
wire  signed [7:0] grp_fu_1039_p0;
wire  signed [7:0] grp_fu_1045_p0;
wire  signed [7:0] grp_fu_1051_p0;
wire  signed [7:0] tmp_22_4_2_2_fu_1056_p0;
wire  signed [7:0] grp_fu_1061_p0;
wire  signed [15:0] grp_fu_1067_p3;
wire  signed [7:0] grp_fu_1067_p0;
reg   [46:0] ap_NS_fsm;
wire   [11:0] grp_fu_404_p00;
wire   [11:0] grp_fu_431_p00;
wire   [11:0] grp_fu_440_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 47'd1;
end

convolve_conv_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONV_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONV_DATA_WIDTH ))
convolve_conv_s_axi_U(
    .AWVALID(s_axi_conv_AWVALID),
    .AWREADY(s_axi_conv_AWREADY),
    .AWADDR(s_axi_conv_AWADDR),
    .WVALID(s_axi_conv_WVALID),
    .WREADY(s_axi_conv_WREADY),
    .WDATA(s_axi_conv_WDATA),
    .WSTRB(s_axi_conv_WSTRB),
    .ARVALID(s_axi_conv_ARVALID),
    .ARREADY(s_axi_conv_ARREADY),
    .ARADDR(s_axi_conv_ARADDR),
    .RVALID(s_axi_conv_RVALID),
    .RREADY(s_axi_conv_RREADY),
    .RDATA(s_axi_conv_RDATA),
    .RRESP(s_axi_conv_RRESP),
    .BVALID(s_axi_conv_BVALID),
    .BREADY(s_axi_conv_BREADY),
    .BRESP(s_axi_conv_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .in_r_address0(in_r_address0),
    .in_r_ce0(in_r_ce0),
    .in_r_q0(in_r_q0),
    .out_r_address0(out_r_address0),
    .out_r_ce0(out_r_ce0),
    .out_r_we0(out_r_we0),
    .out_r_d0(out_r_d0),
    .krnl_address0(krnl_address0),
    .krnl_ce0(krnl_ce0),
    .krnl_q0(krnl_q0)
);

convolve_mul_6ns_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 12 ))
convolve_mul_6ns_bkb_U0(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_404_p0),
    .din1(grp_fu_404_p1),
    .ce(1'b1),
    .dout(grp_fu_404_p2)
);

convolve_mul_6ns_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 12 ))
convolve_mul_6ns_bkb_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_431_p0),
    .din1(grp_fu_431_p1),
    .ce(1'b1),
    .dout(grp_fu_431_p2)
);

convolve_mul_6ns_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 12 ))
convolve_mul_6ns_bkb_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_440_p0),
    .din1(grp_fu_440_p1),
    .ce(1'b1),
    .dout(grp_fu_440_p2)
);

convolve_mul_mul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolve_mul_mul_cud_U3(
    .din0(krnl_load_reg_1226),
    .din1(reg_388),
    .dout(tmp_13_fu_830_p2)
);

convolve_mul_mul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolve_mul_mul_cud_U4(
    .din0(krnl_load_3_reg_1252),
    .din1(in_load_3_reg_1246),
    .dout(tmp_22_0_1_fu_836_p2)
);

convolve_mul_mul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolve_mul_mul_cud_U5(
    .din0(krnl_load_5_reg_1280),
    .din1(in_load_5_reg_1274),
    .dout(tmp_22_0_1_2_fu_841_p2)
);

convolve_mul_mul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolve_mul_mul_cud_U6(
    .din0(krnl_load_8_reg_1346),
    .din1(in_load_8_reg_1339),
    .dout(tmp_22_0_2_2_fu_846_p2)
);

convolve_mac_muladEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolve_mac_muladEe_U7(
    .din0(krnl_load_1_reg_1236),
    .din1(reg_392),
    .din2(tmp_13_reg_1359),
    .dout(grp_fu_851_p3)
);

convolve_mac_muladEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolve_mac_muladEe_U8(
    .din0(krnl_load_2_reg_1241),
    .din1(reg_396),
    .din2(tmp_22_0_1_reg_1372),
    .dout(grp_fu_859_p3)
);

convolve_mac_muladEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolve_mac_muladEe_U9(
    .din0(krnl_load_4_reg_1263),
    .din1(in_load_4_reg_1257),
    .din2(tmp_22_0_1_2_reg_1385),
    .dout(grp_fu_867_p3)
);

convolve_mac_muladEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolve_mac_muladEe_U10(
    .din0(krnl_load_6_reg_1317),
    .din1(in_load_6_reg_1310),
    .din2(grp_fu_879_p3),
    .dout(grp_fu_873_p3)
);

convolve_mac_muladEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolve_mac_muladEe_U11(
    .din0(krnl_load_7_reg_1334),
    .din1(in_load_7_reg_1327),
    .din2(tmp_22_0_2_2_reg_1398),
    .dout(grp_fu_879_p3)
);

convolve_mul_mul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolve_mul_mul_cud_U12(
    .din0(tmp_22_1_fu_886_p0),
    .din1(in_load_3_reg_1246),
    .dout(tmp_22_1_fu_886_p2)
);

convolve_mul_mul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolve_mul_mul_cud_U13(
    .din0(tmp_22_1_1_fu_890_p0),
    .din1(in_load_6_reg_1310),
    .dout(tmp_22_1_1_fu_890_p2)
);

convolve_mac_muladEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolve_mac_muladEe_U14(
    .din0(grp_fu_894_p0),
    .din1(in_load_4_reg_1257),
    .din2(tmp_22_1_reg_1458),
    .dout(grp_fu_894_p3)
);

convolve_mac_muladEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolve_mac_muladEe_U15(
    .din0(grp_fu_900_p0),
    .din1(in_load_5_reg_1274),
    .din2(tmp_22_1_1_reg_1463),
    .dout(grp_fu_900_p3)
);

convolve_mul_mul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolve_mul_mul_cud_U16(
    .din0(tmp_22_1_1_2_fu_906_p0),
    .din1(in_load_8_reg_1339),
    .dout(tmp_22_1_1_2_fu_906_p2)
);

convolve_mul_mul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolve_mul_mul_cud_U17(
    .din0(tmp_22_1_2_2_fu_910_p0),
    .din1(reg_396),
    .dout(tmp_22_1_2_2_fu_910_p2)
);

convolve_mac_muladEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolve_mac_muladEe_U18(
    .din0(grp_fu_915_p0),
    .din1(in_load_7_reg_1327),
    .din2(tmp_22_1_1_2_reg_1509),
    .dout(grp_fu_915_p3)
);

convolve_mac_muladEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolve_mac_muladEe_U19(
    .din0(grp_fu_920_p0),
    .din1(reg_388),
    .din2(grp_fu_926_p3),
    .dout(grp_fu_920_p3)
);

convolve_mac_muladEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolve_mac_muladEe_U20(
    .din0(grp_fu_926_p0),
    .din1(reg_392),
    .din2(tmp_22_1_2_2_reg_1514),
    .dout(grp_fu_926_p3)
);

convolve_mul_mul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolve_mul_mul_cud_U21(
    .din0(tmp_22_2_fu_933_p0),
    .din1(in_load_6_reg_1310),
    .dout(tmp_22_2_fu_933_p2)
);

convolve_mul_mul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolve_mul_mul_cud_U22(
    .din0(tmp_22_2_1_fu_937_p0),
    .din1(reg_388),
    .dout(tmp_22_2_1_fu_937_p2)
);

convolve_mac_muladEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolve_mac_muladEe_U23(
    .din0(grp_fu_942_p0),
    .din1(in_load_7_reg_1327),
    .din2(tmp_22_2_reg_1529),
    .dout(grp_fu_942_p3)
);

convolve_mac_muladEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolve_mac_muladEe_U24(
    .din0(grp_fu_948_p0),
    .din1(in_load_8_reg_1339),
    .din2(tmp_22_2_1_reg_1534),
    .dout(grp_fu_948_p3)
);

convolve_mul_mul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolve_mul_mul_cud_U25(
    .din0(tmp_22_2_1_2_fu_954_p0),
    .din1(reg_396),
    .dout(tmp_22_2_1_2_fu_954_p2)
);

convolve_mul_mul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolve_mul_mul_cud_U26(
    .din0(tmp_22_2_2_2_fu_959_p0),
    .din1(in_load_14_reg_1594),
    .dout(tmp_22_2_2_2_fu_959_p2)
);

convolve_mac_muladEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolve_mac_muladEe_U27(
    .din0(grp_fu_963_p0),
    .din1(reg_392),
    .din2(tmp_22_2_1_2_reg_1601),
    .dout(grp_fu_963_p3)
);

convolve_mac_muladEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolve_mac_muladEe_U28(
    .din0(grp_fu_969_p0),
    .din1(in_load_12_reg_1575),
    .din2(grp_fu_974_p3),
    .dout(grp_fu_969_p3)
);

convolve_mac_muladEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolve_mac_muladEe_U29(
    .din0(grp_fu_974_p0),
    .din1(in_load_13_reg_1587),
    .din2(tmp_22_2_2_2_reg_1606),
    .dout(grp_fu_974_p3)
);

convolve_mul_mul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolve_mul_mul_cud_U30(
    .din0(tmp_22_3_fu_980_p0),
    .din1(reg_388),
    .dout(tmp_22_3_fu_980_p2)
);

convolve_mul_mul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolve_mul_mul_cud_U31(
    .din0(tmp_22_3_1_fu_985_p0),
    .din1(in_load_12_reg_1575),
    .dout(tmp_22_3_1_fu_985_p2)
);

convolve_mac_muladEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolve_mac_muladEe_U32(
    .din0(grp_fu_989_p0),
    .din1(reg_392),
    .din2(tmp_22_3_reg_1621),
    .dout(grp_fu_989_p3)
);

convolve_mac_muladEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolve_mac_muladEe_U33(
    .din0(grp_fu_996_p0),
    .din1(reg_396),
    .din2(tmp_22_3_1_reg_1626),
    .dout(grp_fu_996_p3)
);

convolve_mul_mul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolve_mul_mul_cud_U34(
    .din0(tmp_22_3_1_2_fu_1003_p0),
    .din1(in_load_14_reg_1594),
    .dout(tmp_22_3_1_2_fu_1003_p2)
);

convolve_mul_mul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolve_mul_mul_cud_U35(
    .din0(tmp_22_3_2_2_fu_1007_p0),
    .din1(in_load_17_reg_1684),
    .dout(tmp_22_3_2_2_fu_1007_p2)
);

convolve_mac_muladEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolve_mac_muladEe_U36(
    .din0(grp_fu_1011_p0),
    .din1(in_load_13_reg_1587),
    .din2(tmp_22_3_1_2_reg_1690),
    .dout(grp_fu_1011_p3)
);

convolve_mac_muladEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolve_mac_muladEe_U37(
    .din0(grp_fu_1016_p0),
    .din1(in_load_15_reg_1667),
    .din2(grp_fu_1021_p3),
    .dout(grp_fu_1016_p3)
);

convolve_mac_muladEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolve_mac_muladEe_U38(
    .din0(grp_fu_1021_p0),
    .din1(in_load_16_reg_1678),
    .din2(tmp_22_3_2_2_reg_1695),
    .dout(grp_fu_1021_p3)
);

convolve_mul_mul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolve_mul_mul_cud_U39(
    .din0(tmp_22_4_fu_1027_p0),
    .din1(in_load_12_reg_1575),
    .dout(tmp_22_4_fu_1027_p2)
);

convolve_mul_mul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolve_mul_mul_cud_U40(
    .din0(tmp_22_4_1_fu_1031_p0),
    .din1(in_load_15_reg_1667),
    .dout(tmp_22_4_1_fu_1031_p2)
);

convolve_mul_mul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolve_mul_mul_cud_U41(
    .din0(tmp_22_4_1_2_fu_1035_p0),
    .din1(in_load_17_reg_1684),
    .dout(tmp_22_4_1_2_fu_1035_p2)
);

convolve_mac_muladEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolve_mac_muladEe_U42(
    .din0(grp_fu_1039_p0),
    .din1(in_load_13_reg_1587),
    .din2(tmp_22_4_reg_1710),
    .dout(grp_fu_1039_p3)
);

convolve_mac_muladEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolve_mac_muladEe_U43(
    .din0(grp_fu_1045_p0),
    .din1(in_load_14_reg_1594),
    .din2(tmp_22_4_1_reg_1715),
    .dout(grp_fu_1045_p3)
);

convolve_mac_muladEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolve_mac_muladEe_U44(
    .din0(grp_fu_1051_p0),
    .din1(in_load_16_reg_1678),
    .din2(tmp_22_4_1_2_reg_1720),
    .dout(grp_fu_1051_p3)
);

convolve_mul_mul_cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolve_mul_mul_cud_U45(
    .din0(tmp_22_4_2_2_fu_1056_p0),
    .din1(reg_396),
    .dout(tmp_22_4_2_2_fu_1056_p2)
);

convolve_mac_muladEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolve_mac_muladEe_U46(
    .din0(grp_fu_1061_p0),
    .din1(reg_388),
    .din2(grp_fu_1067_p3),
    .dout(grp_fu_1061_p3)
);

convolve_mac_muladEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolve_mac_muladEe_U47(
    .din0(grp_fu_1067_p0),
    .din1(reg_392),
    .din2(tmp_22_4_2_2_reg_1770),
    .dout(grp_fu_1067_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        c_reg_376 <= 6'd1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        c_reg_376 <= col_offset_4_2_reg_1725;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state40) & ((1'd0 == tmp_s_reg_1201) | (1'd0 == tmp_1_6_reg_1296) | (1'd0 == tmp_2_7_reg_1490) | (1'd0 == tmp_3_8_reg_1561) | (1'd0 == tmp_4_9_reg_1653)))) begin
        r1_reg_364 <= r_reg_1143;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        r1_reg_364 <= 6'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        col_offset_0_2_cast_s_reg_1285[5 : 0] <= col_offset_0_2_cast_s_fu_530_p1[5 : 0];
        in_load_5_reg_1274 <= in_r_q0;
        krnl_load_5_reg_1280 <= krnl_q0;
        tmp_1_6_reg_1296 <= tmp_1_6_fu_543_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        col_offset_0_2_reg_1268 <= col_offset_0_2_fu_524_p2;
        in_load_4_reg_1257 <= in_r_q0;
        krnl_load_4_reg_1263 <= krnl_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        col_offset_1_2_cast_s_reg_1474[5 : 0] <= col_offset_1_2_cast_s_fu_614_p1[5 : 0];
        tmp7_reg_1485 <= tmp7_fu_627_p2;
        tmp_2_7_reg_1490 <= tmp_2_7_fu_631_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) & (1'd1 == tmp_1_6_reg_1296))) begin
        col_offset_1_2_reg_1468 <= col_offset_1_2_fu_608_p2;
        tmp_22_1_1_reg_1463 <= tmp_22_1_1_fu_890_p2;
        tmp_22_1_reg_1458 <= tmp_22_1_fu_886_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        col_offset_2_2_cast_s_reg_1545[5 : 0] <= col_offset_2_2_cast_s_fu_671_p1[5 : 0];
        tmp14_reg_1556 <= tmp14_fu_684_p2;
        tmp_3_8_reg_1561 <= tmp_3_8_fu_688_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) & (1'd1 == tmp_2_7_reg_1490))) begin
        col_offset_2_2_reg_1539 <= col_offset_2_2_fu_665_p2;
        tmp_22_2_1_reg_1534 <= tmp_22_2_1_fu_937_p2;
        tmp_22_2_reg_1529 <= tmp_22_2_fu_933_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        col_offset_3_2_cast_s_reg_1637[5 : 0] <= col_offset_3_2_cast_s_fu_728_p1[5 : 0];
        tmp21_reg_1648 <= tmp21_fu_741_p2;
        tmp_4_9_reg_1653 <= tmp_4_9_fu_745_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state33) & (1'd1 == tmp_3_8_reg_1561))) begin
        col_offset_3_2_reg_1631 <= col_offset_3_2_fu_722_p2;
        tmp_22_3_1_reg_1626 <= tmp_22_3_1_fu_985_p2;
        tmp_22_3_reg_1621 <= tmp_22_3_fu_980_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == tmp_1_6_reg_1296) & (1'd1 == tmp_2_7_reg_1490) & (1'd1 == tmp_3_8_reg_1561) & (1'b1 == ap_CS_fsm_state40) & (tmp_s_reg_1201 == 1'd1) & (1'd1 == tmp_4_9_reg_1653))) begin
        col_offset_4_2_reg_1725 <= col_offset_4_2_fu_779_p2;
        tmp_22_4_1_2_reg_1720 <= tmp_22_4_1_2_fu_1035_p2;
        tmp_22_4_1_reg_1715 <= tmp_22_4_1_fu_1031_p2;
        tmp_22_4_reg_1710 <= tmp_22_4_fu_1027_p2;
        tmp_26_reg_1730 <= tmp_26_fu_789_p2;
        tmp_27_reg_1735 <= tmp_27_fu_794_p2;
        tmp_28_reg_1740 <= tmp_28_fu_799_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        in_addr_3_reg_1181 <= tmp_6_cast_fu_455_p1;
        in_addr_4_reg_1186 <= tmp_7_cast_fu_465_p1;
        in_addr_5_reg_1191 <= tmp_8_cast_fu_476_p1;
        out_addr_reg_1196 <= tmp_7_cast_fu_465_p1;
        tmp_s_reg_1201 <= tmp_s_fu_481_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        in_load_12_reg_1575 <= in_r_q0;
        out_addr_3_reg_1570 <= tmp_21_cast_fu_697_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        in_load_13_reg_1587 <= in_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        in_load_14_reg_1594 <= in_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        in_load_15_reg_1667 <= in_r_q0;
        out_addr_4_reg_1662 <= tmp_24_cast_fu_754_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        in_load_16_reg_1678 <= in_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        in_load_17_reg_1684 <= in_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        in_load_3_reg_1246 <= in_r_q0;
        krnl_load_3_reg_1252 <= krnl_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        in_load_6_reg_1310 <= in_r_q0;
        krnl_load_6_reg_1317 <= krnl_q0;
        out_addr_1_reg_1305 <= tmp_15_cast_fu_552_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        in_load_7_reg_1327 <= in_r_q0;
        krnl_load_7_reg_1334 <= krnl_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        in_load_8_reg_1339 <= in_r_q0;
        krnl_load_8_reg_1346 <= krnl_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        krnl_load_1_reg_1236 <= krnl_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        krnl_load_2_reg_1241 <= krnl_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        krnl_load_reg_1226 <= krnl_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        out_addr_2_reg_1499 <= tmp_18_cast1_fu_640_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (exitcond_fu_410_p2 == 1'd0))) begin
        r_reg_1143 <= r_fu_422_p2;
        tmp_3_reg_1138 <= tmp_3_fu_416_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state42))) begin
        reg_388 <= in_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state43))) begin
        reg_392 <= in_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state44))) begin
        reg_396 <= in_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        tmp11_reg_1519 <= grp_fu_915_p3;
        tmp12_reg_1524 <= grp_fu_920_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        tmp18_reg_1611 <= grp_fu_963_p3;
        tmp19_reg_1616 <= grp_fu_969_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        tmp25_reg_1700 <= grp_fu_1011_p3;
        tmp26_reg_1705 <= grp_fu_1016_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        tmp28_reg_1750 <= tmp28_fu_808_p2;
        tmp32_reg_1755 <= grp_fu_1051_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        tmp33_reg_1775 <= grp_fu_1061_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        tmp4_reg_1448 <= grp_fu_867_p3;
        tmp5_reg_1453 <= grp_fu_873_p3;
        tmp_21_0_0_1_reg_1403 <= tmp_21_0_0_1_fu_579_p1;
        tmp_21_0_0_2_reg_1411 <= tmp_21_0_0_2_fu_582_p1;
        tmp_21_0_1_1_reg_1419 <= tmp_21_0_1_1_fu_585_p1;
        tmp_21_0_2_1_reg_1435 <= tmp_21_0_2_1_fu_591_p1;
        tmp_21_0_2_reg_1427 <= tmp_21_0_2_fu_588_p1;
        tmp_reg_1443 <= tmp_fu_594_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        tmp_12_reg_1351 <= tmp_12_fu_567_p1;
        tmp_13_reg_1359 <= tmp_13_fu_830_p2;
        tmp_21_0_1_2_reg_1377 <= tmp_21_0_1_2_fu_573_p1;
        tmp_21_0_1_reg_1364 <= tmp_21_0_1_fu_570_p1;
        tmp_21_0_2_2_reg_1390 <= tmp_21_0_2_2_fu_576_p1;
        tmp_22_0_1_2_reg_1385 <= tmp_22_0_1_2_fu_841_p2;
        tmp_22_0_1_reg_1372 <= tmp_22_0_1_fu_836_p2;
        tmp_22_0_2_2_reg_1398 <= tmp_22_0_2_2_fu_846_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_18_cast_cast_reg_1210[5 : 0] <= tmp_18_cast_cast_fu_493_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (tmp_s_fu_481_p2 == 1'd1))) begin
        tmp_1_reg_1205 <= tmp_1_fu_487_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        tmp_22_1_1_2_reg_1509 <= tmp_22_1_1_2_fu_906_p2;
        tmp_22_1_2_2_reg_1514 <= tmp_22_1_2_2_fu_910_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        tmp_22_2_1_2_reg_1601 <= tmp_22_2_1_2_fu_954_p2;
        tmp_22_2_2_2_reg_1606 <= tmp_22_2_2_2_fu_959_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        tmp_22_3_1_2_reg_1690 <= tmp_22_3_1_2_fu_1003_p2;
        tmp_22_3_2_2_reg_1695 <= tmp_22_3_2_2_fu_1007_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        tmp_22_4_2_2_reg_1770 <= tmp_22_4_2_2_fu_1056_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_2_reg_1124 <= grp_fu_404_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp_4_reg_1159 <= grp_fu_431_p2;
        tmp_5_reg_1170 <= grp_fu_440_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (exitcond_fu_410_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (exitcond_fu_410_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        in_r_address0 = tmp_30_cast_fu_816_p1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        in_r_address0 = tmp_29_cast_fu_812_p1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        in_r_address0 = tmp_28_cast_fu_804_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        in_r_address0 = tmp_25_cast_fu_764_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        in_r_address0 = tmp_24_cast_fu_754_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        in_r_address0 = tmp_23_cast_fu_736_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        in_r_address0 = tmp_22_cast_fu_707_p1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        in_r_address0 = tmp_21_cast_fu_697_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        in_r_address0 = tmp_20_cast_fu_679_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        in_r_address0 = tmp_19_cast_fu_650_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        in_r_address0 = tmp_18_cast1_fu_640_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        in_r_address0 = tmp_17_cast_fu_622_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        in_r_address0 = tmp_16_cast_fu_562_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        in_r_address0 = tmp_15_cast_fu_552_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        in_r_address0 = tmp_14_cast_fu_538_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        in_r_address0 = in_addr_5_reg_1191;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        in_r_address0 = in_addr_4_reg_1186;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        in_r_address0 = in_addr_3_reg_1181;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        in_r_address0 = tmp_11_cast_fu_519_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        in_r_address0 = tmp_10_cast_fu_510_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        in_r_address0 = tmp_9_cast_fu_501_p1;
    end else begin
        in_r_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state41))) begin
        in_r_ce0 = 1'b1;
    end else begin
        in_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        krnl_address0 = 32'd8;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        krnl_address0 = 32'd5;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        krnl_address0 = 32'd2;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        krnl_address0 = 32'd7;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        krnl_address0 = 32'd4;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        krnl_address0 = 32'd1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        krnl_address0 = 32'd6;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        krnl_address0 = 32'd3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        krnl_address0 = 32'd0;
    end else begin
        krnl_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15))) begin
        krnl_ce0 = 1'b1;
    end else begin
        krnl_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        out_r_address0 = out_addr_4_reg_1662;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        out_r_address0 = out_addr_3_reg_1570;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        out_r_address0 = out_addr_2_reg_1499;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        out_r_address0 = out_addr_1_reg_1305;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        out_r_address0 = out_addr_reg_1196;
    end else begin
        out_r_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state47))) begin
        out_r_ce0 = 1'b1;
    end else begin
        out_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        out_r_d0 = sum_2_4_2_2_fu_824_p2;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        out_r_d0 = sum_2_3_2_2_fu_773_p2;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        out_r_d0 = sum_2_2_2_2_fu_716_p2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        out_r_d0 = sum_2_1_2_2_fu_659_p2;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        out_r_d0 = sum_2_0_2_2_fu_602_p2;
    end else begin
        out_r_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state47) | ((1'd1 == tmp_1_6_reg_1296) & (1'd1 == tmp_2_7_reg_1490) & (1'd1 == tmp_3_8_reg_1561) & (1'b1 == ap_CS_fsm_state40) & (tmp_s_reg_1201 == 1'd1)))) begin
        out_r_we0 = 1'b1;
    end else begin
        out_r_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (exitcond_fu_410_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (1'd0 == tmp_s_fu_481_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            if (((1'b1 == ap_CS_fsm_state19) & (1'd0 == tmp_1_6_reg_1296))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            if (((1'b1 == ap_CS_fsm_state26) & (1'd0 == tmp_2_7_reg_1490))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            if (((1'b1 == ap_CS_fsm_state33) & (1'd0 == tmp_3_8_reg_1561))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            if (((1'b1 == ap_CS_fsm_state40) & ((1'd0 == tmp_s_reg_1201) | (1'd0 == tmp_1_6_reg_1296) | (1'd0 == tmp_2_7_reg_1490) | (1'd0 == tmp_3_8_reg_1561) | (1'd0 == tmp_4_9_reg_1653)))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign c_cast_cast_fu_446_p1 = c_reg_376;

assign col_offset_0_2_cast_s_fu_530_p1 = col_offset_0_2_reg_1268;

assign col_offset_0_2_fu_524_p2 = (c_reg_376 + 6'd1);

assign col_offset_1_2_cast_s_fu_614_p1 = col_offset_1_2_reg_1468;

assign col_offset_1_2_fu_608_p2 = (c_reg_376 + 6'd2);

assign col_offset_2_2_cast_s_fu_671_p1 = col_offset_2_2_reg_1539;

assign col_offset_2_2_fu_665_p2 = (c_reg_376 + 6'd3);

assign col_offset_3_2_cast_s_fu_728_p1 = col_offset_3_2_reg_1631;

assign col_offset_3_2_fu_722_p2 = (c_reg_376 + 6'd4);

assign col_offset_4_2_cast_s_fu_785_p1 = col_offset_4_2_fu_779_p2;

assign col_offset_4_2_fu_779_p2 = (c_reg_376 + 6'd5);

assign exitcond_fu_410_p2 = ((r1_reg_364 == 6'd49) ? 1'b1 : 1'b0);

assign grp_fu_1011_p0 = tmp_21_0_1_1_reg_1419;

assign grp_fu_1016_p0 = tmp_21_0_2_reg_1427;

assign grp_fu_1021_p0 = tmp_21_0_2_1_reg_1435;

assign grp_fu_1039_p0 = tmp_21_0_0_1_reg_1403;

assign grp_fu_1045_p0 = tmp_21_0_0_2_reg_1411;

assign grp_fu_1051_p0 = tmp_21_0_1_1_reg_1419;

assign grp_fu_1061_p0 = tmp_21_0_2_reg_1427;

assign grp_fu_1067_p0 = tmp_21_0_2_1_reg_1435;

assign grp_fu_404_p0 = grp_fu_404_p00;

assign grp_fu_404_p00 = r1_reg_364;

assign grp_fu_404_p1 = 12'd50;

assign grp_fu_431_p0 = grp_fu_431_p00;

assign grp_fu_431_p00 = tmp_3_reg_1138;

assign grp_fu_431_p1 = 12'd50;

assign grp_fu_440_p0 = grp_fu_440_p00;

assign grp_fu_440_p00 = r_reg_1143;

assign grp_fu_440_p1 = 12'd50;

assign grp_fu_894_p0 = tmp_21_0_0_1_reg_1403;

assign grp_fu_900_p0 = tmp_21_0_0_2_reg_1411;

assign grp_fu_915_p0 = tmp_21_0_1_1_reg_1419;

assign grp_fu_920_p0 = tmp_21_0_2_reg_1427;

assign grp_fu_926_p0 = tmp_21_0_2_1_reg_1435;

assign grp_fu_942_p0 = tmp_21_0_0_1_reg_1403;

assign grp_fu_948_p0 = tmp_21_0_0_2_reg_1411;

assign grp_fu_963_p0 = tmp_21_0_1_1_reg_1419;

assign grp_fu_969_p0 = tmp_21_0_2_reg_1427;

assign grp_fu_974_p0 = tmp_21_0_2_1_reg_1435;

assign grp_fu_989_p0 = tmp_21_0_0_1_reg_1403;

assign grp_fu_996_p0 = tmp_21_0_0_2_reg_1411;

assign r_fu_422_p2 = (r1_reg_364 + 6'd1);

assign sum_2_0_2_2_fu_602_p2 = (tmp_reg_1443 + tmp3_fu_598_p2);

assign sum_2_1_2_2_fu_659_p2 = (tmp7_reg_1485 + tmp10_fu_655_p2);

assign sum_2_2_2_2_fu_716_p2 = (tmp14_reg_1556 + tmp17_fu_712_p2);

assign sum_2_3_2_2_fu_773_p2 = (tmp21_reg_1648 + tmp24_fu_769_p2);

assign sum_2_4_2_2_fu_824_p2 = (tmp28_reg_1750 + tmp31_fu_820_p2);

assign tmp10_fu_655_p2 = ($signed(tmp11_reg_1519) + $signed(tmp12_reg_1524));

assign tmp14_fu_684_p2 = ($signed(grp_fu_942_p3) + $signed(grp_fu_948_p3));

assign tmp17_fu_712_p2 = ($signed(tmp18_reg_1611) + $signed(tmp19_reg_1616));

assign tmp21_fu_741_p2 = ($signed(grp_fu_989_p3) + $signed(grp_fu_996_p3));

assign tmp24_fu_769_p2 = ($signed(tmp25_reg_1700) + $signed(tmp26_reg_1705));

assign tmp28_fu_808_p2 = ($signed(grp_fu_1039_p3) + $signed(grp_fu_1045_p3));

assign tmp31_fu_820_p2 = ($signed(tmp32_reg_1755) + $signed(tmp33_reg_1775));

assign tmp3_fu_598_p2 = ($signed(tmp4_reg_1448) + $signed(tmp5_reg_1453));

assign tmp7_fu_627_p2 = ($signed(grp_fu_894_p3) + $signed(grp_fu_900_p3));

assign tmp_10_cast_fu_510_p1 = tmp_10_fu_506_p2;

assign tmp_10_fu_506_p2 = (tmp_2_reg_1124 + tmp_18_cast_cast_reg_1210);

assign tmp_11_cast_fu_519_p1 = tmp_11_fu_515_p2;

assign tmp_11_fu_515_p2 = (tmp_5_reg_1170 + tmp_18_cast_cast_reg_1210);

assign tmp_12_fu_567_p1 = krnl_load_reg_1226;

assign tmp_14_cast_fu_538_p1 = tmp_14_fu_533_p2;

assign tmp_14_fu_533_p2 = (tmp_4_reg_1159 + col_offset_0_2_cast_s_fu_530_p1);

assign tmp_15_cast_fu_552_p1 = tmp_15_fu_548_p2;

assign tmp_15_fu_548_p2 = (tmp_2_reg_1124 + col_offset_0_2_cast_s_reg_1285);

assign tmp_16_cast_fu_562_p1 = tmp_16_fu_558_p2;

assign tmp_16_fu_558_p2 = (tmp_5_reg_1170 + col_offset_0_2_cast_s_reg_1285);

assign tmp_17_cast_fu_622_p1 = tmp_17_fu_617_p2;

assign tmp_17_fu_617_p2 = (tmp_4_reg_1159 + col_offset_1_2_cast_s_fu_614_p1);

assign tmp_18_cast1_fu_640_p1 = tmp_18_fu_636_p2;

assign tmp_18_cast_cast_fu_493_p1 = tmp_1_reg_1205;

assign tmp_18_fu_636_p2 = (tmp_2_reg_1124 + col_offset_1_2_cast_s_reg_1474);

assign tmp_19_cast_fu_650_p1 = tmp_19_fu_646_p2;

assign tmp_19_fu_646_p2 = (tmp_5_reg_1170 + col_offset_1_2_cast_s_reg_1474);

assign tmp_1_6_fu_543_p2 = ((col_offset_0_2_reg_1268 < 6'd49) ? 1'b1 : 1'b0);

assign tmp_1_fu_487_p2 = ($signed(c_reg_376) + $signed(6'd63));

assign tmp_20_cast_fu_679_p1 = tmp_20_fu_674_p2;

assign tmp_20_fu_674_p2 = (tmp_4_reg_1159 + col_offset_2_2_cast_s_fu_671_p1);

assign tmp_21_0_0_1_fu_579_p1 = krnl_load_1_reg_1236;

assign tmp_21_0_0_2_fu_582_p1 = krnl_load_2_reg_1241;

assign tmp_21_0_1_1_fu_585_p1 = krnl_load_4_reg_1263;

assign tmp_21_0_1_2_fu_573_p1 = krnl_load_5_reg_1280;

assign tmp_21_0_1_fu_570_p1 = krnl_load_3_reg_1252;

assign tmp_21_0_2_1_fu_591_p1 = krnl_load_7_reg_1334;

assign tmp_21_0_2_2_fu_576_p1 = krnl_load_8_reg_1346;

assign tmp_21_0_2_fu_588_p1 = krnl_load_6_reg_1317;

assign tmp_21_cast_fu_697_p1 = tmp_21_fu_693_p2;

assign tmp_21_fu_693_p2 = (tmp_2_reg_1124 + col_offset_2_2_cast_s_reg_1545);

assign tmp_22_1_1_2_fu_906_p0 = tmp_21_0_1_2_reg_1377;

assign tmp_22_1_1_fu_890_p0 = tmp_21_0_1_reg_1364;

assign tmp_22_1_2_2_fu_910_p0 = tmp_21_0_2_2_reg_1390;

assign tmp_22_1_fu_886_p0 = tmp_12_reg_1351;

assign tmp_22_2_1_2_fu_954_p0 = tmp_21_0_1_2_reg_1377;

assign tmp_22_2_1_fu_937_p0 = tmp_21_0_1_reg_1364;

assign tmp_22_2_2_2_fu_959_p0 = tmp_21_0_2_2_reg_1390;

assign tmp_22_2_fu_933_p0 = tmp_12_reg_1351;

assign tmp_22_3_1_2_fu_1003_p0 = tmp_21_0_1_2_reg_1377;

assign tmp_22_3_1_fu_985_p0 = tmp_21_0_1_reg_1364;

assign tmp_22_3_2_2_fu_1007_p0 = tmp_21_0_2_2_reg_1390;

assign tmp_22_3_fu_980_p0 = tmp_12_reg_1351;

assign tmp_22_4_1_2_fu_1035_p0 = tmp_21_0_1_2_reg_1377;

assign tmp_22_4_1_fu_1031_p0 = tmp_21_0_1_reg_1364;

assign tmp_22_4_2_2_fu_1056_p0 = tmp_21_0_2_2_reg_1390;

assign tmp_22_4_fu_1027_p0 = tmp_12_reg_1351;

assign tmp_22_cast_fu_707_p1 = tmp_22_fu_703_p2;

assign tmp_22_fu_703_p2 = (tmp_5_reg_1170 + col_offset_2_2_cast_s_reg_1545);

assign tmp_23_cast_fu_736_p1 = tmp_23_fu_731_p2;

assign tmp_23_fu_731_p2 = (tmp_4_reg_1159 + col_offset_3_2_cast_s_fu_728_p1);

assign tmp_24_cast_fu_754_p1 = tmp_24_fu_750_p2;

assign tmp_24_fu_750_p2 = (tmp_2_reg_1124 + col_offset_3_2_cast_s_reg_1637);

assign tmp_25_cast_fu_764_p1 = tmp_25_fu_760_p2;

assign tmp_25_fu_760_p2 = (tmp_5_reg_1170 + col_offset_3_2_cast_s_reg_1637);

assign tmp_26_fu_789_p2 = (tmp_4_reg_1159 + col_offset_4_2_cast_s_fu_785_p1);

assign tmp_27_fu_794_p2 = (tmp_2_reg_1124 + col_offset_4_2_cast_s_fu_785_p1);

assign tmp_28_cast_fu_804_p1 = tmp_26_reg_1730;

assign tmp_28_fu_799_p2 = (tmp_5_reg_1170 + col_offset_4_2_cast_s_fu_785_p1);

assign tmp_29_cast_fu_812_p1 = tmp_27_reg_1735;

assign tmp_2_7_fu_631_p2 = ((col_offset_1_2_reg_1468 < 6'd49) ? 1'b1 : 1'b0);

assign tmp_30_cast_fu_816_p1 = tmp_28_reg_1740;

assign tmp_3_8_fu_688_p2 = ((col_offset_2_2_reg_1539 < 6'd49) ? 1'b1 : 1'b0);

assign tmp_3_fu_416_p2 = ($signed(r1_reg_364) + $signed(6'd63));

assign tmp_4_9_fu_745_p2 = ((col_offset_3_2_reg_1631 < 6'd49) ? 1'b1 : 1'b0);

assign tmp_6_cast_fu_455_p1 = tmp_6_fu_450_p2;

assign tmp_6_fu_450_p2 = (tmp_4_reg_1159 + c_cast_cast_fu_446_p1);

assign tmp_7_cast_fu_465_p1 = tmp_7_fu_460_p2;

assign tmp_7_fu_460_p2 = (tmp_2_reg_1124 + c_cast_cast_fu_446_p1);

assign tmp_8_cast_fu_476_p1 = tmp_8_fu_471_p2;

assign tmp_8_fu_471_p2 = (tmp_5_reg_1170 + c_cast_cast_fu_446_p1);

assign tmp_9_cast_fu_501_p1 = tmp_9_fu_496_p2;

assign tmp_9_fu_496_p2 = (tmp_4_reg_1159 + tmp_18_cast_cast_fu_493_p1);

assign tmp_fu_594_p2 = ($signed(grp_fu_851_p3) + $signed(grp_fu_859_p3));

assign tmp_s_fu_481_p2 = ((c_reg_376 < 6'd49) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    tmp_18_cast_cast_reg_1210[11:6] <= 6'b000000;
    col_offset_0_2_cast_s_reg_1285[11:6] <= 6'b000000;
    col_offset_1_2_cast_s_reg_1474[11:6] <= 6'b000000;
    col_offset_2_2_cast_s_reg_1545[11:6] <= 6'b000000;
    col_offset_3_2_cast_s_reg_1637[11:6] <= 6'b000000;
end

endmodule //convolve

#include <iostream>
#include "./system/EmbeddedSystemX.h"
#include "./system/Services.h"


// constant values
constexpr size_t img_rows = 50;
constexpr size_t img_cols = 50;
constexpr size_t kernel_size = 3;
constexpr int8_t f = 9;
constexpr size_t acc_rows = (img_rows + img_cols) * 2;
constexpr size_t acc_cols = 180;

// type defs
typedef int16_t T_data;
typedef int8_t T_kernel;
typedef float T_accumulator;


// Define variables and images
// images
Image<T_data, img_rows, img_cols> in;
Image<T_data, img_rows, img_cols> buffer;
Image<T_data, img_rows, img_cols> out;
// kernels for blur and edge detection
Image<T_kernel, kernel_size, kernel_size> blur_kernel = { f,f,f,f,f,f,f,f,f };
Image<T_kernel, kernel_size, kernel_size> sobel_kernel = { 2,2,0,2,0,-2,0,-2,-2 };
// arrays for hough transform
Image<T_accumulator, acc_rows, acc_cols> accumulator = { 0 };
float dNonZero[img_cols * img_rows] = { 0 };
float fiNonZero[img_cols * img_rows] = { 0 };
constexpr const char* cameramanFileNames[] = { "in_file", "hwBlurC", "hwEdgeC", "swBlurC", "swEdgeC"};
constexpr const char* minishapesFileNames[] = { "input", "hwBlurM", "hwEdgeM", "swBlurM", "swEdgeM"};
//constexpr uint8_t nFiles =
char* fileNames[5];



// start : Defines the entry point for the console application.
void start() {
  IStateFactory *stateFactorySingleton = new StateFactorySingleton();
  EmbeddedSystemX *emb = new EmbeddedSystemX(stateFactorySingleton);

  ManualStateTestService(emb);
  //GetHWInputService(emb);
}

int main(int, char**)
{
	start();



	return 0;
}

#pragma once
#include "../types.h"
#include "xconvolve.h"

class ConvolutionHW
{
public:

	ConvolutionHW()
	{
		int status = XConvolve_Initialize(&_convolve, XPAR_CONVOLVE_0_DEVICE_ID);
		if (status != XST_SUCCESS)
			printf("Failed to initialize Hardware");
	}


	template<typename T_img, typename T_kernel, size_t i_rows, size_t i_cols, size_t k_rows, size_t k_cols >
	void convolve(T_img in[i_rows][i_cols], T_img out[i_rows][i_cols], T_kernel kernel[k_rows][k_cols])
	{
		T_size offset = 0;
		T_size i_length = i_rows*i_cols;
		T_size k_length = k_rows*k_cols;
		XConvolve_Read_in_r_Bytes(_convolve,0,in,i_length)
	}

private:
	XConvolve _convolve;
	XConvolve_Config* configPtr;
};

#pragma once

#include "On.h"
#include "../GPIOs/Switches.h"

class Running : public On {
public:
  using On::On;

  virtual void entry() override {
	  State::entry();
	  process();
  }

  virtual void Finished() override
  {
	  context<T_img, T_kernel, i_rows, i_cols, k_rows, k_cols>->ChangeState(StateTypes::s_Idle);
  }

  virtual std::string Name() const override { return "Running"; }

  virtual int Number() const override { return 5; }

private:
  void process(){
	  auto filters = Switches::getInstance()->getActiveInputs();
	  context->GetVPS()->run(filters);
  }
};

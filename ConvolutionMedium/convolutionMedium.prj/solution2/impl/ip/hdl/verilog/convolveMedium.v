// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="convolveMedium,hls_ip_2017_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z010clg400-1,HLS_INPUT_CLOCK=8.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.400000,HLS_SYN_LAT=256033,HLS_SYN_TPT=none,HLS_SYN_MEM=130,HLS_SYN_DSP=36,HLS_SYN_FF=2916,HLS_SYN_LUT=1348}" *)

module convolveMedium (
        ap_clk,
        ap_rst_n,
        s_axi_convm_AWVALID,
        s_axi_convm_AWREADY,
        s_axi_convm_AWADDR,
        s_axi_convm_WVALID,
        s_axi_convm_WREADY,
        s_axi_convm_WDATA,
        s_axi_convm_WSTRB,
        s_axi_convm_ARVALID,
        s_axi_convm_ARREADY,
        s_axi_convm_ARADDR,
        s_axi_convm_RVALID,
        s_axi_convm_RREADY,
        s_axi_convm_RDATA,
        s_axi_convm_RRESP,
        s_axi_convm_BVALID,
        s_axi_convm_BREADY,
        s_axi_convm_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 33'd1;
parameter    ap_ST_fsm_state2 = 33'd2;
parameter    ap_ST_fsm_state3 = 33'd4;
parameter    ap_ST_fsm_state4 = 33'd8;
parameter    ap_ST_fsm_state5 = 33'd16;
parameter    ap_ST_fsm_state6 = 33'd32;
parameter    ap_ST_fsm_state7 = 33'd64;
parameter    ap_ST_fsm_state8 = 33'd128;
parameter    ap_ST_fsm_state9 = 33'd256;
parameter    ap_ST_fsm_state10 = 33'd512;
parameter    ap_ST_fsm_state11 = 33'd1024;
parameter    ap_ST_fsm_state12 = 33'd2048;
parameter    ap_ST_fsm_state13 = 33'd4096;
parameter    ap_ST_fsm_state14 = 33'd8192;
parameter    ap_ST_fsm_state15 = 33'd16384;
parameter    ap_ST_fsm_state16 = 33'd32768;
parameter    ap_ST_fsm_state17 = 33'd65536;
parameter    ap_ST_fsm_state18 = 33'd131072;
parameter    ap_ST_fsm_state19 = 33'd262144;
parameter    ap_ST_fsm_state20 = 33'd524288;
parameter    ap_ST_fsm_state21 = 33'd1048576;
parameter    ap_ST_fsm_state22 = 33'd2097152;
parameter    ap_ST_fsm_state23 = 33'd4194304;
parameter    ap_ST_fsm_state24 = 33'd8388608;
parameter    ap_ST_fsm_state25 = 33'd16777216;
parameter    ap_ST_fsm_state26 = 33'd33554432;
parameter    ap_ST_fsm_state27 = 33'd67108864;
parameter    ap_ST_fsm_state28 = 33'd134217728;
parameter    ap_ST_fsm_state29 = 33'd268435456;
parameter    ap_ST_fsm_state30 = 33'd536870912;
parameter    ap_ST_fsm_state31 = 33'd1073741824;
parameter    ap_ST_fsm_state32 = 33'd2147483648;
parameter    ap_ST_fsm_state33 = 33'd4294967296;
parameter    C_S_AXI_CONVM_DATA_WIDTH = 32;
parameter    C_S_AXI_CONVM_ADDR_WIDTH = 19;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONVM_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input   s_axi_convm_AWVALID;
output   s_axi_convm_AWREADY;
input  [C_S_AXI_CONVM_ADDR_WIDTH - 1:0] s_axi_convm_AWADDR;
input   s_axi_convm_WVALID;
output   s_axi_convm_WREADY;
input  [C_S_AXI_CONVM_DATA_WIDTH - 1:0] s_axi_convm_WDATA;
input  [C_S_AXI_CONVM_WSTRB_WIDTH - 1:0] s_axi_convm_WSTRB;
input   s_axi_convm_ARVALID;
output   s_axi_convm_ARREADY;
input  [C_S_AXI_CONVM_ADDR_WIDTH - 1:0] s_axi_convm_ARADDR;
output   s_axi_convm_RVALID;
input   s_axi_convm_RREADY;
output  [C_S_AXI_CONVM_DATA_WIDTH - 1:0] s_axi_convm_RDATA;
output  [1:0] s_axi_convm_RRESP;
output   s_axi_convm_BVALID;
input   s_axi_convm_BREADY;
output  [1:0] s_axi_convm_BRESP;
output   interrupt;

reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [32:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
reg   [15:0] in_r_address0;
reg    in_r_ce0;
wire   [15:0] in_r_q0;
reg   [15:0] out_r_address0;
reg    out_r_ce0;
reg    out_r_we0;
reg   [15:0] out_r_d0;
reg   [3:0] krnl_address0;
reg    krnl_ce0;
wire   [7:0] krnl_q0;
reg  signed [15:0] reg_361;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state16;
reg  signed [15:0] reg_365;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state15;
reg  signed [15:0] reg_369;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state28;
reg   [7:0] reg_373;
wire    ap_CS_fsm_state8;
reg  signed [15:0] reg_377;
wire    ap_CS_fsm_state29;
reg  signed [7:0] reg_381;
wire    ap_CS_fsm_state9;
reg  signed [15:0] reg_385;
wire    ap_CS_fsm_state30;
wire   [16:0] tmp_3_cast_fu_397_p1;
reg   [16:0] tmp_3_cast_reg_1017;
wire    ap_CS_fsm_state2;
wire   [16:0] tmp_6_cast_fu_421_p1;
reg   [16:0] tmp_6_cast_reg_1030;
wire   [0:0] exitcond_fu_401_p2;
wire   [7:0] r_fu_425_p2;
reg   [7:0] r_reg_1040;
wire   [16:0] tmp_8_cast_fu_439_p1;
reg   [16:0] tmp_8_cast_reg_1045;
reg   [15:0] in_addr_3_reg_1055;
wire    ap_CS_fsm_state3;
reg   [15:0] in_addr_4_reg_1060;
reg   [15:0] in_addr_5_reg_1065;
reg   [15:0] out_addr_reg_1070;
wire   [0:0] tmp_s_fu_478_p2;
reg   [0:0] tmp_s_reg_1075;
wire   [8:0] tmp_1_fu_484_p2;
reg   [8:0] tmp_1_reg_1079;
wire   [16:0] tmp_18_cast_cast_fu_490_p1;
reg   [16:0] tmp_18_cast_cast_reg_1084;
wire    ap_CS_fsm_state4;
wire   [8:0] col_offset_0_2_fu_521_p2;
reg   [8:0] col_offset_0_2_reg_1105;
reg  signed [7:0] krnl_load_2_reg_1110;
wire    ap_CS_fsm_state10;
reg  signed [15:0] in_load_5_reg_1115;
wire   [16:0] col_offset_0_2_cast_s_fu_527_p1;
reg   [16:0] col_offset_0_2_cast_s_reg_1121;
reg   [7:0] krnl_load_3_reg_1132;
wire    ap_CS_fsm_state11;
wire   [31:0] tmp_18_cast1_fu_544_p1;
reg   [31:0] tmp_18_cast1_reg_1137;
reg  signed [15:0] in_load_6_reg_1147;
reg  signed [7:0] krnl_load_4_reg_1154;
wire    ap_CS_fsm_state12;
reg  signed [15:0] in_load_7_reg_1164;
wire   [8:0] col_offset_1_2_fu_558_p2;
reg   [8:0] col_offset_1_2_reg_1171;
reg   [7:0] krnl_load_5_reg_1177;
wire    ap_CS_fsm_state13;
reg  signed [15:0] in_load_8_reg_1182;
wire   [16:0] col_offset_1_2_cast_s_fu_564_p1;
reg   [16:0] col_offset_1_2_cast_s_reg_1189;
wire   [0:0] tmp_2_6_fu_577_p2;
reg   [0:0] tmp_2_6_reg_1200;
reg  signed [7:0] krnl_load_6_reg_1204;
wire    ap_CS_fsm_state14;
reg   [15:0] out_addr_2_reg_1214;
reg  signed [15:0] in_load_9_reg_1219;
wire  signed [15:0] tmp_21_0_0_1_fu_592_p1;
reg  signed [15:0] tmp_21_0_0_1_reg_1226;
wire  signed [15:0] tmp_22_0_0_1_fu_769_p2;
reg  signed [15:0] tmp_22_0_0_1_reg_1233;
wire  signed [15:0] tmp_21_0_0_2_fu_596_p1;
reg  signed [15:0] tmp_21_0_0_2_reg_1238;
wire  signed [15:0] tmp_22_0_0_2_fu_775_p2;
reg  signed [15:0] tmp_22_0_0_2_reg_1245;
wire  signed [15:0] tmp_12_fu_608_p1;
reg  signed [15:0] tmp_12_reg_1255;
wire  signed [15:0] tmp_21_0_1_fu_612_p1;
reg  signed [15:0] tmp_21_0_1_reg_1261;
wire  signed [15:0] tmp_21_0_1_1_fu_615_p1;
reg  signed [15:0] tmp_21_0_1_1_reg_1267;
wire  signed [15:0] tmp_22_0_1_1_fu_795_p2;
reg  signed [15:0] tmp_22_0_1_1_reg_1274;
wire  signed [15:0] tmp_21_0_2_1_fu_618_p1;
reg  signed [15:0] tmp_21_0_2_1_reg_1279;
wire  signed [15:0] tmp_22_0_2_1_fu_801_p2;
reg  signed [15:0] tmp_22_0_2_1_reg_1286;
wire  signed [15:0] grp_fu_781_p3;
reg  signed [15:0] tmp1_reg_1291;
wire  signed [15:0] grp_fu_788_p3;
reg  signed [15:0] tmp2_reg_1296;
wire  signed [15:0] tmp_22_1_fu_806_p2;
reg  signed [15:0] tmp_22_1_reg_1301;
wire  signed [15:0] tmp_22_1_1_fu_812_p2;
reg  signed [15:0] tmp_22_1_1_reg_1306;
wire  signed [15:0] tmp_21_0_1_2_fu_622_p1;
reg  signed [15:0] tmp_21_0_1_2_reg_1311;
wire    ap_CS_fsm_state17;
wire  signed [15:0] tmp_21_0_2_fu_625_p1;
reg  signed [15:0] tmp_21_0_2_reg_1317;
wire  signed [15:0] tmp_21_0_2_2_fu_628_p1;
reg  signed [15:0] tmp_21_0_2_2_reg_1324;
wire  signed [15:0] grp_fu_817_p3;
reg  signed [15:0] tmp4_reg_1330;
wire  signed [15:0] grp_fu_823_p3;
reg  signed [15:0] tmp5_reg_1335;
wire  signed [15:0] tmp_22_1_1_2_fu_849_p2;
reg  signed [15:0] tmp_22_1_1_2_reg_1340;
wire  signed [15:0] tmp_22_1_2_2_fu_854_p2;
reg  signed [15:0] tmp_22_1_2_2_reg_1345;
(* use_dsp48 = "no" *) wire   [15:0] tmp7_fu_632_p2;
reg   [15:0] tmp7_reg_1350;
wire  signed [15:0] grp_fu_860_p3;
reg  signed [15:0] tmp11_reg_1355;
wire    ap_CS_fsm_state18;
wire  signed [15:0] grp_fu_865_p3;
reg  signed [15:0] tmp12_reg_1360;
wire  signed [15:0] tmp_22_2_fu_877_p2;
reg  signed [15:0] tmp_22_2_reg_1365;
wire    ap_CS_fsm_state19;
wire  signed [15:0] tmp_22_2_1_fu_881_p2;
reg  signed [15:0] tmp_22_2_1_reg_1370;
wire   [8:0] col_offset_2_2_fu_661_p2;
reg   [8:0] col_offset_2_2_reg_1375;
wire   [16:0] col_offset_2_2_cast_s_fu_667_p1;
reg   [16:0] col_offset_2_2_cast_s_reg_1381;
wire    ap_CS_fsm_state20;
(* use_dsp48 = "no" *) wire   [15:0] tmp14_fu_680_p2;
reg   [15:0] tmp14_reg_1392;
wire   [0:0] tmp_3_7_fu_684_p2;
reg   [0:0] tmp_3_7_reg_1397;
wire    ap_CS_fsm_state21;
reg   [15:0] out_addr_3_reg_1406;
reg  signed [15:0] in_load_12_reg_1411;
wire    ap_CS_fsm_state22;
reg  signed [15:0] in_load_13_reg_1422;
reg  signed [15:0] in_load_14_reg_1428;
wire    ap_CS_fsm_state23;
wire  signed [15:0] tmp_22_2_1_2_fu_897_p2;
reg  signed [15:0] tmp_22_2_1_2_reg_1434;
wire    ap_CS_fsm_state24;
wire  signed [15:0] tmp_22_2_2_2_fu_902_p2;
reg  signed [15:0] tmp_22_2_2_2_reg_1439;
wire  signed [15:0] grp_fu_906_p3;
reg  signed [15:0] tmp18_reg_1444;
wire    ap_CS_fsm_state25;
wire  signed [15:0] grp_fu_912_p3;
reg  signed [15:0] tmp19_reg_1449;
wire  signed [15:0] tmp_22_3_fu_923_p2;
reg  signed [15:0] tmp_22_3_reg_1454;
wire    ap_CS_fsm_state26;
wire  signed [15:0] tmp_22_3_1_fu_927_p2;
reg  signed [15:0] tmp_22_3_1_reg_1459;
wire  signed [15:0] tmp_22_3_1_2_fu_931_p2;
reg  signed [15:0] tmp_22_3_1_2_reg_1464;
wire   [8:0] col_offset_3_2_fu_718_p2;
reg   [8:0] col_offset_3_2_reg_1469;
wire   [16:0] tmp_23_fu_728_p2;
reg   [16:0] tmp_23_reg_1474;
wire   [16:0] tmp_24_fu_733_p2;
reg   [16:0] tmp_24_reg_1479;
wire   [16:0] tmp_25_fu_738_p2;
reg   [16:0] tmp_25_reg_1484;
wire    ap_CS_fsm_state27;
(* use_dsp48 = "no" *) wire   [15:0] tmp21_fu_747_p2;
reg   [15:0] tmp21_reg_1494;
wire  signed [15:0] grp_fu_949_p3;
reg  signed [15:0] tmp25_reg_1499;
wire  signed [15:0] tmp_22_3_2_2_fu_954_p2;
reg  signed [15:0] tmp_22_3_2_2_reg_1514;
wire    ap_CS_fsm_state31;
wire  signed [15:0] grp_fu_959_p3;
reg  signed [15:0] tmp26_reg_1519;
wire    ap_CS_fsm_state32;
reg   [7:0] r1_reg_338;
reg   [8:0] c_reg_349;
wire    ap_CS_fsm_state33;
wire   [31:0] tmp_9_cast_fu_452_p1;
wire   [31:0] tmp_10_cast_fu_462_p1;
wire   [31:0] tmp_11_cast_fu_473_p1;
wire   [31:0] tmp_12_cast_fu_498_p1;
wire   [31:0] tmp_13_cast_fu_507_p1;
wire   [31:0] tmp_14_cast_fu_516_p1;
wire   [31:0] tmp_17_cast_fu_535_p1;
wire   [31:0] tmp_19_cast_fu_553_p1;
wire   [31:0] tmp_20_cast_fu_572_p1;
wire   [31:0] tmp_21_cast_fu_586_p1;
wire   [31:0] tmp_22_cast_fu_603_p1;
wire   [31:0] tmp_23_cast_fu_675_p1;
wire   [31:0] tmp_24_cast_fu_693_p1;
wire   [31:0] tmp_25_cast_fu_703_p1;
wire   [31:0] tmp_26_cast_fu_743_p1;
wire   [31:0] tmp_27_cast_fu_751_p1;
wire   [31:0] tmp_28_cast_fu_755_p1;
wire   [15:0] sum_2_0_2_2_fu_644_p2;
wire   [15:0] sum_2_1_2_2_fu_655_p2;
wire   [15:0] sum_2_2_2_2_fu_712_p2;
wire   [15:0] sum_2_3_2_2_fu_763_p2;
wire   [15:0] tmp_2_fu_389_p3;
wire   [7:0] tmp_4_fu_407_p2;
wire   [15:0] tmp_5_fu_413_p3;
wire   [15:0] tmp_7_fu_431_p3;
wire   [16:0] c_cast_cast_fu_443_p1;
wire   [16:0] tmp_9_fu_447_p2;
wire   [16:0] tmp_3_fu_457_p2;
wire   [16:0] tmp_6_fu_468_p2;
wire   [16:0] tmp_8_fu_493_p2;
wire   [16:0] tmp_10_fu_503_p2;
wire   [16:0] tmp_11_fu_512_p2;
wire   [16:0] tmp_14_fu_530_p2;
wire   [16:0] tmp_15_fu_540_p2;
wire   [16:0] tmp_16_fu_549_p2;
wire   [16:0] tmp_17_fu_567_p2;
wire   [16:0] tmp_18_fu_582_p2;
wire   [16:0] tmp_19_fu_599_p2;
wire  signed [15:0] grp_fu_836_p3;
wire  signed [15:0] grp_fu_843_p3;
(* use_dsp48 = "no" *) wire   [15:0] tmp3_fu_640_p2;
(* use_dsp48 = "no" *) wire   [15:0] tmp_fu_636_p2;
(* use_dsp48 = "no" *) wire   [15:0] tmp10_fu_651_p2;
wire   [16:0] tmp_20_fu_670_p2;
wire  signed [15:0] grp_fu_885_p3;
wire  signed [15:0] grp_fu_891_p3;
wire   [16:0] tmp_21_fu_689_p2;
wire   [16:0] tmp_22_fu_699_p2;
(* use_dsp48 = "no" *) wire   [15:0] tmp17_fu_708_p2;
wire   [16:0] col_offset_3_2_cast_s_fu_724_p1;
wire  signed [15:0] grp_fu_935_p3;
wire  signed [15:0] grp_fu_942_p3;
(* use_dsp48 = "no" *) wire   [15:0] tmp24_fu_759_p2;
wire  signed [7:0] grp_fu_781_p1;
wire  signed [7:0] grp_fu_788_p1;
wire  signed [7:0] tmp_22_1_fu_806_p0;
wire  signed [7:0] tmp_22_1_1_fu_812_p0;
wire  signed [7:0] grp_fu_817_p1;
wire  signed [15:0] grp_fu_829_p3;
wire  signed [7:0] grp_fu_829_p1;
wire  signed [7:0] grp_fu_836_p0;
wire  signed [7:0] grp_fu_843_p0;
wire  signed [7:0] tmp_22_1_1_2_fu_849_p0;
wire  signed [7:0] tmp_22_1_2_2_fu_854_p0;
wire  signed [7:0] grp_fu_860_p0;
wire  signed [7:0] grp_fu_865_p0;
wire  signed [15:0] grp_fu_870_p3;
wire  signed [7:0] grp_fu_870_p0;
wire  signed [7:0] tmp_22_2_fu_877_p0;
wire  signed [7:0] tmp_22_2_1_fu_881_p0;
wire  signed [7:0] grp_fu_885_p0;
wire  signed [7:0] grp_fu_891_p0;
wire  signed [7:0] tmp_22_2_1_2_fu_897_p0;
wire  signed [7:0] tmp_22_2_2_2_fu_902_p0;
wire  signed [7:0] grp_fu_906_p0;
wire  signed [7:0] grp_fu_912_p0;
wire  signed [15:0] grp_fu_917_p3;
wire  signed [7:0] grp_fu_917_p0;
wire  signed [7:0] tmp_22_3_fu_923_p0;
wire  signed [7:0] tmp_22_3_1_fu_927_p0;
wire  signed [7:0] tmp_22_3_1_2_fu_931_p0;
wire  signed [7:0] grp_fu_935_p0;
wire  signed [7:0] grp_fu_942_p0;
wire  signed [7:0] grp_fu_949_p0;
wire  signed [7:0] tmp_22_3_2_2_fu_954_p0;
wire  signed [7:0] grp_fu_959_p0;
wire  signed [15:0] grp_fu_965_p3;
wire  signed [7:0] grp_fu_965_p0;
reg   [32:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 33'd1;
end

convolveMedium_convm_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONVM_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONVM_DATA_WIDTH ))
convolveMedium_convm_s_axi_U(
    .AWVALID(s_axi_convm_AWVALID),
    .AWREADY(s_axi_convm_AWREADY),
    .AWADDR(s_axi_convm_AWADDR),
    .WVALID(s_axi_convm_WVALID),
    .WREADY(s_axi_convm_WREADY),
    .WDATA(s_axi_convm_WDATA),
    .WSTRB(s_axi_convm_WSTRB),
    .ARVALID(s_axi_convm_ARVALID),
    .ARREADY(s_axi_convm_ARREADY),
    .ARADDR(s_axi_convm_ARADDR),
    .RVALID(s_axi_convm_RVALID),
    .RREADY(s_axi_convm_RREADY),
    .RDATA(s_axi_convm_RDATA),
    .RRESP(s_axi_convm_RRESP),
    .BVALID(s_axi_convm_BVALID),
    .BREADY(s_axi_convm_BREADY),
    .BRESP(s_axi_convm_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .in_r_address0(in_r_address0),
    .in_r_ce0(in_r_ce0),
    .in_r_q0(in_r_q0),
    .out_r_address0(out_r_address0),
    .out_r_ce0(out_r_ce0),
    .out_r_we0(out_r_we0),
    .out_r_d0(out_r_d0),
    .krnl_address0(krnl_address0),
    .krnl_ce0(krnl_ce0),
    .krnl_q0(krnl_q0)
);

convolveMedium_mubkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
convolveMedium_mubkb_U0(
    .din0(reg_365),
    .din1(reg_381),
    .dout(tmp_22_0_0_1_fu_769_p2)
);

convolveMedium_mubkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
convolveMedium_mubkb_U1(
    .din0(reg_369),
    .din1(krnl_load_2_reg_1110),
    .dout(tmp_22_0_0_2_fu_775_p2)
);

convolveMedium_macud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolveMedium_macud_U2(
    .din0(reg_361),
    .din1(grp_fu_781_p1),
    .din2(tmp_22_0_0_1_reg_1233),
    .dout(grp_fu_781_p3)
);

convolveMedium_macud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolveMedium_macud_U3(
    .din0(reg_377),
    .din1(grp_fu_788_p1),
    .din2(tmp_22_0_0_2_reg_1245),
    .dout(grp_fu_788_p3)
);

convolveMedium_mubkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
convolveMedium_mubkb_U4(
    .din0(reg_385),
    .din1(krnl_load_4_reg_1154),
    .dout(tmp_22_0_1_1_fu_795_p2)
);

convolveMedium_mubkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
convolveMedium_mubkb_U5(
    .din0(in_load_7_reg_1164),
    .din1(reg_381),
    .dout(tmp_22_0_2_1_fu_801_p2)
);

convolveMedium_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolveMedium_mudEe_U6(
    .din0(tmp_22_1_fu_806_p0),
    .din1(reg_377),
    .dout(tmp_22_1_fu_806_p2)
);

convolveMedium_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolveMedium_mudEe_U7(
    .din0(tmp_22_1_1_fu_812_p0),
    .din1(in_load_6_reg_1147),
    .dout(tmp_22_1_1_fu_812_p2)
);

convolveMedium_macud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolveMedium_macud_U8(
    .din0(in_load_5_reg_1115),
    .din1(grp_fu_817_p1),
    .din2(tmp_22_0_1_1_reg_1274),
    .dout(grp_fu_817_p3)
);

convolveMedium_macud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolveMedium_macud_U9(
    .din0(in_load_6_reg_1147),
    .din1(krnl_load_6_reg_1204),
    .din2(grp_fu_829_p3),
    .dout(grp_fu_823_p3)
);

convolveMedium_macud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolveMedium_macud_U10(
    .din0(in_load_8_reg_1182),
    .din1(grp_fu_829_p1),
    .din2(tmp_22_0_2_1_reg_1286),
    .dout(grp_fu_829_p3)
);

convolveMedium_maeOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolveMedium_maeOg_U11(
    .din0(grp_fu_836_p0),
    .din1(reg_385),
    .din2(tmp_22_1_reg_1301),
    .dout(grp_fu_836_p3)
);

convolveMedium_maeOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolveMedium_maeOg_U12(
    .din0(grp_fu_843_p0),
    .din1(in_load_5_reg_1115),
    .din2(tmp_22_1_1_reg_1306),
    .dout(grp_fu_843_p3)
);

convolveMedium_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolveMedium_mudEe_U13(
    .din0(tmp_22_1_1_2_fu_849_p0),
    .din1(in_load_8_reg_1182),
    .dout(tmp_22_1_1_2_fu_849_p2)
);

convolveMedium_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolveMedium_mudEe_U14(
    .din0(tmp_22_1_2_2_fu_854_p0),
    .din1(reg_361),
    .dout(tmp_22_1_2_2_fu_854_p2)
);

convolveMedium_maeOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolveMedium_maeOg_U15(
    .din0(grp_fu_860_p0),
    .din1(in_load_7_reg_1164),
    .din2(tmp_22_1_1_2_reg_1340),
    .dout(grp_fu_860_p3)
);

convolveMedium_maeOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolveMedium_maeOg_U16(
    .din0(grp_fu_865_p0),
    .din1(in_load_9_reg_1219),
    .din2(grp_fu_870_p3),
    .dout(grp_fu_865_p3)
);

convolveMedium_maeOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolveMedium_maeOg_U17(
    .din0(grp_fu_870_p0),
    .din1(reg_365),
    .din2(tmp_22_1_2_2_reg_1345),
    .dout(grp_fu_870_p3)
);

convolveMedium_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolveMedium_mudEe_U18(
    .din0(tmp_22_2_fu_877_p0),
    .din1(in_load_6_reg_1147),
    .dout(tmp_22_2_fu_877_p2)
);

convolveMedium_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolveMedium_mudEe_U19(
    .din0(tmp_22_2_1_fu_881_p0),
    .din1(in_load_9_reg_1219),
    .dout(tmp_22_2_1_fu_881_p2)
);

convolveMedium_maeOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolveMedium_maeOg_U20(
    .din0(grp_fu_885_p0),
    .din1(in_load_7_reg_1164),
    .din2(tmp_22_2_reg_1365),
    .dout(grp_fu_885_p3)
);

convolveMedium_maeOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolveMedium_maeOg_U21(
    .din0(grp_fu_891_p0),
    .din1(in_load_8_reg_1182),
    .din2(tmp_22_2_1_reg_1370),
    .dout(grp_fu_891_p3)
);

convolveMedium_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolveMedium_mudEe_U22(
    .din0(tmp_22_2_1_2_fu_897_p0),
    .din1(reg_361),
    .dout(tmp_22_2_1_2_fu_897_p2)
);

convolveMedium_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolveMedium_mudEe_U23(
    .din0(tmp_22_2_2_2_fu_902_p0),
    .din1(in_load_14_reg_1428),
    .dout(tmp_22_2_2_2_fu_902_p2)
);

convolveMedium_maeOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolveMedium_maeOg_U24(
    .din0(grp_fu_906_p0),
    .din1(reg_365),
    .din2(tmp_22_2_1_2_reg_1434),
    .dout(grp_fu_906_p3)
);

convolveMedium_maeOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolveMedium_maeOg_U25(
    .din0(grp_fu_912_p0),
    .din1(in_load_12_reg_1411),
    .din2(grp_fu_917_p3),
    .dout(grp_fu_912_p3)
);

convolveMedium_maeOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolveMedium_maeOg_U26(
    .din0(grp_fu_917_p0),
    .din1(in_load_13_reg_1422),
    .din2(tmp_22_2_2_2_reg_1439),
    .dout(grp_fu_917_p3)
);

convolveMedium_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolveMedium_mudEe_U27(
    .din0(tmp_22_3_fu_923_p0),
    .din1(in_load_9_reg_1219),
    .dout(tmp_22_3_fu_923_p2)
);

convolveMedium_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolveMedium_mudEe_U28(
    .din0(tmp_22_3_1_fu_927_p0),
    .din1(in_load_12_reg_1411),
    .dout(tmp_22_3_1_fu_927_p2)
);

convolveMedium_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolveMedium_mudEe_U29(
    .din0(tmp_22_3_1_2_fu_931_p0),
    .din1(in_load_14_reg_1428),
    .dout(tmp_22_3_1_2_fu_931_p2)
);

convolveMedium_maeOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolveMedium_maeOg_U30(
    .din0(grp_fu_935_p0),
    .din1(reg_365),
    .din2(tmp_22_3_reg_1454),
    .dout(grp_fu_935_p3)
);

convolveMedium_maeOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolveMedium_maeOg_U31(
    .din0(grp_fu_942_p0),
    .din1(reg_361),
    .din2(tmp_22_3_1_reg_1459),
    .dout(grp_fu_942_p3)
);

convolveMedium_maeOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolveMedium_maeOg_U32(
    .din0(grp_fu_949_p0),
    .din1(in_load_13_reg_1422),
    .din2(tmp_22_3_1_2_reg_1464),
    .dout(grp_fu_949_p3)
);

convolveMedium_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolveMedium_mudEe_U33(
    .din0(tmp_22_3_2_2_fu_954_p0),
    .din1(reg_385),
    .dout(tmp_22_3_2_2_fu_954_p2)
);

convolveMedium_maeOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolveMedium_maeOg_U34(
    .din0(grp_fu_959_p0),
    .din1(reg_369),
    .din2(grp_fu_965_p3),
    .dout(grp_fu_959_p3)
);

convolveMedium_maeOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
convolveMedium_maeOg_U35(
    .din0(grp_fu_965_p0),
    .din1(reg_377),
    .din2(tmp_22_3_2_2_reg_1514),
    .dout(grp_fu_965_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_401_p2 == 1'd0))) begin
        c_reg_349 <= 9'd1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        c_reg_349 <= col_offset_3_2_reg_1469;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) & ((1'd0 == tmp_s_reg_1075) | (1'd0 == tmp_2_6_reg_1200) | (1'd0 == tmp_3_7_reg_1397)))) begin
        r1_reg_338 <= r_reg_1040;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        r1_reg_338 <= 8'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        col_offset_0_2_cast_s_reg_1121[8 : 0] <= col_offset_0_2_cast_s_fu_527_p1[8 : 0];
        in_load_5_reg_1115 <= in_r_q0;
        krnl_load_2_reg_1110 <= krnl_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        col_offset_0_2_reg_1105 <= col_offset_0_2_fu_521_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        col_offset_1_2_cast_s_reg_1189[8 : 0] <= col_offset_1_2_cast_s_fu_564_p1[8 : 0];
        in_load_8_reg_1182 <= in_r_q0;
        krnl_load_5_reg_1177 <= krnl_q0;
        tmp_2_6_reg_1200 <= tmp_2_6_fu_577_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        col_offset_1_2_reg_1171 <= col_offset_1_2_fu_558_p2;
        in_load_7_reg_1164 <= in_r_q0;
        krnl_load_4_reg_1154 <= krnl_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        col_offset_2_2_cast_s_reg_1381[8 : 0] <= col_offset_2_2_cast_s_fu_667_p1[8 : 0];
        tmp14_reg_1392 <= tmp14_fu_680_p2;
        tmp_3_7_reg_1397 <= tmp_3_7_fu_684_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) & (1'd1 == tmp_2_6_reg_1200))) begin
        col_offset_2_2_reg_1375 <= col_offset_2_2_fu_661_p2;
        tmp_22_2_1_reg_1370 <= tmp_22_2_1_fu_881_p2;
        tmp_22_2_reg_1365 <= tmp_22_2_fu_877_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == tmp_2_6_reg_1200) & (1'b1 == ap_CS_fsm_state26) & (tmp_s_reg_1075 == 1'd1) & (1'd1 == tmp_3_7_reg_1397))) begin
        col_offset_3_2_reg_1469 <= col_offset_3_2_fu_718_p2;
        tmp_22_3_1_2_reg_1464 <= tmp_22_3_1_2_fu_931_p2;
        tmp_22_3_1_reg_1459 <= tmp_22_3_1_fu_927_p2;
        tmp_22_3_reg_1454 <= tmp_22_3_fu_923_p2;
        tmp_23_reg_1474 <= tmp_23_fu_728_p2;
        tmp_24_reg_1479 <= tmp_24_fu_733_p2;
        tmp_25_reg_1484 <= tmp_25_fu_738_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        in_addr_3_reg_1055 <= tmp_9_cast_fu_452_p1;
        in_addr_4_reg_1060 <= tmp_10_cast_fu_462_p1;
        in_addr_5_reg_1065 <= tmp_11_cast_fu_473_p1;
        out_addr_reg_1070 <= tmp_10_cast_fu_462_p1;
        tmp_s_reg_1075 <= tmp_s_fu_478_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        in_load_12_reg_1411 <= in_r_q0;
        out_addr_3_reg_1406 <= tmp_24_cast_fu_693_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        in_load_13_reg_1422 <= in_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        in_load_14_reg_1428 <= in_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        in_load_6_reg_1147 <= in_r_q0;
        krnl_load_3_reg_1132 <= krnl_q0;
        tmp_18_cast1_reg_1137[16 : 0] <= tmp_18_cast1_fu_544_p1[16 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        in_load_9_reg_1219 <= in_r_q0;
        krnl_load_6_reg_1204 <= krnl_q0;
        out_addr_2_reg_1214 <= tmp_21_cast_fu_586_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_401_p2 == 1'd0))) begin
        r_reg_1040 <= r_fu_425_p2;
        tmp_6_cast_reg_1030[15 : 8] <= tmp_6_cast_fu_421_p1[15 : 8];
        tmp_8_cast_reg_1045[15 : 8] <= tmp_8_cast_fu_439_p1[15 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state16))) begin
        reg_361 <= in_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state15))) begin
        reg_365 <= in_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state28))) begin
        reg_369 <= in_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state8))) begin
        reg_373 <= krnl_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state29))) begin
        reg_377 <= in_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state9))) begin
        reg_381 <= krnl_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state30))) begin
        reg_385 <= in_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        tmp11_reg_1355 <= grp_fu_860_p3;
        tmp12_reg_1360 <= grp_fu_865_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        tmp18_reg_1444 <= grp_fu_906_p3;
        tmp19_reg_1449 <= grp_fu_912_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        tmp1_reg_1291 <= grp_fu_781_p3;
        tmp2_reg_1296 <= grp_fu_788_p3;
        tmp_12_reg_1255 <= tmp_12_fu_608_p1;
        tmp_21_0_1_1_reg_1267 <= tmp_21_0_1_1_fu_615_p1;
        tmp_21_0_1_reg_1261 <= tmp_21_0_1_fu_612_p1;
        tmp_21_0_2_1_reg_1279 <= tmp_21_0_2_1_fu_618_p1;
        tmp_22_0_1_1_reg_1274 <= tmp_22_0_1_1_fu_795_p2;
        tmp_22_0_2_1_reg_1286 <= tmp_22_0_2_1_fu_801_p2;
        tmp_22_1_1_reg_1306 <= tmp_22_1_1_fu_812_p2;
        tmp_22_1_reg_1301 <= tmp_22_1_fu_806_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        tmp21_reg_1494 <= tmp21_fu_747_p2;
        tmp25_reg_1499 <= grp_fu_949_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        tmp26_reg_1519 <= grp_fu_959_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        tmp4_reg_1330 <= grp_fu_817_p3;
        tmp5_reg_1335 <= grp_fu_823_p3;
        tmp7_reg_1350 <= tmp7_fu_632_p2;
        tmp_21_0_1_2_reg_1311 <= tmp_21_0_1_2_fu_622_p1;
        tmp_21_0_2_2_reg_1324 <= tmp_21_0_2_2_fu_628_p1;
        tmp_21_0_2_reg_1317 <= tmp_21_0_2_fu_625_p1;
        tmp_22_1_1_2_reg_1340 <= tmp_22_1_1_2_fu_849_p2;
        tmp_22_1_2_2_reg_1345 <= tmp_22_1_2_2_fu_854_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_18_cast_cast_reg_1084[8 : 0] <= tmp_18_cast_cast_fu_490_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (tmp_s_fu_478_p2 == 1'd1))) begin
        tmp_1_reg_1079 <= tmp_1_fu_484_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        tmp_21_0_0_1_reg_1226 <= tmp_21_0_0_1_fu_592_p1;
        tmp_21_0_0_2_reg_1238 <= tmp_21_0_0_2_fu_596_p1;
        tmp_22_0_0_1_reg_1233 <= tmp_22_0_0_1_fu_769_p2;
        tmp_22_0_0_2_reg_1245 <= tmp_22_0_0_2_fu_775_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        tmp_22_2_1_2_reg_1434 <= tmp_22_2_1_2_fu_897_p2;
        tmp_22_2_2_2_reg_1439 <= tmp_22_2_2_2_fu_902_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        tmp_22_3_2_2_reg_1514 <= tmp_22_3_2_2_fu_954_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        tmp_3_cast_reg_1017[15 : 8] <= tmp_3_cast_fu_397_p1[15 : 8];
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_401_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_401_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        in_r_address0 = tmp_28_cast_fu_755_p1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        in_r_address0 = tmp_27_cast_fu_751_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        in_r_address0 = tmp_26_cast_fu_743_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        in_r_address0 = tmp_25_cast_fu_703_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        in_r_address0 = tmp_24_cast_fu_693_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        in_r_address0 = tmp_23_cast_fu_675_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        in_r_address0 = tmp_22_cast_fu_603_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        in_r_address0 = tmp_21_cast_fu_586_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        in_r_address0 = tmp_20_cast_fu_572_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        in_r_address0 = tmp_19_cast_fu_553_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        in_r_address0 = tmp_18_cast1_fu_544_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        in_r_address0 = tmp_17_cast_fu_535_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        in_r_address0 = in_addr_5_reg_1065;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        in_r_address0 = in_addr_4_reg_1060;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        in_r_address0 = in_addr_3_reg_1055;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        in_r_address0 = tmp_14_cast_fu_516_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        in_r_address0 = tmp_13_cast_fu_507_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        in_r_address0 = tmp_12_cast_fu_498_p1;
    end else begin
        in_r_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state27))) begin
        in_r_ce0 = 1'b1;
    end else begin
        in_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        krnl_address0 = 32'd8;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        krnl_address0 = 32'd5;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        krnl_address0 = 32'd2;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        krnl_address0 = 32'd7;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        krnl_address0 = 32'd4;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        krnl_address0 = 32'd1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        krnl_address0 = 32'd6;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        krnl_address0 = 32'd3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        krnl_address0 = 32'd0;
    end else begin
        krnl_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        krnl_ce0 = 1'b1;
    end else begin
        krnl_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        out_r_address0 = out_addr_3_reg_1406;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        out_r_address0 = out_addr_2_reg_1214;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        out_r_address0 = tmp_18_cast1_reg_1137;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        out_r_address0 = out_addr_reg_1070;
    end else begin
        out_r_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state33))) begin
        out_r_ce0 = 1'b1;
    end else begin
        out_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        out_r_d0 = sum_2_3_2_2_fu_763_p2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        out_r_d0 = sum_2_2_2_2_fu_712_p2;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        out_r_d0 = sum_2_1_2_2_fu_655_p2;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        out_r_d0 = sum_2_0_2_2_fu_644_p2;
    end else begin
        out_r_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state33) | ((1'd1 == tmp_2_6_reg_1200) & (1'b1 == ap_CS_fsm_state26) & (tmp_s_reg_1075 == 1'd1)))) begin
        out_r_we0 = 1'b1;
    end else begin
        out_r_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_401_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (1'd0 == tmp_s_fu_478_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            if (((1'b1 == ap_CS_fsm_state19) & (1'd0 == tmp_2_6_reg_1200))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            if (((1'b1 == ap_CS_fsm_state26) & ((1'd0 == tmp_s_reg_1075) | (1'd0 == tmp_2_6_reg_1200) | (1'd0 == tmp_3_7_reg_1397)))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign c_cast_cast_fu_443_p1 = c_reg_349;

assign col_offset_0_2_cast_s_fu_527_p1 = col_offset_0_2_reg_1105;

assign col_offset_0_2_fu_521_p2 = (c_reg_349 + 9'd1);

assign col_offset_1_2_cast_s_fu_564_p1 = col_offset_1_2_reg_1171;

assign col_offset_1_2_fu_558_p2 = (c_reg_349 + 9'd2);

assign col_offset_2_2_cast_s_fu_667_p1 = col_offset_2_2_reg_1375;

assign col_offset_2_2_fu_661_p2 = (c_reg_349 + 9'd3);

assign col_offset_3_2_cast_s_fu_724_p1 = col_offset_3_2_fu_718_p2;

assign col_offset_3_2_fu_718_p2 = (c_reg_349 + 9'd4);

assign exitcond_fu_401_p2 = ((r1_reg_338 == 8'd255) ? 1'b1 : 1'b0);

assign grp_fu_781_p1 = tmp_12_fu_608_p1;

assign grp_fu_788_p1 = tmp_21_0_1_fu_612_p1;

assign grp_fu_817_p1 = tmp_21_0_1_2_fu_622_p1;

assign grp_fu_829_p1 = tmp_21_0_2_2_fu_628_p1;

assign grp_fu_836_p0 = tmp_21_0_0_1_reg_1226;

assign grp_fu_843_p0 = tmp_21_0_0_2_reg_1238;

assign grp_fu_860_p0 = tmp_21_0_1_1_reg_1267;

assign grp_fu_865_p0 = tmp_21_0_2_reg_1317;

assign grp_fu_870_p0 = tmp_21_0_2_1_reg_1279;

assign grp_fu_885_p0 = tmp_21_0_0_1_reg_1226;

assign grp_fu_891_p0 = tmp_21_0_0_2_reg_1238;

assign grp_fu_906_p0 = tmp_21_0_1_1_reg_1267;

assign grp_fu_912_p0 = tmp_21_0_2_reg_1317;

assign grp_fu_917_p0 = tmp_21_0_2_1_reg_1279;

assign grp_fu_935_p0 = tmp_21_0_0_1_reg_1226;

assign grp_fu_942_p0 = tmp_21_0_0_2_reg_1238;

assign grp_fu_949_p0 = tmp_21_0_1_1_reg_1267;

assign grp_fu_959_p0 = tmp_21_0_2_reg_1317;

assign grp_fu_965_p0 = tmp_21_0_2_1_reg_1279;

assign r_fu_425_p2 = (r1_reg_338 + 8'd1);

assign sum_2_0_2_2_fu_644_p2 = (tmp3_fu_640_p2 + tmp_fu_636_p2);

assign sum_2_1_2_2_fu_655_p2 = (tmp7_reg_1350 + tmp10_fu_651_p2);

assign sum_2_2_2_2_fu_712_p2 = (tmp14_reg_1392 + tmp17_fu_708_p2);

assign sum_2_3_2_2_fu_763_p2 = (tmp21_reg_1494 + tmp24_fu_759_p2);

assign tmp10_fu_651_p2 = ($signed(tmp11_reg_1355) + $signed(tmp12_reg_1360));

assign tmp14_fu_680_p2 = ($signed(grp_fu_885_p3) + $signed(grp_fu_891_p3));

assign tmp17_fu_708_p2 = ($signed(tmp18_reg_1444) + $signed(tmp19_reg_1449));

assign tmp21_fu_747_p2 = ($signed(grp_fu_935_p3) + $signed(grp_fu_942_p3));

assign tmp24_fu_759_p2 = ($signed(tmp25_reg_1499) + $signed(tmp26_reg_1519));

assign tmp3_fu_640_p2 = ($signed(tmp5_reg_1335) + $signed(tmp4_reg_1330));

assign tmp7_fu_632_p2 = ($signed(grp_fu_836_p3) + $signed(grp_fu_843_p3));

assign tmp_10_cast_fu_462_p1 = tmp_3_fu_457_p2;

assign tmp_10_fu_503_p2 = (tmp_3_cast_reg_1017 + tmp_18_cast_cast_reg_1084);

assign tmp_11_cast_fu_473_p1 = tmp_6_fu_468_p2;

assign tmp_11_fu_512_p2 = (tmp_8_cast_reg_1045 + tmp_18_cast_cast_reg_1084);

assign tmp_12_cast_fu_498_p1 = tmp_8_fu_493_p2;

assign tmp_12_fu_608_p1 = $signed(reg_373);

assign tmp_13_cast_fu_507_p1 = tmp_10_fu_503_p2;

assign tmp_14_cast_fu_516_p1 = tmp_11_fu_512_p2;

assign tmp_14_fu_530_p2 = (tmp_6_cast_reg_1030 + col_offset_0_2_cast_s_fu_527_p1);

assign tmp_15_fu_540_p2 = (tmp_3_cast_reg_1017 + col_offset_0_2_cast_s_reg_1121);

assign tmp_16_fu_549_p2 = (tmp_8_cast_reg_1045 + col_offset_0_2_cast_s_reg_1121);

assign tmp_17_cast_fu_535_p1 = tmp_14_fu_530_p2;

assign tmp_17_fu_567_p2 = (tmp_6_cast_reg_1030 + col_offset_1_2_cast_s_fu_564_p1);

assign tmp_18_cast1_fu_544_p1 = tmp_15_fu_540_p2;

assign tmp_18_cast_cast_fu_490_p1 = tmp_1_reg_1079;

assign tmp_18_fu_582_p2 = (tmp_3_cast_reg_1017 + col_offset_1_2_cast_s_reg_1189);

assign tmp_19_cast_fu_553_p1 = tmp_16_fu_549_p2;

assign tmp_19_fu_599_p2 = (tmp_8_cast_reg_1045 + col_offset_1_2_cast_s_reg_1189);

assign tmp_1_fu_484_p2 = ($signed(c_reg_349) + $signed(9'd511));

assign tmp_20_cast_fu_572_p1 = tmp_17_fu_567_p2;

assign tmp_20_fu_670_p2 = (tmp_6_cast_reg_1030 + col_offset_2_2_cast_s_fu_667_p1);

assign tmp_21_0_0_1_fu_592_p1 = reg_381;

assign tmp_21_0_0_2_fu_596_p1 = krnl_load_2_reg_1110;

assign tmp_21_0_1_1_fu_615_p1 = krnl_load_4_reg_1154;

assign tmp_21_0_1_2_fu_622_p1 = $signed(krnl_load_5_reg_1177);

assign tmp_21_0_1_fu_612_p1 = $signed(krnl_load_3_reg_1132);

assign tmp_21_0_2_1_fu_618_p1 = reg_381;

assign tmp_21_0_2_2_fu_628_p1 = $signed(reg_373);

assign tmp_21_0_2_fu_625_p1 = krnl_load_6_reg_1204;

assign tmp_21_cast_fu_586_p1 = tmp_18_fu_582_p2;

assign tmp_21_fu_689_p2 = (tmp_3_cast_reg_1017 + col_offset_2_2_cast_s_reg_1381);

assign tmp_22_1_1_2_fu_849_p0 = tmp_21_0_1_2_fu_622_p1;

assign tmp_22_1_1_fu_812_p0 = tmp_21_0_1_fu_612_p1;

assign tmp_22_1_2_2_fu_854_p0 = tmp_21_0_2_2_fu_628_p1;

assign tmp_22_1_fu_806_p0 = tmp_12_fu_608_p1;

assign tmp_22_2_1_2_fu_897_p0 = tmp_21_0_1_2_reg_1311;

assign tmp_22_2_1_fu_881_p0 = tmp_21_0_1_reg_1261;

assign tmp_22_2_2_2_fu_902_p0 = tmp_21_0_2_2_reg_1324;

assign tmp_22_2_fu_877_p0 = tmp_12_reg_1255;

assign tmp_22_3_1_2_fu_931_p0 = tmp_21_0_1_2_reg_1311;

assign tmp_22_3_1_fu_927_p0 = tmp_21_0_1_reg_1261;

assign tmp_22_3_2_2_fu_954_p0 = tmp_21_0_2_2_reg_1324;

assign tmp_22_3_fu_923_p0 = tmp_12_reg_1255;

assign tmp_22_cast_fu_603_p1 = tmp_19_fu_599_p2;

assign tmp_22_fu_699_p2 = (tmp_8_cast_reg_1045 + col_offset_2_2_cast_s_reg_1381);

assign tmp_23_cast_fu_675_p1 = tmp_20_fu_670_p2;

assign tmp_23_fu_728_p2 = (tmp_6_cast_reg_1030 + col_offset_3_2_cast_s_fu_724_p1);

assign tmp_24_cast_fu_693_p1 = tmp_21_fu_689_p2;

assign tmp_24_fu_733_p2 = (tmp_3_cast_reg_1017 + col_offset_3_2_cast_s_fu_724_p1);

assign tmp_25_cast_fu_703_p1 = tmp_22_fu_699_p2;

assign tmp_25_fu_738_p2 = (tmp_8_cast_reg_1045 + col_offset_3_2_cast_s_fu_724_p1);

assign tmp_26_cast_fu_743_p1 = tmp_23_reg_1474;

assign tmp_27_cast_fu_751_p1 = tmp_24_reg_1479;

assign tmp_28_cast_fu_755_p1 = tmp_25_reg_1484;

assign tmp_2_6_fu_577_p2 = ((col_offset_1_2_reg_1171 < 9'd255) ? 1'b1 : 1'b0);

assign tmp_2_fu_389_p3 = {{r1_reg_338}, {8'd0}};

assign tmp_3_7_fu_684_p2 = ((col_offset_2_2_reg_1375 < 9'd255) ? 1'b1 : 1'b0);

assign tmp_3_cast_fu_397_p1 = tmp_2_fu_389_p3;

assign tmp_3_fu_457_p2 = (tmp_3_cast_reg_1017 + c_cast_cast_fu_443_p1);

assign tmp_4_fu_407_p2 = ($signed(r1_reg_338) + $signed(8'd255));

assign tmp_5_fu_413_p3 = {{tmp_4_fu_407_p2}, {8'd0}};

assign tmp_6_cast_fu_421_p1 = tmp_5_fu_413_p3;

assign tmp_6_fu_468_p2 = (tmp_8_cast_reg_1045 + c_cast_cast_fu_443_p1);

assign tmp_7_fu_431_p3 = {{r_fu_425_p2}, {8'd0}};

assign tmp_8_cast_fu_439_p1 = tmp_7_fu_431_p3;

assign tmp_8_fu_493_p2 = (tmp_6_cast_reg_1030 + tmp_18_cast_cast_fu_490_p1);

assign tmp_9_cast_fu_452_p1 = tmp_9_fu_447_p2;

assign tmp_9_fu_447_p2 = (tmp_6_cast_reg_1030 + c_cast_cast_fu_443_p1);

assign tmp_fu_636_p2 = ($signed(tmp2_reg_1296) + $signed(tmp1_reg_1291));

assign tmp_s_fu_478_p2 = ((c_reg_349 < 9'd255) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    tmp_3_cast_reg_1017[7:0] <= 8'b00000000;
    tmp_3_cast_reg_1017[16] <= 1'b0;
    tmp_6_cast_reg_1030[7:0] <= 8'b00000000;
    tmp_6_cast_reg_1030[16] <= 1'b0;
    tmp_8_cast_reg_1045[7:0] <= 8'b00000000;
    tmp_8_cast_reg_1045[16] <= 1'b0;
    tmp_18_cast_cast_reg_1084[16:9] <= 8'b00000000;
    col_offset_0_2_cast_s_reg_1121[16:9] <= 8'b00000000;
    tmp_18_cast1_reg_1137[31:17] <= 15'b000000000000000;
    col_offset_1_2_cast_s_reg_1189[16:9] <= 8'b00000000;
    col_offset_2_2_cast_s_reg_1381[16:9] <= 8'b00000000;
end

endmodule //convolveMedium

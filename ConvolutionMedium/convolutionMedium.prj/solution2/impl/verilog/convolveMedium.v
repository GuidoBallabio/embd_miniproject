// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="convolveMedium,hls_ip_2017_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z010clg400-1,HLS_INPUT_CLOCK=8.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.400000,HLS_SYN_LAT=256033,HLS_SYN_TPT=none,HLS_SYN_MEM=66,HLS_SYN_DSP=20,HLS_SYN_FF=2324,HLS_SYN_LUT=2182}" *)

module convolveMedium (
        ap_clk,
        ap_rst_n,
        s_axi_convm_AWVALID,
        s_axi_convm_AWREADY,
        s_axi_convm_AWADDR,
        s_axi_convm_WVALID,
        s_axi_convm_WREADY,
        s_axi_convm_WDATA,
        s_axi_convm_WSTRB,
        s_axi_convm_ARVALID,
        s_axi_convm_ARREADY,
        s_axi_convm_ARADDR,
        s_axi_convm_RVALID,
        s_axi_convm_RREADY,
        s_axi_convm_RDATA,
        s_axi_convm_RRESP,
        s_axi_convm_BVALID,
        s_axi_convm_BREADY,
        s_axi_convm_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 33'd1;
parameter    ap_ST_fsm_state2 = 33'd2;
parameter    ap_ST_fsm_state3 = 33'd4;
parameter    ap_ST_fsm_state4 = 33'd8;
parameter    ap_ST_fsm_state5 = 33'd16;
parameter    ap_ST_fsm_state6 = 33'd32;
parameter    ap_ST_fsm_state7 = 33'd64;
parameter    ap_ST_fsm_state8 = 33'd128;
parameter    ap_ST_fsm_state9 = 33'd256;
parameter    ap_ST_fsm_state10 = 33'd512;
parameter    ap_ST_fsm_state11 = 33'd1024;
parameter    ap_ST_fsm_state12 = 33'd2048;
parameter    ap_ST_fsm_state13 = 33'd4096;
parameter    ap_ST_fsm_state14 = 33'd8192;
parameter    ap_ST_fsm_state15 = 33'd16384;
parameter    ap_ST_fsm_state16 = 33'd32768;
parameter    ap_ST_fsm_state17 = 33'd65536;
parameter    ap_ST_fsm_state18 = 33'd131072;
parameter    ap_ST_fsm_state19 = 33'd262144;
parameter    ap_ST_fsm_state20 = 33'd524288;
parameter    ap_ST_fsm_state21 = 33'd1048576;
parameter    ap_ST_fsm_state22 = 33'd2097152;
parameter    ap_ST_fsm_state23 = 33'd4194304;
parameter    ap_ST_fsm_state24 = 33'd8388608;
parameter    ap_ST_fsm_state25 = 33'd16777216;
parameter    ap_ST_fsm_state26 = 33'd33554432;
parameter    ap_ST_fsm_state27 = 33'd67108864;
parameter    ap_ST_fsm_state28 = 33'd134217728;
parameter    ap_ST_fsm_state29 = 33'd268435456;
parameter    ap_ST_fsm_state30 = 33'd536870912;
parameter    ap_ST_fsm_state31 = 33'd1073741824;
parameter    ap_ST_fsm_state32 = 33'd2147483648;
parameter    ap_ST_fsm_state33 = 33'd4294967296;
parameter    C_S_AXI_CONVM_DATA_WIDTH = 32;
parameter    C_S_AXI_CONVM_ADDR_WIDTH = 18;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONVM_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input   s_axi_convm_AWVALID;
output   s_axi_convm_AWREADY;
input  [C_S_AXI_CONVM_ADDR_WIDTH - 1:0] s_axi_convm_AWADDR;
input   s_axi_convm_WVALID;
output   s_axi_convm_WREADY;
input  [C_S_AXI_CONVM_DATA_WIDTH - 1:0] s_axi_convm_WDATA;
input  [C_S_AXI_CONVM_WSTRB_WIDTH - 1:0] s_axi_convm_WSTRB;
input   s_axi_convm_ARVALID;
output   s_axi_convm_ARREADY;
input  [C_S_AXI_CONVM_ADDR_WIDTH - 1:0] s_axi_convm_ARADDR;
output   s_axi_convm_RVALID;
input   s_axi_convm_RREADY;
output  [C_S_AXI_CONVM_DATA_WIDTH - 1:0] s_axi_convm_RDATA;
output  [1:0] s_axi_convm_RRESP;
output   s_axi_convm_BVALID;
input   s_axi_convm_BREADY;
output  [1:0] s_axi_convm_BRESP;
output   interrupt;

reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [32:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
reg   [15:0] in_r_address0;
reg    in_r_ce0;
wire   [7:0] in_r_q0;
reg   [15:0] out_r_address0;
reg    out_r_ce0;
reg    out_r_we0;
reg   [7:0] out_r_d0;
reg   [3:0] krnl_address0;
reg    krnl_ce0;
wire   [7:0] krnl_q0;
reg  signed [7:0] reg_361;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state28;
reg  signed [7:0] reg_365;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state29;
reg  signed [7:0] reg_369;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state30;
wire   [7:0] grp_fu_373_p2;
reg   [7:0] reg_378;
wire    ap_CS_fsm_state19;
reg   [0:0] tmp_2_6_reg_1219;
wire   [16:0] tmp_3_cast_fu_390_p1;
reg   [16:0] tmp_3_cast_reg_962;
wire    ap_CS_fsm_state2;
wire   [16:0] tmp_6_cast_fu_414_p1;
reg   [16:0] tmp_6_cast_reg_975;
wire   [0:0] exitcond_fu_394_p2;
wire   [7:0] r_fu_418_p2;
reg   [7:0] r_reg_985;
wire   [16:0] tmp_8_cast_fu_432_p1;
reg   [16:0] tmp_8_cast_reg_990;
reg   [15:0] in_addr_3_reg_1000;
wire    ap_CS_fsm_state3;
reg   [15:0] in_addr_4_reg_1005;
reg   [15:0] in_addr_5_reg_1010;
reg   [15:0] out_addr_reg_1015;
wire   [0:0] tmp_s_fu_471_p2;
reg   [0:0] tmp_s_reg_1020;
wire   [8:0] tmp_1_fu_477_p2;
reg   [8:0] tmp_1_reg_1024;
wire   [16:0] tmp_18_cast_cast_fu_483_p1;
reg   [16:0] tmp_18_cast_cast_reg_1029;
wire    ap_CS_fsm_state4;
reg  signed [7:0] krnl_load_reg_1045;
reg  signed [7:0] krnl_load_1_reg_1057;
wire   [7:0] tmp_21_0_0_1_fu_514_p2;
reg   [7:0] tmp_21_0_0_1_reg_1065;
reg  signed [7:0] krnl_load_2_reg_1070;
reg  signed [7:0] krnl_load_3_reg_1078;
wire  signed [7:0] grp_fu_794_p3;
reg  signed [7:0] tmp1_reg_1086;
reg  signed [7:0] krnl_load_4_reg_1091;
wire   [8:0] col_offset_0_2_fu_519_p2;
reg   [8:0] col_offset_0_2_reg_1099;
wire   [7:0] tmp_21_0_0_2_fu_525_p2;
reg   [7:0] tmp_21_0_0_2_reg_1104;
reg  signed [7:0] krnl_load_5_reg_1109;
wire   [16:0] col_offset_0_2_cast_s_fu_530_p1;
reg   [16:0] col_offset_0_2_cast_s_reg_1117;
wire   [31:0] tmp_17_cast_fu_547_p1;
reg   [31:0] tmp_17_cast_reg_1128;
reg  signed [7:0] krnl_load_6_reg_1138;
wire  signed [7:0] grp_fu_800_p3;
reg  signed [7:0] tmp2_reg_1146;
wire   [7:0] tmp_21_0_1_1_fu_552_p2;
reg   [7:0] tmp_21_0_1_1_reg_1151;
reg  signed [7:0] krnl_load_7_reg_1161;
wire   [7:0] tmp_21_1_1_fu_566_p2;
reg   [7:0] tmp_21_1_1_reg_1169;
wire   [8:0] col_offset_1_2_fu_571_p2;
reg   [8:0] col_offset_1_2_reg_1174;
wire  signed [7:0] grp_fu_806_p3;
reg  signed [7:0] tmp8_reg_1180;
wire   [7:0] tmp_21_0_2_1_fu_577_p2;
reg   [7:0] tmp_21_0_2_1_reg_1185;
reg  signed [7:0] krnl_load_8_reg_1190;
wire  signed [7:0] grp_fu_813_p3;
reg  signed [7:0] tmp4_reg_1198;
wire   [16:0] col_offset_1_2_cast_s_fu_582_p1;
reg   [16:0] col_offset_1_2_cast_s_reg_1203;
(* use_dsp48 = "no" *) wire   [7:0] tmp7_fu_595_p2;
reg   [7:0] tmp7_reg_1214;
wire   [0:0] tmp_2_6_fu_599_p2;
wire  signed [7:0] grp_fu_826_p3;
reg  signed [7:0] tmp5_reg_1223;
wire    ap_CS_fsm_state14;
reg   [15:0] out_addr_2_reg_1233;
reg  signed [7:0] in_load_9_reg_1238;
wire    ap_CS_fsm_state15;
reg  signed [7:0] in_load_10_reg_1250;
reg  signed [7:0] in_load_11_reg_1257;
wire    ap_CS_fsm_state16;
wire   [7:0] tmp_21_1_1_2_fu_638_p2;
reg   [7:0] tmp_21_1_1_2_reg_1264;
wire    ap_CS_fsm_state17;
wire   [7:0] tmp_21_1_2_2_fu_643_p2;
reg   [7:0] tmp_21_1_2_2_reg_1269;
wire  signed [7:0] grp_fu_839_p3;
reg  signed [7:0] tmp11_reg_1274;
wire    ap_CS_fsm_state18;
wire  signed [7:0] grp_fu_845_p3;
reg  signed [7:0] tmp12_reg_1279;
wire   [7:0] tmp_21_2_1_fu_657_p2;
reg   [7:0] tmp_21_2_1_reg_1284;
wire   [8:0] col_offset_2_2_fu_661_p2;
reg   [8:0] col_offset_2_2_reg_1289;
wire   [16:0] col_offset_2_2_cast_s_fu_667_p1;
reg   [16:0] col_offset_2_2_cast_s_reg_1295;
wire    ap_CS_fsm_state20;
(* use_dsp48 = "no" *) wire   [7:0] tmp14_fu_680_p2;
reg   [7:0] tmp14_reg_1306;
wire   [0:0] tmp_3_7_fu_684_p2;
reg   [0:0] tmp_3_7_reg_1311;
wire    ap_CS_fsm_state21;
reg   [15:0] out_addr_3_reg_1320;
reg  signed [7:0] in_load_12_reg_1325;
wire    ap_CS_fsm_state22;
reg  signed [7:0] in_load_13_reg_1336;
reg  signed [7:0] in_load_14_reg_1342;
wire    ap_CS_fsm_state23;
wire   [7:0] tmp_21_2_1_2_fu_708_p2;
reg   [7:0] tmp_21_2_1_2_reg_1348;
wire    ap_CS_fsm_state24;
wire   [7:0] tmp_21_2_2_2_fu_712_p2;
reg   [7:0] tmp_21_2_2_2_reg_1353;
wire  signed [7:0] grp_fu_871_p3;
reg  signed [7:0] tmp18_reg_1358;
wire    ap_CS_fsm_state25;
wire  signed [7:0] grp_fu_876_p3;
reg  signed [7:0] tmp19_reg_1363;
wire   [7:0] tmp_21_3_fu_726_p2;
reg   [7:0] tmp_21_3_reg_1368;
wire    ap_CS_fsm_state26;
wire   [7:0] tmp_21_3_1_fu_730_p2;
reg   [7:0] tmp_21_3_1_reg_1373;
wire   [7:0] tmp_21_3_1_2_fu_734_p2;
reg   [7:0] tmp_21_3_1_2_reg_1378;
wire   [8:0] col_offset_3_2_fu_738_p2;
reg   [8:0] col_offset_3_2_reg_1383;
wire   [16:0] tmp_22_fu_748_p2;
reg   [16:0] tmp_22_reg_1388;
wire   [16:0] tmp_23_fu_753_p2;
reg   [16:0] tmp_23_reg_1393;
wire   [16:0] tmp_24_fu_758_p2;
reg   [16:0] tmp_24_reg_1398;
wire    ap_CS_fsm_state27;
(* use_dsp48 = "no" *) wire   [7:0] tmp21_fu_767_p2;
reg   [7:0] tmp21_reg_1408;
wire  signed [7:0] grp_fu_899_p3;
reg  signed [7:0] tmp25_reg_1413;
wire   [7:0] tmp_21_3_2_2_fu_779_p2;
reg   [7:0] tmp_21_3_2_2_reg_1428;
wire    ap_CS_fsm_state31;
wire  signed [7:0] grp_fu_904_p3;
reg  signed [7:0] tmp26_reg_1433;
wire    ap_CS_fsm_state32;
reg   [7:0] r1_reg_338;
reg   [8:0] c_reg_349;
wire    ap_CS_fsm_state33;
wire   [31:0] tmp_9_cast_fu_445_p1;
wire   [31:0] tmp_10_cast_fu_455_p1;
wire   [31:0] tmp_11_cast_fu_466_p1;
wire   [31:0] tmp_12_cast_fu_491_p1;
wire   [31:0] tmp_13_cast_fu_500_p1;
wire   [31:0] tmp_14_cast_fu_509_p1;
wire   [31:0] tmp_16_cast_fu_538_p1;
wire   [31:0] tmp_18_cast1_fu_561_p1;
wire   [31:0] tmp_19_cast_fu_590_p1;
wire   [31:0] tmp_20_cast_fu_608_p1;
wire   [31:0] tmp_21_cast_fu_633_p1;
wire   [31:0] tmp_22_cast_fu_675_p1;
wire   [31:0] tmp_23_cast_fu_693_p1;
wire   [31:0] tmp_24_cast_fu_703_p1;
wire   [31:0] tmp_25_cast_fu_763_p1;
wire   [31:0] tmp_26_cast_fu_771_p1;
wire   [31:0] tmp_27_cast_fu_775_p1;
wire   [7:0] sum_2_0_2_2_fu_622_p2;
wire   [7:0] sum_2_1_2_2_fu_651_p2;
wire   [7:0] sum_2_2_2_2_fu_720_p2;
wire   [7:0] sum_2_3_2_2_fu_788_p2;
wire   [15:0] tmp_2_fu_382_p3;
wire   [7:0] tmp_4_fu_400_p2;
wire   [15:0] tmp_5_fu_406_p3;
wire   [15:0] tmp_7_fu_424_p3;
wire   [16:0] c_cast_cast_fu_436_p1;
wire   [16:0] tmp_9_fu_440_p2;
wire   [16:0] tmp_3_fu_450_p2;
wire   [16:0] tmp_6_fu_461_p2;
wire   [16:0] tmp_8_fu_486_p2;
wire   [16:0] tmp_10_fu_496_p2;
wire   [16:0] tmp_11_fu_505_p2;
wire   [16:0] tmp_13_fu_533_p2;
wire   [16:0] tmp_14_fu_543_p2;
wire   [16:0] tmp_15_fu_557_p2;
wire   [16:0] tmp_16_fu_585_p2;
wire  signed [7:0] grp_fu_819_p3;
wire   [16:0] tmp_17_fu_604_p2;
(* use_dsp48 = "no" *) wire   [7:0] tmp3_fu_618_p2;
(* use_dsp48 = "no" *) wire   [7:0] tmp_fu_614_p2;
wire   [16:0] tmp_18_fu_629_p2;
(* use_dsp48 = "no" *) wire   [7:0] tmp10_fu_647_p2;
wire   [16:0] tmp_19_fu_670_p2;
wire  signed [7:0] grp_fu_856_p3;
wire  signed [7:0] grp_fu_864_p3;
wire   [16:0] tmp_20_fu_689_p2;
wire   [16:0] tmp_21_fu_699_p2;
(* use_dsp48 = "no" *) wire   [7:0] tmp17_fu_716_p2;
wire   [16:0] col_offset_3_2_cast_s_fu_744_p1;
wire  signed [7:0] grp_fu_887_p3;
wire  signed [7:0] grp_fu_893_p3;
(* use_dsp48 = "no" *) wire   [7:0] tmp24_fu_784_p2;
wire  signed [7:0] grp_fu_832_p3;
wire  signed [7:0] grp_fu_850_p3;
wire  signed [7:0] grp_fu_881_p3;
wire  signed [7:0] grp_fu_910_p3;
reg   [32:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 33'd1;
end

convolveMedium_convm_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONVM_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONVM_DATA_WIDTH ))
convolveMedium_convm_s_axi_U(
    .AWVALID(s_axi_convm_AWVALID),
    .AWREADY(s_axi_convm_AWREADY),
    .AWADDR(s_axi_convm_AWADDR),
    .WVALID(s_axi_convm_WVALID),
    .WREADY(s_axi_convm_WREADY),
    .WDATA(s_axi_convm_WDATA),
    .WSTRB(s_axi_convm_WSTRB),
    .ARVALID(s_axi_convm_ARVALID),
    .ARREADY(s_axi_convm_ARREADY),
    .ARADDR(s_axi_convm_ARADDR),
    .RVALID(s_axi_convm_RVALID),
    .RREADY(s_axi_convm_RREADY),
    .RDATA(s_axi_convm_RDATA),
    .RRESP(s_axi_convm_RRESP),
    .BVALID(s_axi_convm_BVALID),
    .BREADY(s_axi_convm_BREADY),
    .BRESP(s_axi_convm_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .in_r_address0(in_r_address0),
    .in_r_ce0(in_r_ce0),
    .in_r_q0(in_r_q0),
    .out_r_address0(out_r_address0),
    .out_r_ce0(out_r_ce0),
    .out_r_we0(out_r_we0),
    .out_r_d0(out_r_d0),
    .krnl_address0(krnl_address0),
    .krnl_ce0(krnl_ce0),
    .krnl_q0(krnl_q0)
);

convolveMedium_mabkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
convolveMedium_mabkb_U0(
    .din0(krnl_load_reg_1045),
    .din1(reg_361),
    .din2(tmp_21_0_0_1_reg_1065),
    .dout(grp_fu_794_p3)
);

convolveMedium_mabkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
convolveMedium_mabkb_U1(
    .din0(krnl_load_3_reg_1078),
    .din1(reg_361),
    .din2(tmp_21_0_0_2_reg_1104),
    .dout(grp_fu_800_p3)
);

convolveMedium_mabkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
convolveMedium_mabkb_U2(
    .din0(reg_369),
    .din1(krnl_load_1_reg_1057),
    .din2(reg_378),
    .dout(grp_fu_806_p3)
);

convolveMedium_mabkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
convolveMedium_mabkb_U3(
    .din0(krnl_load_5_reg_1109),
    .din1(reg_365),
    .din2(tmp_21_0_1_1_reg_1151),
    .dout(grp_fu_813_p3)
);

convolveMedium_mabkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
convolveMedium_mabkb_U4(
    .din0(reg_365),
    .din1(krnl_load_2_reg_1070),
    .din2(tmp_21_1_1_reg_1169),
    .dout(grp_fu_819_p3)
);

convolveMedium_macud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
convolveMedium_macud_U5(
    .din0(krnl_load_6_reg_1138),
    .din1(reg_361),
    .din2(grp_fu_832_p3),
    .dout(grp_fu_826_p3)
);

convolveMedium_mabkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
convolveMedium_mabkb_U6(
    .din0(krnl_load_8_reg_1190),
    .din1(reg_365),
    .din2(tmp_21_0_2_1_reg_1185),
    .dout(grp_fu_832_p3)
);

convolveMedium_mabkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
convolveMedium_mabkb_U7(
    .din0(reg_369),
    .din1(krnl_load_4_reg_1091),
    .din2(tmp_21_1_1_2_reg_1264),
    .dout(grp_fu_839_p3)
);

convolveMedium_macud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
convolveMedium_macud_U8(
    .din0(in_load_9_reg_1238),
    .din1(krnl_load_6_reg_1138),
    .din2(grp_fu_850_p3),
    .dout(grp_fu_845_p3)
);

convolveMedium_mabkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
convolveMedium_mabkb_U9(
    .din0(in_load_10_reg_1250),
    .din1(krnl_load_7_reg_1161),
    .din2(tmp_21_1_2_2_reg_1269),
    .dout(grp_fu_850_p3)
);

convolveMedium_mabkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
convolveMedium_mabkb_U10(
    .din0(reg_369),
    .din1(krnl_load_1_reg_1057),
    .din2(reg_378),
    .dout(grp_fu_856_p3)
);

convolveMedium_mabkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
convolveMedium_mabkb_U11(
    .din0(reg_365),
    .din1(krnl_load_2_reg_1070),
    .din2(tmp_21_2_1_reg_1284),
    .dout(grp_fu_864_p3)
);

convolveMedium_mabkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
convolveMedium_mabkb_U12(
    .din0(in_load_10_reg_1250),
    .din1(krnl_load_4_reg_1091),
    .din2(tmp_21_2_1_2_reg_1348),
    .dout(grp_fu_871_p3)
);

convolveMedium_macud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
convolveMedium_macud_U13(
    .din0(in_load_12_reg_1325),
    .din1(krnl_load_6_reg_1138),
    .din2(grp_fu_881_p3),
    .dout(grp_fu_876_p3)
);

convolveMedium_mabkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
convolveMedium_mabkb_U14(
    .din0(in_load_13_reg_1336),
    .din1(krnl_load_7_reg_1161),
    .din2(tmp_21_2_2_2_reg_1353),
    .dout(grp_fu_881_p3)
);

convolveMedium_mabkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
convolveMedium_mabkb_U15(
    .din0(in_load_10_reg_1250),
    .din1(krnl_load_1_reg_1057),
    .din2(tmp_21_3_reg_1368),
    .dout(grp_fu_887_p3)
);

convolveMedium_mabkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
convolveMedium_mabkb_U16(
    .din0(in_load_11_reg_1257),
    .din1(krnl_load_2_reg_1070),
    .din2(tmp_21_3_1_reg_1373),
    .dout(grp_fu_893_p3)
);

convolveMedium_mabkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
convolveMedium_mabkb_U17(
    .din0(in_load_13_reg_1336),
    .din1(krnl_load_4_reg_1091),
    .din2(tmp_21_3_1_2_reg_1378),
    .dout(grp_fu_899_p3)
);

convolveMedium_macud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
convolveMedium_macud_U18(
    .din0(reg_361),
    .din1(krnl_load_6_reg_1138),
    .din2(grp_fu_910_p3),
    .dout(grp_fu_904_p3)
);

convolveMedium_mabkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
convolveMedium_mabkb_U19(
    .din0(reg_365),
    .din1(krnl_load_7_reg_1161),
    .din2(tmp_21_3_2_2_reg_1428),
    .dout(grp_fu_910_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_394_p2 == 1'd0))) begin
        c_reg_349 <= 9'd1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        c_reg_349 <= col_offset_3_2_reg_1383;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) & ((1'd0 == tmp_s_reg_1020) | (tmp_2_6_reg_1219 == 1'd0) | (1'd0 == tmp_3_7_reg_1311)))) begin
        r1_reg_338 <= r_reg_985;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        r1_reg_338 <= 8'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        col_offset_0_2_cast_s_reg_1117[8 : 0] <= col_offset_0_2_cast_s_fu_530_p1[8 : 0];
        krnl_load_5_reg_1109 <= krnl_q0;
        tmp_21_0_0_2_reg_1104 <= tmp_21_0_0_2_fu_525_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        col_offset_0_2_reg_1099 <= col_offset_0_2_fu_519_p2;
        krnl_load_4_reg_1091 <= krnl_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        col_offset_1_2_cast_s_reg_1203[8 : 0] <= col_offset_1_2_cast_s_fu_582_p1[8 : 0];
        krnl_load_8_reg_1190 <= krnl_q0;
        tmp4_reg_1198 <= grp_fu_813_p3;
        tmp7_reg_1214 <= tmp7_fu_595_p2;
        tmp_21_0_2_1_reg_1185 <= tmp_21_0_2_1_fu_577_p2;
        tmp_2_6_reg_1219 <= tmp_2_6_fu_599_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        col_offset_1_2_reg_1174 <= col_offset_1_2_fu_571_p2;
        krnl_load_7_reg_1161 <= krnl_q0;
        tmp8_reg_1180 <= grp_fu_806_p3;
        tmp_21_0_1_1_reg_1151 <= tmp_21_0_1_1_fu_552_p2;
        tmp_21_1_1_reg_1169 <= tmp_21_1_1_fu_566_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        col_offset_2_2_cast_s_reg_1295[8 : 0] <= col_offset_2_2_cast_s_fu_667_p1[8 : 0];
        tmp14_reg_1306 <= tmp14_fu_680_p2;
        tmp_3_7_reg_1311 <= tmp_3_7_fu_684_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) & (tmp_2_6_reg_1219 == 1'd1))) begin
        col_offset_2_2_reg_1289 <= col_offset_2_2_fu_661_p2;
        tmp_21_2_1_reg_1284 <= tmp_21_2_1_fu_657_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_2_6_reg_1219 == 1'd1) & (1'b1 == ap_CS_fsm_state26) & (1'd1 == tmp_s_reg_1020) & (1'd1 == tmp_3_7_reg_1311))) begin
        col_offset_3_2_reg_1383 <= col_offset_3_2_fu_738_p2;
        tmp_21_3_1_2_reg_1378 <= tmp_21_3_1_2_fu_734_p2;
        tmp_21_3_1_reg_1373 <= tmp_21_3_1_fu_730_p2;
        tmp_21_3_reg_1368 <= tmp_21_3_fu_726_p2;
        tmp_22_reg_1388 <= tmp_22_fu_748_p2;
        tmp_23_reg_1393 <= tmp_23_fu_753_p2;
        tmp_24_reg_1398 <= tmp_24_fu_758_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        in_addr_3_reg_1000 <= tmp_9_cast_fu_445_p1;
        in_addr_4_reg_1005 <= tmp_10_cast_fu_455_p1;
        in_addr_5_reg_1010 <= tmp_11_cast_fu_466_p1;
        out_addr_reg_1015 <= tmp_10_cast_fu_455_p1;
        tmp_s_reg_1020 <= tmp_s_fu_471_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        in_load_10_reg_1250 <= in_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        in_load_11_reg_1257 <= in_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        in_load_12_reg_1325 <= in_r_q0;
        out_addr_3_reg_1320 <= tmp_23_cast_fu_693_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        in_load_13_reg_1336 <= in_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        in_load_14_reg_1342 <= in_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        in_load_9_reg_1238 <= in_r_q0;
        out_addr_2_reg_1233 <= tmp_20_cast_fu_608_p1;
        tmp5_reg_1223 <= grp_fu_826_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        krnl_load_1_reg_1057 <= krnl_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        krnl_load_2_reg_1070 <= krnl_q0;
        tmp_21_0_0_1_reg_1065 <= tmp_21_0_0_1_fu_514_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        krnl_load_3_reg_1078 <= krnl_q0;
        tmp1_reg_1086 <= grp_fu_794_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        krnl_load_6_reg_1138 <= krnl_q0;
        tmp2_reg_1146 <= grp_fu_800_p3;
        tmp_17_cast_reg_1128[16 : 0] <= tmp_17_cast_fu_547_p1[16 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        krnl_load_reg_1045 <= krnl_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_394_p2 == 1'd0))) begin
        r_reg_985 <= r_fu_418_p2;
        tmp_6_cast_reg_975[15 : 8] <= tmp_6_cast_fu_414_p1[15 : 8];
        tmp_8_cast_reg_990[15 : 8] <= tmp_8_cast_fu_432_p1[15 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state28))) begin
        reg_361 <= in_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state29))) begin
        reg_365 <= in_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state30))) begin
        reg_369 <= in_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((1'b1 == ap_CS_fsm_state19) & (tmp_2_6_reg_1219 == 1'd1)))) begin
        reg_378 <= grp_fu_373_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        tmp11_reg_1274 <= grp_fu_839_p3;
        tmp12_reg_1279 <= grp_fu_845_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        tmp18_reg_1358 <= grp_fu_871_p3;
        tmp19_reg_1363 <= grp_fu_876_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        tmp21_reg_1408 <= tmp21_fu_767_p2;
        tmp25_reg_1413 <= grp_fu_899_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        tmp26_reg_1433 <= grp_fu_904_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_18_cast_cast_reg_1029[8 : 0] <= tmp_18_cast_cast_fu_483_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == tmp_s_fu_471_p2))) begin
        tmp_1_reg_1024 <= tmp_1_fu_477_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        tmp_21_1_1_2_reg_1264 <= tmp_21_1_1_2_fu_638_p2;
        tmp_21_1_2_2_reg_1269 <= tmp_21_1_2_2_fu_643_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        tmp_21_2_1_2_reg_1348 <= tmp_21_2_1_2_fu_708_p2;
        tmp_21_2_2_2_reg_1353 <= tmp_21_2_2_2_fu_712_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        tmp_21_3_2_2_reg_1428 <= tmp_21_3_2_2_fu_779_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        tmp_3_cast_reg_962[15 : 8] <= tmp_3_cast_fu_390_p1[15 : 8];
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'd1 == exitcond_fu_394_p2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'd1 == exitcond_fu_394_p2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        in_r_address0 = tmp_27_cast_fu_775_p1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        in_r_address0 = tmp_26_cast_fu_771_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        in_r_address0 = tmp_25_cast_fu_763_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        in_r_address0 = tmp_24_cast_fu_703_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        in_r_address0 = tmp_23_cast_fu_693_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        in_r_address0 = tmp_22_cast_fu_675_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        in_r_address0 = tmp_21_cast_fu_633_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        in_r_address0 = tmp_20_cast_fu_608_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        in_r_address0 = tmp_19_cast_fu_590_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        in_r_address0 = tmp_18_cast1_fu_561_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        in_r_address0 = tmp_17_cast_fu_547_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        in_r_address0 = tmp_16_cast_fu_538_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        in_r_address0 = in_addr_5_reg_1010;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        in_r_address0 = in_addr_4_reg_1005;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        in_r_address0 = in_addr_3_reg_1000;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        in_r_address0 = tmp_14_cast_fu_509_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        in_r_address0 = tmp_13_cast_fu_500_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        in_r_address0 = tmp_12_cast_fu_491_p1;
    end else begin
        in_r_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state27))) begin
        in_r_ce0 = 1'b1;
    end else begin
        in_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        krnl_address0 = 32'd8;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        krnl_address0 = 32'd5;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        krnl_address0 = 32'd2;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        krnl_address0 = 32'd7;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        krnl_address0 = 32'd4;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        krnl_address0 = 32'd1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        krnl_address0 = 32'd6;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        krnl_address0 = 32'd3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        krnl_address0 = 32'd0;
    end else begin
        krnl_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state4))) begin
        krnl_ce0 = 1'b1;
    end else begin
        krnl_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        out_r_address0 = out_addr_3_reg_1320;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        out_r_address0 = out_addr_2_reg_1233;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        out_r_address0 = tmp_17_cast_reg_1128;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        out_r_address0 = out_addr_reg_1015;
    end else begin
        out_r_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state33))) begin
        out_r_ce0 = 1'b1;
    end else begin
        out_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        out_r_d0 = sum_2_3_2_2_fu_788_p2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        out_r_d0 = sum_2_2_2_2_fu_720_p2;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        out_r_d0 = sum_2_1_2_2_fu_651_p2;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        out_r_d0 = sum_2_0_2_2_fu_622_p2;
    end else begin
        out_r_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state33) | ((tmp_2_6_reg_1219 == 1'd1) & (1'b1 == ap_CS_fsm_state26) & (1'd1 == tmp_s_reg_1020)))) begin
        out_r_we0 = 1'b1;
    end else begin
        out_r_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (1'd1 == exitcond_fu_394_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (1'd0 == tmp_s_fu_471_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            if (((1'b1 == ap_CS_fsm_state19) & (tmp_2_6_reg_1219 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            if (((1'b1 == ap_CS_fsm_state26) & ((1'd0 == tmp_s_reg_1020) | (tmp_2_6_reg_1219 == 1'd0) | (1'd0 == tmp_3_7_reg_1311)))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign c_cast_cast_fu_436_p1 = c_reg_349;

assign col_offset_0_2_cast_s_fu_530_p1 = col_offset_0_2_reg_1099;

assign col_offset_0_2_fu_519_p2 = (c_reg_349 + 9'd1);

assign col_offset_1_2_cast_s_fu_582_p1 = col_offset_1_2_reg_1174;

assign col_offset_1_2_fu_571_p2 = (c_reg_349 + 9'd2);

assign col_offset_2_2_cast_s_fu_667_p1 = col_offset_2_2_reg_1289;

assign col_offset_2_2_fu_661_p2 = (c_reg_349 + 9'd3);

assign col_offset_3_2_cast_s_fu_744_p1 = col_offset_3_2_fu_738_p2;

assign col_offset_3_2_fu_738_p2 = (c_reg_349 + 9'd4);

assign exitcond_fu_394_p2 = ((r1_reg_338 == 8'd255) ? 1'b1 : 1'b0);

assign grp_fu_373_p2 = ($signed(reg_361) * $signed(krnl_load_reg_1045));

assign r_fu_418_p2 = (r1_reg_338 + 8'd1);

assign sum_2_0_2_2_fu_622_p2 = (tmp3_fu_618_p2 + tmp_fu_614_p2);

assign sum_2_1_2_2_fu_651_p2 = (tmp7_reg_1214 + tmp10_fu_647_p2);

assign sum_2_2_2_2_fu_720_p2 = (tmp14_reg_1306 + tmp17_fu_716_p2);

assign sum_2_3_2_2_fu_788_p2 = (tmp21_reg_1408 + tmp24_fu_784_p2);

assign tmp10_fu_647_p2 = ($signed(tmp11_reg_1274) + $signed(tmp12_reg_1279));

assign tmp14_fu_680_p2 = ($signed(grp_fu_856_p3) + $signed(grp_fu_864_p3));

assign tmp17_fu_716_p2 = ($signed(tmp18_reg_1358) + $signed(tmp19_reg_1363));

assign tmp21_fu_767_p2 = ($signed(grp_fu_887_p3) + $signed(grp_fu_893_p3));

assign tmp24_fu_784_p2 = ($signed(tmp25_reg_1413) + $signed(tmp26_reg_1433));

assign tmp3_fu_618_p2 = ($signed(tmp5_reg_1223) + $signed(tmp4_reg_1198));

assign tmp7_fu_595_p2 = ($signed(tmp8_reg_1180) + $signed(grp_fu_819_p3));

assign tmp_10_cast_fu_455_p1 = tmp_3_fu_450_p2;

assign tmp_10_fu_496_p2 = (tmp_3_cast_reg_962 + tmp_18_cast_cast_reg_1029);

assign tmp_11_cast_fu_466_p1 = tmp_6_fu_461_p2;

assign tmp_11_fu_505_p2 = (tmp_8_cast_reg_990 + tmp_18_cast_cast_reg_1029);

assign tmp_12_cast_fu_491_p1 = tmp_8_fu_486_p2;

assign tmp_13_cast_fu_500_p1 = tmp_10_fu_496_p2;

assign tmp_13_fu_533_p2 = (tmp_6_cast_reg_975 + col_offset_0_2_cast_s_fu_530_p1);

assign tmp_14_cast_fu_509_p1 = tmp_11_fu_505_p2;

assign tmp_14_fu_543_p2 = (tmp_3_cast_reg_962 + col_offset_0_2_cast_s_reg_1117);

assign tmp_15_fu_557_p2 = (tmp_8_cast_reg_990 + col_offset_0_2_cast_s_reg_1117);

assign tmp_16_cast_fu_538_p1 = tmp_13_fu_533_p2;

assign tmp_16_fu_585_p2 = (tmp_6_cast_reg_975 + col_offset_1_2_cast_s_fu_582_p1);

assign tmp_17_cast_fu_547_p1 = tmp_14_fu_543_p2;

assign tmp_17_fu_604_p2 = (tmp_3_cast_reg_962 + col_offset_1_2_cast_s_reg_1203);

assign tmp_18_cast1_fu_561_p1 = tmp_15_fu_557_p2;

assign tmp_18_cast_cast_fu_483_p1 = tmp_1_reg_1024;

assign tmp_18_fu_629_p2 = (tmp_8_cast_reg_990 + col_offset_1_2_cast_s_reg_1203);

assign tmp_19_cast_fu_590_p1 = tmp_16_fu_585_p2;

assign tmp_19_fu_670_p2 = (tmp_6_cast_reg_975 + col_offset_2_2_cast_s_fu_667_p1);

assign tmp_1_fu_477_p2 = ($signed(c_reg_349) + $signed(9'd511));

assign tmp_20_cast_fu_608_p1 = tmp_17_fu_604_p2;

assign tmp_20_fu_689_p2 = (tmp_3_cast_reg_962 + col_offset_2_2_cast_s_reg_1295);

assign tmp_21_0_0_1_fu_514_p2 = ($signed(krnl_load_1_reg_1057) * $signed(reg_365));

assign tmp_21_0_0_2_fu_525_p2 = ($signed(krnl_load_2_reg_1070) * $signed(reg_365));

assign tmp_21_0_1_1_fu_552_p2 = ($signed(krnl_load_4_reg_1091) * $signed(reg_369));

assign tmp_21_0_2_1_fu_577_p2 = ($signed(krnl_load_7_reg_1161) * $signed(reg_369));

assign tmp_21_1_1_2_fu_638_p2 = ($signed(reg_365) * $signed(krnl_load_5_reg_1109));

assign tmp_21_1_1_fu_566_p2 = ($signed(reg_361) * $signed(krnl_load_3_reg_1078));

assign tmp_21_1_2_2_fu_643_p2 = ($signed(in_load_11_reg_1257) * $signed(krnl_load_8_reg_1190));

assign tmp_21_2_1_2_fu_708_p2 = ($signed(in_load_11_reg_1257) * $signed(krnl_load_5_reg_1109));

assign tmp_21_2_1_fu_657_p2 = ($signed(in_load_9_reg_1238) * $signed(krnl_load_3_reg_1078));

assign tmp_21_2_2_2_fu_712_p2 = ($signed(in_load_14_reg_1342) * $signed(krnl_load_8_reg_1190));

assign tmp_21_3_1_2_fu_734_p2 = ($signed(in_load_14_reg_1342) * $signed(krnl_load_5_reg_1109));

assign tmp_21_3_1_fu_730_p2 = ($signed(in_load_12_reg_1325) * $signed(krnl_load_3_reg_1078));

assign tmp_21_3_2_2_fu_779_p2 = ($signed(reg_369) * $signed(krnl_load_8_reg_1190));

assign tmp_21_3_fu_726_p2 = ($signed(in_load_9_reg_1238) * $signed(krnl_load_reg_1045));

assign tmp_21_cast_fu_633_p1 = tmp_18_fu_629_p2;

assign tmp_21_fu_699_p2 = (tmp_8_cast_reg_990 + col_offset_2_2_cast_s_reg_1295);

assign tmp_22_cast_fu_675_p1 = tmp_19_fu_670_p2;

assign tmp_22_fu_748_p2 = (tmp_6_cast_reg_975 + col_offset_3_2_cast_s_fu_744_p1);

assign tmp_23_cast_fu_693_p1 = tmp_20_fu_689_p2;

assign tmp_23_fu_753_p2 = (tmp_3_cast_reg_962 + col_offset_3_2_cast_s_fu_744_p1);

assign tmp_24_cast_fu_703_p1 = tmp_21_fu_699_p2;

assign tmp_24_fu_758_p2 = (tmp_8_cast_reg_990 + col_offset_3_2_cast_s_fu_744_p1);

assign tmp_25_cast_fu_763_p1 = tmp_22_reg_1388;

assign tmp_26_cast_fu_771_p1 = tmp_23_reg_1393;

assign tmp_27_cast_fu_775_p1 = tmp_24_reg_1398;

assign tmp_2_6_fu_599_p2 = ((col_offset_1_2_reg_1174 < 9'd255) ? 1'b1 : 1'b0);

assign tmp_2_fu_382_p3 = {{r1_reg_338}, {8'd0}};

assign tmp_3_7_fu_684_p2 = ((col_offset_2_2_reg_1289 < 9'd255) ? 1'b1 : 1'b0);

assign tmp_3_cast_fu_390_p1 = tmp_2_fu_382_p3;

assign tmp_3_fu_450_p2 = (tmp_3_cast_reg_962 + c_cast_cast_fu_436_p1);

assign tmp_4_fu_400_p2 = ($signed(r1_reg_338) + $signed(8'd255));

assign tmp_5_fu_406_p3 = {{tmp_4_fu_400_p2}, {8'd0}};

assign tmp_6_cast_fu_414_p1 = tmp_5_fu_406_p3;

assign tmp_6_fu_461_p2 = (tmp_8_cast_reg_990 + c_cast_cast_fu_436_p1);

assign tmp_7_fu_424_p3 = {{r_fu_418_p2}, {8'd0}};

assign tmp_8_cast_fu_432_p1 = tmp_7_fu_424_p3;

assign tmp_8_fu_486_p2 = (tmp_6_cast_reg_975 + tmp_18_cast_cast_fu_483_p1);

assign tmp_9_cast_fu_445_p1 = tmp_9_fu_440_p2;

assign tmp_9_fu_440_p2 = (tmp_6_cast_reg_975 + c_cast_cast_fu_436_p1);

assign tmp_fu_614_p2 = ($signed(tmp2_reg_1146) + $signed(tmp1_reg_1086));

assign tmp_s_fu_471_p2 = ((c_reg_349 < 9'd255) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    tmp_3_cast_reg_962[7:0] <= 8'b00000000;
    tmp_3_cast_reg_962[16] <= 1'b0;
    tmp_6_cast_reg_975[7:0] <= 8'b00000000;
    tmp_6_cast_reg_975[16] <= 1'b0;
    tmp_8_cast_reg_990[7:0] <= 8'b00000000;
    tmp_8_cast_reg_990[16] <= 1'b0;
    tmp_18_cast_cast_reg_1029[16:9] <= 8'b00000000;
    col_offset_0_2_cast_s_reg_1117[16:9] <= 8'b00000000;
    tmp_17_cast_reg_1128[31:17] <= 15'b000000000000000;
    col_offset_1_2_cast_s_reg_1203[16:9] <= 8'b00000000;
    col_offset_2_2_cast_s_reg_1295[16:9] <= 8'b00000000;
end

endmodule //convolveMedium

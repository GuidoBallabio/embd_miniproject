// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="convolveMedium,hls_ip_2017_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z010clg400-1,HLS_INPUT_CLOCK=8.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.400000,HLS_SYN_LAT=247905,HLS_SYN_TPT=none,HLS_SYN_MEM=66,HLS_SYN_DSP=40,HLS_SYN_FF=3568,HLS_SYN_LUT=3152}" *)

module convolveMedium (
        ap_clk,
        ap_rst_n,
        s_axi_convm_AWVALID,
        s_axi_convm_AWREADY,
        s_axi_convm_AWADDR,
        s_axi_convm_WVALID,
        s_axi_convm_WREADY,
        s_axi_convm_WDATA,
        s_axi_convm_WSTRB,
        s_axi_convm_ARVALID,
        s_axi_convm_ARREADY,
        s_axi_convm_ARADDR,
        s_axi_convm_RVALID,
        s_axi_convm_RREADY,
        s_axi_convm_RDATA,
        s_axi_convm_RRESP,
        s_axi_convm_BVALID,
        s_axi_convm_BREADY,
        s_axi_convm_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 61'd1;
parameter    ap_ST_fsm_state2 = 61'd2;
parameter    ap_ST_fsm_state3 = 61'd4;
parameter    ap_ST_fsm_state4 = 61'd8;
parameter    ap_ST_fsm_state5 = 61'd16;
parameter    ap_ST_fsm_state6 = 61'd32;
parameter    ap_ST_fsm_state7 = 61'd64;
parameter    ap_ST_fsm_state8 = 61'd128;
parameter    ap_ST_fsm_state9 = 61'd256;
parameter    ap_ST_fsm_state10 = 61'd512;
parameter    ap_ST_fsm_state11 = 61'd1024;
parameter    ap_ST_fsm_state12 = 61'd2048;
parameter    ap_ST_fsm_state13 = 61'd4096;
parameter    ap_ST_fsm_state14 = 61'd8192;
parameter    ap_ST_fsm_state15 = 61'd16384;
parameter    ap_ST_fsm_state16 = 61'd32768;
parameter    ap_ST_fsm_state17 = 61'd65536;
parameter    ap_ST_fsm_state18 = 61'd131072;
parameter    ap_ST_fsm_state19 = 61'd262144;
parameter    ap_ST_fsm_state20 = 61'd524288;
parameter    ap_ST_fsm_state21 = 61'd1048576;
parameter    ap_ST_fsm_state22 = 61'd2097152;
parameter    ap_ST_fsm_state23 = 61'd4194304;
parameter    ap_ST_fsm_state24 = 61'd8388608;
parameter    ap_ST_fsm_state25 = 61'd16777216;
parameter    ap_ST_fsm_state26 = 61'd33554432;
parameter    ap_ST_fsm_state27 = 61'd67108864;
parameter    ap_ST_fsm_state28 = 61'd134217728;
parameter    ap_ST_fsm_state29 = 61'd268435456;
parameter    ap_ST_fsm_state30 = 61'd536870912;
parameter    ap_ST_fsm_state31 = 61'd1073741824;
parameter    ap_ST_fsm_state32 = 61'd2147483648;
parameter    ap_ST_fsm_state33 = 61'd4294967296;
parameter    ap_ST_fsm_state34 = 61'd8589934592;
parameter    ap_ST_fsm_state35 = 61'd17179869184;
parameter    ap_ST_fsm_state36 = 61'd34359738368;
parameter    ap_ST_fsm_state37 = 61'd68719476736;
parameter    ap_ST_fsm_state38 = 61'd137438953472;
parameter    ap_ST_fsm_state39 = 61'd274877906944;
parameter    ap_ST_fsm_state40 = 61'd549755813888;
parameter    ap_ST_fsm_state41 = 61'd1099511627776;
parameter    ap_ST_fsm_state42 = 61'd2199023255552;
parameter    ap_ST_fsm_state43 = 61'd4398046511104;
parameter    ap_ST_fsm_state44 = 61'd8796093022208;
parameter    ap_ST_fsm_state45 = 61'd17592186044416;
parameter    ap_ST_fsm_state46 = 61'd35184372088832;
parameter    ap_ST_fsm_state47 = 61'd70368744177664;
parameter    ap_ST_fsm_state48 = 61'd140737488355328;
parameter    ap_ST_fsm_state49 = 61'd281474976710656;
parameter    ap_ST_fsm_state50 = 61'd562949953421312;
parameter    ap_ST_fsm_state51 = 61'd1125899906842624;
parameter    ap_ST_fsm_state52 = 61'd2251799813685248;
parameter    ap_ST_fsm_state53 = 61'd4503599627370496;
parameter    ap_ST_fsm_state54 = 61'd9007199254740992;
parameter    ap_ST_fsm_state55 = 61'd18014398509481984;
parameter    ap_ST_fsm_state56 = 61'd36028797018963968;
parameter    ap_ST_fsm_state57 = 61'd72057594037927936;
parameter    ap_ST_fsm_state58 = 61'd144115188075855872;
parameter    ap_ST_fsm_state59 = 61'd288230376151711744;
parameter    ap_ST_fsm_state60 = 61'd576460752303423488;
parameter    ap_ST_fsm_state61 = 61'd1152921504606846976;
parameter    C_S_AXI_CONVM_DATA_WIDTH = 32;
parameter    C_S_AXI_CONVM_ADDR_WIDTH = 18;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONVM_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input   s_axi_convm_AWVALID;
output   s_axi_convm_AWREADY;
input  [C_S_AXI_CONVM_ADDR_WIDTH - 1:0] s_axi_convm_AWADDR;
input   s_axi_convm_WVALID;
output   s_axi_convm_WREADY;
input  [C_S_AXI_CONVM_DATA_WIDTH - 1:0] s_axi_convm_WDATA;
input  [C_S_AXI_CONVM_WSTRB_WIDTH - 1:0] s_axi_convm_WSTRB;
input   s_axi_convm_ARVALID;
output   s_axi_convm_ARREADY;
input  [C_S_AXI_CONVM_ADDR_WIDTH - 1:0] s_axi_convm_ARADDR;
output   s_axi_convm_RVALID;
input   s_axi_convm_RREADY;
output  [C_S_AXI_CONVM_DATA_WIDTH - 1:0] s_axi_convm_RDATA;
output  [1:0] s_axi_convm_RRESP;
output   s_axi_convm_BVALID;
input   s_axi_convm_BREADY;
output  [1:0] s_axi_convm_BRESP;
output   interrupt;

reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [60:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
reg   [15:0] in_r_address0;
reg    in_r_ce0;
wire   [7:0] in_r_q0;
reg   [15:0] out_r_address0;
reg    out_r_ce0;
reg    out_r_we0;
reg   [7:0] out_r_d0;
reg   [3:0] krnl_address0;
reg    krnl_ce0;
wire   [7:0] krnl_q0;
reg  signed [7:0] reg_493;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state56;
reg  signed [7:0] reg_497;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state57;
reg  signed [7:0] reg_501;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state58;
reg  signed [7:0] reg_505;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state28;
reg  signed [7:0] reg_509;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state29;
reg  signed [7:0] reg_513;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state30;
wire   [7:0] grp_fu_517_p2;
reg   [7:0] reg_557;
wire    ap_CS_fsm_state19;
reg   [0:0] tmp_2_6_reg_1826;
wire    ap_CS_fsm_state33;
reg   [0:0] tmp_4_8_reg_1938;
wire    ap_CS_fsm_state47;
reg   [0:0] tmp_6_10_reg_2040;
wire   [7:0] grp_fu_522_p2;
reg   [7:0] reg_561;
wire    ap_CS_fsm_state26;
reg   [0:0] tmp_3_7_reg_1887;
wire    ap_CS_fsm_state40;
reg   [0:0] tmp_5_9_reg_1989;
wire   [7:0] grp_fu_527_p2;
reg   [7:0] reg_565;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state31;
wire   [7:0] grp_fu_532_p2;
reg   [7:0] reg_569;
wire   [7:0] grp_fu_537_p2;
reg   [7:0] reg_573;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state38;
wire   [7:0] grp_fu_542_p2;
reg   [7:0] reg_577;
wire    ap_CS_fsm_state59;
wire   [7:0] grp_fu_547_p2;
reg   [7:0] reg_581;
wire   [7:0] grp_fu_552_p2;
reg   [7:0] reg_585;
wire    ap_CS_fsm_state45;
wire   [16:0] tmp_3_cast_fu_597_p1;
reg   [16:0] tmp_3_cast_reg_1537;
wire    ap_CS_fsm_state2;
wire   [16:0] tmp_6_cast_fu_621_p1;
reg   [16:0] tmp_6_cast_reg_1554;
wire   [0:0] exitcond_fu_601_p2;
wire   [7:0] r_fu_625_p2;
reg   [7:0] r_reg_1568;
wire   [16:0] tmp_8_cast_fu_639_p1;
reg   [16:0] tmp_8_cast_reg_1573;
reg   [15:0] in_addr_3_reg_1587;
wire    ap_CS_fsm_state3;
reg   [15:0] in_addr_4_reg_1592;
reg   [15:0] in_addr_5_reg_1597;
reg   [15:0] out_addr_reg_1602;
wire   [0:0] tmp_s_fu_678_p2;
reg   [0:0] tmp_s_reg_1607;
wire   [8:0] tmp_1_fu_684_p2;
reg   [8:0] tmp_1_reg_1611;
wire   [16:0] tmp_18_cast_cast_fu_690_p1;
reg   [16:0] tmp_18_cast_cast_reg_1616;
wire    ap_CS_fsm_state4;
reg  signed [7:0] krnl_load_reg_1632;
reg  signed [7:0] krnl_load_1_reg_1645;
wire   [7:0] tmp_21_0_0_1_fu_721_p2;
reg   [7:0] tmp_21_0_0_1_reg_1657;
reg  signed [7:0] krnl_load_2_reg_1662;
reg  signed [7:0] krnl_load_3_reg_1674;
wire  signed [7:0] grp_fu_1219_p3;
reg  signed [7:0] tmp1_reg_1683;
reg  signed [7:0] krnl_load_4_reg_1688;
wire   [8:0] col_offset_0_2_fu_726_p2;
reg   [8:0] col_offset_0_2_reg_1700;
wire   [7:0] tmp_21_0_0_2_fu_732_p2;
reg   [7:0] tmp_21_0_0_2_reg_1705;
reg  signed [7:0] krnl_load_5_reg_1710;
wire   [16:0] col_offset_0_2_cast_s_fu_737_p1;
reg   [16:0] col_offset_0_2_cast_s_reg_1720;
wire   [31:0] tmp_17_cast_fu_754_p1;
reg   [31:0] tmp_17_cast_reg_1731;
reg  signed [7:0] krnl_load_6_reg_1741;
wire  signed [7:0] grp_fu_1225_p3;
reg  signed [7:0] tmp2_reg_1753;
wire   [7:0] tmp_21_0_1_1_fu_759_p2;
reg   [7:0] tmp_21_0_1_1_reg_1758;
reg  signed [7:0] krnl_load_7_reg_1768;
wire   [8:0] col_offset_1_2_fu_773_p2;
reg   [8:0] col_offset_1_2_reg_1780;
wire  signed [7:0] grp_fu_1231_p3;
reg  signed [7:0] tmp8_reg_1786;
wire   [7:0] tmp_21_0_2_1_fu_779_p2;
reg   [7:0] tmp_21_0_2_1_reg_1791;
reg  signed [7:0] krnl_load_8_reg_1796;
wire  signed [7:0] grp_fu_1238_p3;
reg  signed [7:0] tmp4_reg_1805;
wire   [16:0] col_offset_1_2_cast_s_fu_784_p1;
reg   [16:0] col_offset_1_2_cast_s_reg_1810;
(* use_dsp48 = "no" *) wire   [7:0] tmp7_fu_797_p2;
reg   [7:0] tmp7_reg_1821;
wire   [0:0] tmp_2_6_fu_801_p2;
wire  signed [7:0] grp_fu_1252_p3;
reg  signed [7:0] tmp5_reg_1830;
reg   [15:0] out_addr_2_reg_1840;
wire   [7:0] tmp_21_1_1_2_fu_840_p2;
reg   [7:0] tmp_21_1_1_2_reg_1850;
wire  signed [7:0] grp_fu_1265_p3;
reg  signed [7:0] tmp11_reg_1855;
wire    ap_CS_fsm_state18;
wire  signed [7:0] grp_fu_1271_p3;
reg  signed [7:0] tmp12_reg_1860;
wire   [8:0] col_offset_2_2_fu_855_p2;
reg   [8:0] col_offset_2_2_reg_1865;
wire   [16:0] col_offset_2_2_cast_s_fu_861_p1;
reg   [16:0] col_offset_2_2_cast_s_reg_1871;
wire    ap_CS_fsm_state20;
(* use_dsp48 = "no" *) wire   [7:0] tmp14_fu_874_p2;
reg   [7:0] tmp14_reg_1882;
wire   [0:0] tmp_3_7_fu_878_p2;
reg   [15:0] out_addr_3_reg_1896;
wire  signed [7:0] grp_fu_1301_p3;
reg  signed [7:0] tmp18_reg_1906;
wire    ap_CS_fsm_state25;
wire  signed [7:0] grp_fu_1308_p3;
reg  signed [7:0] tmp19_reg_1911;
wire   [8:0] col_offset_3_2_fu_912_p2;
reg   [8:0] col_offset_3_2_reg_1916;
wire   [16:0] col_offset_3_2_cast_s_fu_918_p1;
reg   [16:0] col_offset_3_2_cast_s_reg_1922;
wire    ap_CS_fsm_state27;
(* use_dsp48 = "no" *) wire   [7:0] tmp21_fu_931_p2;
reg   [7:0] tmp21_reg_1933;
wire   [0:0] tmp_4_8_fu_935_p2;
reg   [15:0] out_addr_4_reg_1947;
wire  signed [7:0] grp_fu_1338_p3;
reg  signed [7:0] tmp25_reg_1957;
wire    ap_CS_fsm_state32;
wire  signed [7:0] grp_fu_1345_p3;
reg  signed [7:0] tmp26_reg_1962;
wire   [8:0] col_offset_4_2_fu_969_p2;
reg   [8:0] col_offset_4_2_reg_1967;
wire   [16:0] col_offset_4_2_cast_s_fu_975_p1;
reg   [16:0] col_offset_4_2_cast_s_reg_1973;
wire    ap_CS_fsm_state34;
(* use_dsp48 = "no" *) wire   [7:0] tmp28_fu_988_p2;
reg   [7:0] tmp28_reg_1984;
wire   [0:0] tmp_5_9_fu_992_p2;
reg   [15:0] out_addr_5_reg_1998;
wire  signed [7:0] grp_fu_1375_p3;
reg  signed [7:0] tmp32_reg_2008;
wire    ap_CS_fsm_state39;
wire  signed [7:0] grp_fu_1382_p3;
reg  signed [7:0] tmp33_reg_2013;
wire   [8:0] col_offset_5_2_fu_1026_p2;
reg   [8:0] col_offset_5_2_reg_2018;
wire   [16:0] col_offset_5_2_cast_s_fu_1032_p1;
reg   [16:0] col_offset_5_2_cast_s_reg_2024;
wire    ap_CS_fsm_state41;
(* use_dsp48 = "no" *) wire   [7:0] tmp35_fu_1045_p2;
reg   [7:0] tmp35_reg_2035;
wire   [0:0] tmp_6_10_fu_1049_p2;
wire    ap_CS_fsm_state42;
reg   [15:0] out_addr_6_reg_2049;
reg  signed [7:0] in_load_21_reg_2054;
wire    ap_CS_fsm_state43;
reg  signed [7:0] in_load_22_reg_2066;
reg  signed [7:0] in_load_23_reg_2073;
wire    ap_CS_fsm_state44;
wire   [7:0] tmp_21_5_2_2_fu_1073_p2;
reg   [7:0] tmp_21_5_2_2_reg_2080;
wire  signed [7:0] grp_fu_1412_p3;
reg  signed [7:0] tmp39_reg_2085;
wire    ap_CS_fsm_state46;
wire  signed [7:0] grp_fu_1419_p3;
reg  signed [7:0] tmp40_reg_2090;
wire   [7:0] tmp_21_6_1_fu_1087_p2;
reg   [7:0] tmp_21_6_1_reg_2095;
wire   [8:0] col_offset_6_2_fu_1091_p2;
reg   [8:0] col_offset_6_2_reg_2100;
wire   [16:0] col_offset_6_2_cast_s_fu_1097_p1;
reg   [16:0] col_offset_6_2_cast_s_reg_2106;
wire    ap_CS_fsm_state48;
(* use_dsp48 = "no" *) wire   [7:0] tmp42_fu_1110_p2;
reg   [7:0] tmp42_reg_2117;
wire   [0:0] tmp_7_11_fu_1114_p2;
reg   [0:0] tmp_7_11_reg_2122;
wire    ap_CS_fsm_state49;
reg   [15:0] out_addr_7_reg_2131;
reg  signed [7:0] in_load_24_reg_2136;
wire    ap_CS_fsm_state50;
reg  signed [7:0] in_load_25_reg_2147;
reg  signed [7:0] in_load_26_reg_2153;
wire    ap_CS_fsm_state51;
wire   [7:0] tmp_21_6_1_2_fu_1138_p2;
reg   [7:0] tmp_21_6_1_2_reg_2159;
wire    ap_CS_fsm_state52;
wire   [7:0] tmp_21_6_2_2_fu_1142_p2;
reg   [7:0] tmp_21_6_2_2_reg_2164;
wire  signed [7:0] grp_fu_1445_p3;
reg  signed [7:0] tmp46_reg_2169;
wire    ap_CS_fsm_state53;
wire  signed [7:0] grp_fu_1450_p3;
reg  signed [7:0] tmp47_reg_2174;
wire   [7:0] tmp_21_7_fu_1156_p2;
reg   [7:0] tmp_21_7_reg_2179;
wire    ap_CS_fsm_state54;
wire   [7:0] tmp_21_7_1_fu_1160_p2;
reg   [7:0] tmp_21_7_1_reg_2184;
wire   [7:0] tmp_21_7_1_2_fu_1164_p2;
reg   [7:0] tmp_21_7_1_2_reg_2189;
wire   [8:0] col_offset_7_2_fu_1168_p2;
reg   [8:0] col_offset_7_2_reg_2194;
wire   [16:0] tmp_34_fu_1178_p2;
reg   [16:0] tmp_34_reg_2199;
wire   [16:0] tmp_35_fu_1183_p2;
reg   [16:0] tmp_35_reg_2204;
wire   [16:0] tmp_36_fu_1188_p2;
reg   [16:0] tmp_36_reg_2209;
wire    ap_CS_fsm_state55;
(* use_dsp48 = "no" *) wire   [7:0] tmp49_fu_1197_p2;
reg   [7:0] tmp49_reg_2219;
wire  signed [7:0] grp_fu_1473_p3;
reg  signed [7:0] tmp53_reg_2224;
wire  signed [7:0] grp_fu_1478_p3;
reg  signed [7:0] tmp54_reg_2239;
wire    ap_CS_fsm_state60;
reg   [7:0] r1_reg_470;
reg   [8:0] c_reg_481;
wire    ap_CS_fsm_state61;
wire   [31:0] tmp_9_cast_fu_652_p1;
wire   [31:0] tmp_10_cast_fu_662_p1;
wire   [31:0] tmp_11_cast_fu_673_p1;
wire   [31:0] tmp_12_cast_fu_698_p1;
wire   [31:0] tmp_13_cast_fu_707_p1;
wire   [31:0] tmp_14_cast_fu_716_p1;
wire   [31:0] tmp_16_cast_fu_745_p1;
wire   [31:0] tmp_18_cast1_fu_768_p1;
wire   [31:0] tmp_19_cast_fu_792_p1;
wire   [31:0] tmp_20_cast_fu_810_p1;
wire   [31:0] tmp_21_cast_fu_835_p1;
wire   [31:0] tmp_22_cast_fu_869_p1;
wire   [31:0] tmp_23_cast_fu_887_p1;
wire   [31:0] tmp_24_cast_fu_897_p1;
wire   [31:0] tmp_25_cast_fu_926_p1;
wire   [31:0] tmp_26_cast_fu_944_p1;
wire   [31:0] tmp_27_cast_fu_954_p1;
wire   [31:0] tmp_28_cast_fu_983_p1;
wire   [31:0] tmp_29_cast_fu_1001_p1;
wire   [31:0] tmp_30_cast_fu_1011_p1;
wire   [31:0] tmp_35_cast_fu_1040_p1;
wire   [31:0] tmp_36_cast_fu_1058_p1;
wire   [31:0] tmp_37_cast_fu_1068_p1;
wire   [31:0] tmp_42_cast_fu_1105_p1;
wire   [31:0] tmp_43_cast_fu_1123_p1;
wire   [31:0] tmp_44_cast_fu_1133_p1;
wire   [31:0] tmp_49_cast_fu_1193_p1;
wire   [31:0] tmp_50_cast_fu_1201_p1;
wire   [31:0] tmp_51_cast_fu_1205_p1;
wire   [7:0] sum_2_0_2_2_fu_824_p2;
wire   [7:0] sum_2_1_2_2_fu_849_p2;
wire   [7:0] sum_2_2_2_2_fu_906_p2;
wire   [7:0] sum_2_3_2_2_fu_963_p2;
wire   [7:0] sum_2_4_2_2_fu_1020_p2;
wire   [7:0] sum_2_5_2_2_fu_1081_p2;
wire   [7:0] sum_2_6_2_2_fu_1150_p2;
wire   [7:0] sum_2_7_2_2_fu_1213_p2;
wire   [15:0] tmp_2_fu_589_p3;
wire   [7:0] tmp_4_fu_607_p2;
wire   [15:0] tmp_5_fu_613_p3;
wire   [15:0] tmp_7_fu_631_p3;
wire   [16:0] c_cast_cast_fu_643_p1;
wire   [16:0] tmp_9_fu_647_p2;
wire   [16:0] tmp_3_fu_657_p2;
wire   [16:0] tmp_6_fu_668_p2;
wire   [16:0] tmp_8_fu_693_p2;
wire   [16:0] tmp_10_fu_703_p2;
wire   [16:0] tmp_11_fu_712_p2;
wire   [16:0] tmp_13_fu_740_p2;
wire   [16:0] tmp_14_fu_750_p2;
wire   [16:0] tmp_15_fu_764_p2;
wire   [16:0] tmp_16_fu_787_p2;
wire  signed [7:0] grp_fu_1244_p3;
wire   [16:0] tmp_17_fu_806_p2;
(* use_dsp48 = "no" *) wire   [7:0] tmp3_fu_820_p2;
(* use_dsp48 = "no" *) wire   [7:0] tmp_fu_816_p2;
wire   [16:0] tmp_18_fu_831_p2;
(* use_dsp48 = "no" *) wire   [7:0] tmp10_fu_845_p2;
wire   [16:0] tmp_19_fu_864_p2;
wire  signed [7:0] grp_fu_1285_p3;
wire  signed [7:0] grp_fu_1293_p3;
wire   [16:0] tmp_20_fu_883_p2;
wire   [16:0] tmp_21_fu_893_p2;
(* use_dsp48 = "no" *) wire   [7:0] tmp17_fu_902_p2;
wire   [16:0] tmp_22_fu_921_p2;
wire  signed [7:0] grp_fu_1322_p3;
wire  signed [7:0] grp_fu_1330_p3;
wire   [16:0] tmp_23_fu_940_p2;
wire   [16:0] tmp_24_fu_950_p2;
(* use_dsp48 = "no" *) wire   [7:0] tmp24_fu_959_p2;
wire   [16:0] tmp_25_fu_978_p2;
wire  signed [7:0] grp_fu_1359_p3;
wire  signed [7:0] grp_fu_1367_p3;
wire   [16:0] tmp_26_fu_997_p2;
wire   [16:0] tmp_27_fu_1007_p2;
(* use_dsp48 = "no" *) wire   [7:0] tmp31_fu_1016_p2;
wire   [16:0] tmp_28_fu_1035_p2;
wire  signed [7:0] grp_fu_1396_p3;
wire  signed [7:0] grp_fu_1404_p3;
wire   [16:0] tmp_29_fu_1054_p2;
wire   [16:0] tmp_30_fu_1064_p2;
(* use_dsp48 = "no" *) wire   [7:0] tmp38_fu_1077_p2;
wire   [16:0] tmp_31_fu_1100_p2;
wire  signed [7:0] grp_fu_1430_p3;
wire  signed [7:0] grp_fu_1438_p3;
wire   [16:0] tmp_32_fu_1119_p2;
wire   [16:0] tmp_33_fu_1129_p2;
(* use_dsp48 = "no" *) wire   [7:0] tmp45_fu_1146_p2;
wire   [16:0] col_offset_7_2_cast_s_fu_1174_p1;
wire  signed [7:0] grp_fu_1461_p3;
wire  signed [7:0] grp_fu_1467_p3;
(* use_dsp48 = "no" *) wire   [7:0] tmp52_fu_1209_p2;
wire  signed [7:0] grp_fu_1258_p3;
wire  signed [7:0] grp_fu_1277_p3;
wire  signed [7:0] grp_fu_1314_p3;
wire  signed [7:0] grp_fu_1351_p3;
wire  signed [7:0] grp_fu_1388_p3;
wire  signed [7:0] grp_fu_1424_p3;
wire  signed [7:0] grp_fu_1455_p3;
wire  signed [7:0] grp_fu_1484_p3;
reg   [60:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 61'd1;
end

convolveMedium_convm_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONVM_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONVM_DATA_WIDTH ))
convolveMedium_convm_s_axi_U(
    .AWVALID(s_axi_convm_AWVALID),
    .AWREADY(s_axi_convm_AWREADY),
    .AWADDR(s_axi_convm_AWADDR),
    .WVALID(s_axi_convm_WVALID),
    .WREADY(s_axi_convm_WREADY),
    .WDATA(s_axi_convm_WDATA),
    .WSTRB(s_axi_convm_WSTRB),
    .ARVALID(s_axi_convm_ARVALID),
    .ARREADY(s_axi_convm_ARREADY),
    .ARADDR(s_axi_convm_ARADDR),
    .RVALID(s_axi_convm_RVALID),
    .RREADY(s_axi_convm_RREADY),
    .RDATA(s_axi_convm_RDATA),
    .RRESP(s_axi_convm_RRESP),
    .BVALID(s_axi_convm_BVALID),
    .BREADY(s_axi_convm_BREADY),
    .BRESP(s_axi_convm_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .in_r_address0(in_r_address0),
    .in_r_ce0(in_r_ce0),
    .in_r_q0(in_r_q0),
    .out_r_address0(out_r_address0),
    .out_r_ce0(out_r_ce0),
    .out_r_we0(out_r_we0),
    .out_r_d0(out_r_d0),
    .krnl_address0(krnl_address0),
    .krnl_ce0(krnl_ce0),
    .krnl_q0(krnl_q0)
);

convolveMedium_mabkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
convolveMedium_mabkb_U0(
    .din0(krnl_load_reg_1632),
    .din1(reg_493),
    .din2(tmp_21_0_0_1_reg_1657),
    .dout(grp_fu_1219_p3)
);

convolveMedium_mabkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
convolveMedium_mabkb_U1(
    .din0(krnl_load_3_reg_1674),
    .din1(reg_493),
    .din2(tmp_21_0_0_2_reg_1705),
    .dout(grp_fu_1225_p3)
);

convolveMedium_mabkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
convolveMedium_mabkb_U2(
    .din0(reg_501),
    .din1(krnl_load_1_reg_1645),
    .din2(reg_557),
    .dout(grp_fu_1231_p3)
);

convolveMedium_mabkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
convolveMedium_mabkb_U3(
    .din0(krnl_load_5_reg_1710),
    .din1(reg_497),
    .din2(tmp_21_0_1_1_reg_1758),
    .dout(grp_fu_1238_p3)
);

convolveMedium_mabkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
convolveMedium_mabkb_U4(
    .din0(reg_497),
    .din1(krnl_load_2_reg_1662),
    .din2(reg_561),
    .dout(grp_fu_1244_p3)
);

convolveMedium_macud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
convolveMedium_macud_U5(
    .din0(krnl_load_6_reg_1741),
    .din1(reg_493),
    .din2(grp_fu_1258_p3),
    .dout(grp_fu_1252_p3)
);

convolveMedium_mabkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
convolveMedium_mabkb_U6(
    .din0(krnl_load_8_reg_1796),
    .din1(reg_497),
    .din2(tmp_21_0_2_1_reg_1791),
    .dout(grp_fu_1258_p3)
);

convolveMedium_mabkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
convolveMedium_mabkb_U7(
    .din0(reg_501),
    .din1(krnl_load_4_reg_1688),
    .din2(tmp_21_1_1_2_reg_1850),
    .dout(grp_fu_1265_p3)
);

convolveMedium_macud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
convolveMedium_macud_U8(
    .din0(reg_505),
    .din1(krnl_load_6_reg_1741),
    .din2(grp_fu_1277_p3),
    .dout(grp_fu_1271_p3)
);

convolveMedium_mabkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
convolveMedium_mabkb_U9(
    .din0(reg_509),
    .din1(krnl_load_7_reg_1768),
    .din2(reg_565),
    .dout(grp_fu_1277_p3)
);

convolveMedium_mabkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
convolveMedium_mabkb_U10(
    .din0(reg_501),
    .din1(krnl_load_1_reg_1645),
    .din2(reg_557),
    .dout(grp_fu_1285_p3)
);

convolveMedium_mabkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
convolveMedium_mabkb_U11(
    .din0(reg_497),
    .din1(krnl_load_2_reg_1662),
    .din2(reg_569),
    .dout(grp_fu_1293_p3)
);

convolveMedium_mabkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
convolveMedium_mabkb_U12(
    .din0(reg_509),
    .din1(krnl_load_4_reg_1688),
    .din2(reg_573),
    .dout(grp_fu_1301_p3)
);

convolveMedium_macud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
convolveMedium_macud_U13(
    .din0(reg_493),
    .din1(krnl_load_6_reg_1741),
    .din2(grp_fu_1314_p3),
    .dout(grp_fu_1308_p3)
);

convolveMedium_mabkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
convolveMedium_mabkb_U14(
    .din0(reg_497),
    .din1(krnl_load_7_reg_1768),
    .din2(reg_577),
    .dout(grp_fu_1314_p3)
);

convolveMedium_mabkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
convolveMedium_mabkb_U15(
    .din0(reg_509),
    .din1(krnl_load_1_reg_1645),
    .din2(reg_581),
    .dout(grp_fu_1322_p3)
);

convolveMedium_mabkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
convolveMedium_mabkb_U16(
    .din0(reg_513),
    .din1(krnl_load_2_reg_1662),
    .din2(reg_561),
    .dout(grp_fu_1330_p3)
);

convolveMedium_mabkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
convolveMedium_mabkb_U17(
    .din0(reg_497),
    .din1(krnl_load_4_reg_1688),
    .din2(reg_585),
    .dout(grp_fu_1338_p3)
);

convolveMedium_macud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
convolveMedium_macud_U18(
    .din0(reg_505),
    .din1(krnl_load_6_reg_1741),
    .din2(grp_fu_1351_p3),
    .dout(grp_fu_1345_p3)
);

convolveMedium_mabkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
convolveMedium_mabkb_U19(
    .din0(reg_509),
    .din1(krnl_load_7_reg_1768),
    .din2(reg_565),
    .dout(grp_fu_1351_p3)
);

convolveMedium_mabkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
convolveMedium_mabkb_U20(
    .din0(reg_497),
    .din1(krnl_load_1_reg_1645),
    .din2(reg_557),
    .dout(grp_fu_1359_p3)
);

convolveMedium_mabkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
convolveMedium_mabkb_U21(
    .din0(reg_501),
    .din1(krnl_load_2_reg_1662),
    .din2(reg_569),
    .dout(grp_fu_1367_p3)
);

convolveMedium_mabkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
convolveMedium_mabkb_U22(
    .din0(reg_509),
    .din1(krnl_load_4_reg_1688),
    .din2(reg_573),
    .dout(grp_fu_1375_p3)
);

convolveMedium_macud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
convolveMedium_macud_U23(
    .din0(reg_493),
    .din1(krnl_load_6_reg_1741),
    .din2(grp_fu_1388_p3),
    .dout(grp_fu_1382_p3)
);

convolveMedium_mabkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
convolveMedium_mabkb_U24(
    .din0(reg_497),
    .din1(krnl_load_7_reg_1768),
    .din2(reg_577),
    .dout(grp_fu_1388_p3)
);

convolveMedium_mabkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
convolveMedium_mabkb_U25(
    .din0(reg_509),
    .din1(krnl_load_1_reg_1645),
    .din2(reg_581),
    .dout(grp_fu_1396_p3)
);

convolveMedium_mabkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
convolveMedium_mabkb_U26(
    .din0(reg_513),
    .din1(krnl_load_2_reg_1662),
    .din2(reg_561),
    .dout(grp_fu_1404_p3)
);

convolveMedium_mabkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
convolveMedium_mabkb_U27(
    .din0(reg_497),
    .din1(krnl_load_4_reg_1688),
    .din2(reg_585),
    .dout(grp_fu_1412_p3)
);

convolveMedium_macud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
convolveMedium_macud_U28(
    .din0(in_load_21_reg_2054),
    .din1(krnl_load_6_reg_1741),
    .din2(grp_fu_1424_p3),
    .dout(grp_fu_1419_p3)
);

convolveMedium_mabkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
convolveMedium_mabkb_U29(
    .din0(in_load_22_reg_2066),
    .din1(krnl_load_7_reg_1768),
    .din2(tmp_21_5_2_2_reg_2080),
    .dout(grp_fu_1424_p3)
);

convolveMedium_mabkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
convolveMedium_mabkb_U30(
    .din0(reg_497),
    .din1(krnl_load_1_reg_1645),
    .din2(reg_557),
    .dout(grp_fu_1430_p3)
);

convolveMedium_mabkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
convolveMedium_mabkb_U31(
    .din0(reg_501),
    .din1(krnl_load_2_reg_1662),
    .din2(tmp_21_6_1_reg_2095),
    .dout(grp_fu_1438_p3)
);

convolveMedium_mabkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
convolveMedium_mabkb_U32(
    .din0(in_load_22_reg_2066),
    .din1(krnl_load_4_reg_1688),
    .din2(tmp_21_6_1_2_reg_2159),
    .dout(grp_fu_1445_p3)
);

convolveMedium_macud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
convolveMedium_macud_U33(
    .din0(in_load_24_reg_2136),
    .din1(krnl_load_6_reg_1741),
    .din2(grp_fu_1455_p3),
    .dout(grp_fu_1450_p3)
);

convolveMedium_mabkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
convolveMedium_mabkb_U34(
    .din0(in_load_25_reg_2147),
    .din1(krnl_load_7_reg_1768),
    .din2(tmp_21_6_2_2_reg_2164),
    .dout(grp_fu_1455_p3)
);

convolveMedium_mabkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
convolveMedium_mabkb_U35(
    .din0(in_load_22_reg_2066),
    .din1(krnl_load_1_reg_1645),
    .din2(tmp_21_7_reg_2179),
    .dout(grp_fu_1461_p3)
);

convolveMedium_mabkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
convolveMedium_mabkb_U36(
    .din0(in_load_23_reg_2073),
    .din1(krnl_load_2_reg_1662),
    .din2(tmp_21_7_1_reg_2184),
    .dout(grp_fu_1467_p3)
);

convolveMedium_mabkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
convolveMedium_mabkb_U37(
    .din0(in_load_25_reg_2147),
    .din1(krnl_load_4_reg_1688),
    .din2(tmp_21_7_1_2_reg_2189),
    .dout(grp_fu_1473_p3)
);

convolveMedium_macud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
convolveMedium_macud_U38(
    .din0(reg_493),
    .din1(krnl_load_6_reg_1741),
    .din2(grp_fu_1484_p3),
    .dout(grp_fu_1478_p3)
);

convolveMedium_mabkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
convolveMedium_mabkb_U39(
    .din0(reg_497),
    .din1(krnl_load_7_reg_1768),
    .din2(reg_577),
    .dout(grp_fu_1484_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_601_p2 == 1'd0))) begin
        c_reg_481 <= 9'd1;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        c_reg_481 <= col_offset_7_2_reg_2194;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state54) & ((1'd0 == tmp_s_reg_1607) | (tmp_2_6_reg_1826 == 1'd0) | (tmp_3_7_reg_1887 == 1'd0) | (tmp_4_8_reg_1938 == 1'd0) | (tmp_5_9_reg_1989 == 1'd0) | (tmp_6_10_reg_2040 == 1'd0) | (1'd0 == tmp_7_11_reg_2122)))) begin
        r1_reg_470 <= r_reg_1568;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        r1_reg_470 <= 8'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        col_offset_0_2_cast_s_reg_1720[8 : 0] <= col_offset_0_2_cast_s_fu_737_p1[8 : 0];
        krnl_load_5_reg_1710 <= krnl_q0;
        tmp_21_0_0_2_reg_1705 <= tmp_21_0_0_2_fu_732_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        col_offset_0_2_reg_1700 <= col_offset_0_2_fu_726_p2;
        krnl_load_4_reg_1688 <= krnl_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        col_offset_1_2_cast_s_reg_1810[8 : 0] <= col_offset_1_2_cast_s_fu_784_p1[8 : 0];
        krnl_load_8_reg_1796 <= krnl_q0;
        tmp4_reg_1805 <= grp_fu_1238_p3;
        tmp7_reg_1821 <= tmp7_fu_797_p2;
        tmp_21_0_2_1_reg_1791 <= tmp_21_0_2_1_fu_779_p2;
        tmp_2_6_reg_1826 <= tmp_2_6_fu_801_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        col_offset_1_2_reg_1780 <= col_offset_1_2_fu_773_p2;
        krnl_load_7_reg_1768 <= krnl_q0;
        tmp8_reg_1786 <= grp_fu_1231_p3;
        tmp_21_0_1_1_reg_1758 <= tmp_21_0_1_1_fu_759_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        col_offset_2_2_cast_s_reg_1871[8 : 0] <= col_offset_2_2_cast_s_fu_861_p1[8 : 0];
        tmp14_reg_1882 <= tmp14_fu_874_p2;
        tmp_3_7_reg_1887 <= tmp_3_7_fu_878_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) & (tmp_2_6_reg_1826 == 1'd1))) begin
        col_offset_2_2_reg_1865 <= col_offset_2_2_fu_855_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        col_offset_3_2_cast_s_reg_1922[8 : 0] <= col_offset_3_2_cast_s_fu_918_p1[8 : 0];
        tmp21_reg_1933 <= tmp21_fu_931_p2;
        tmp_4_8_reg_1938 <= tmp_4_8_fu_935_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) & (1'd1 == tmp_3_7_reg_1887))) begin
        col_offset_3_2_reg_1916 <= col_offset_3_2_fu_912_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        col_offset_4_2_cast_s_reg_1973[8 : 0] <= col_offset_4_2_cast_s_fu_975_p1[8 : 0];
        tmp28_reg_1984 <= tmp28_fu_988_p2;
        tmp_5_9_reg_1989 <= tmp_5_9_fu_992_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state33) & (1'd1 == tmp_4_8_reg_1938))) begin
        col_offset_4_2_reg_1967 <= col_offset_4_2_fu_969_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        col_offset_5_2_cast_s_reg_2024[8 : 0] <= col_offset_5_2_cast_s_fu_1032_p1[8 : 0];
        tmp35_reg_2035 <= tmp35_fu_1045_p2;
        tmp_6_10_reg_2040 <= tmp_6_10_fu_1049_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state40) & (1'd1 == tmp_5_9_reg_1989))) begin
        col_offset_5_2_reg_2018 <= col_offset_5_2_fu_1026_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        col_offset_6_2_cast_s_reg_2106[8 : 0] <= col_offset_6_2_cast_s_fu_1097_p1[8 : 0];
        tmp42_reg_2117 <= tmp42_fu_1110_p2;
        tmp_7_11_reg_2122 <= tmp_7_11_fu_1114_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state47) & (1'd1 == tmp_6_10_reg_2040))) begin
        col_offset_6_2_reg_2100 <= col_offset_6_2_fu_1091_p2;
        tmp_21_6_1_reg_2095 <= tmp_21_6_1_fu_1087_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_2_6_reg_1826 == 1'd1) & (1'd1 == tmp_4_8_reg_1938) & (1'd1 == tmp_6_10_reg_2040) & (1'd1 == tmp_3_7_reg_1887) & (1'd1 == tmp_5_9_reg_1989) & (1'b1 == ap_CS_fsm_state54) & (1'd1 == tmp_s_reg_1607) & (1'd1 == tmp_7_11_reg_2122))) begin
        col_offset_7_2_reg_2194 <= col_offset_7_2_fu_1168_p2;
        tmp_21_7_1_2_reg_2189 <= tmp_21_7_1_2_fu_1164_p2;
        tmp_21_7_1_reg_2184 <= tmp_21_7_1_fu_1160_p2;
        tmp_21_7_reg_2179 <= tmp_21_7_fu_1156_p2;
        tmp_34_reg_2199 <= tmp_34_fu_1178_p2;
        tmp_35_reg_2204 <= tmp_35_fu_1183_p2;
        tmp_36_reg_2209 <= tmp_36_fu_1188_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        in_addr_3_reg_1587 <= tmp_9_cast_fu_652_p1;
        in_addr_4_reg_1592 <= tmp_10_cast_fu_662_p1;
        in_addr_5_reg_1597 <= tmp_11_cast_fu_673_p1;
        out_addr_reg_1602 <= tmp_10_cast_fu_662_p1;
        tmp_s_reg_1607 <= tmp_s_fu_678_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        in_load_21_reg_2054 <= in_r_q0;
        out_addr_6_reg_2049 <= tmp_36_cast_fu_1058_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        in_load_22_reg_2066 <= in_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        in_load_23_reg_2073 <= in_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        in_load_24_reg_2136 <= in_r_q0;
        out_addr_7_reg_2131 <= tmp_43_cast_fu_1123_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        in_load_25_reg_2147 <= in_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        in_load_26_reg_2153 <= in_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        krnl_load_1_reg_1645 <= krnl_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        krnl_load_2_reg_1662 <= krnl_q0;
        tmp_21_0_0_1_reg_1657 <= tmp_21_0_0_1_fu_721_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        krnl_load_3_reg_1674 <= krnl_q0;
        tmp1_reg_1683 <= grp_fu_1219_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        krnl_load_6_reg_1741 <= krnl_q0;
        tmp2_reg_1753 <= grp_fu_1225_p3;
        tmp_17_cast_reg_1731[16 : 0] <= tmp_17_cast_fu_754_p1[16 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        krnl_load_reg_1632 <= krnl_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        out_addr_2_reg_1840 <= tmp_20_cast_fu_810_p1;
        tmp5_reg_1830 <= grp_fu_1252_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        out_addr_3_reg_1896 <= tmp_23_cast_fu_887_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        out_addr_4_reg_1947 <= tmp_26_cast_fu_944_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        out_addr_5_reg_1998 <= tmp_29_cast_fu_1001_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_601_p2 == 1'd0))) begin
        r_reg_1568 <= r_fu_625_p2;
        tmp_6_cast_reg_1554[15 : 8] <= tmp_6_cast_fu_621_p1[15 : 8];
        tmp_8_cast_reg_1573[15 : 8] <= tmp_8_cast_fu_639_p1[15 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state56))) begin
        reg_493 <= in_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state57))) begin
        reg_497 <= in_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state58))) begin
        reg_501 <= in_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state28))) begin
        reg_505 <= in_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state29))) begin
        reg_509 <= in_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state30))) begin
        reg_513 <= in_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((1'b1 == ap_CS_fsm_state19) & (tmp_2_6_reg_1826 == 1'd1)) | ((1'b1 == ap_CS_fsm_state33) & (1'd1 == tmp_4_8_reg_1938)) | ((1'b1 == ap_CS_fsm_state47) & (1'd1 == tmp_6_10_reg_2040)))) begin
        reg_557 <= grp_fu_517_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) | ((1'b1 == ap_CS_fsm_state26) & (1'd1 == tmp_3_7_reg_1887)) | ((1'b1 == ap_CS_fsm_state40) & (1'd1 == tmp_5_9_reg_1989)))) begin
        reg_561 <= grp_fu_522_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state31))) begin
        reg_565 <= grp_fu_527_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state19) & (tmp_2_6_reg_1826 == 1'd1)) | ((1'b1 == ap_CS_fsm_state33) & (1'd1 == tmp_4_8_reg_1938)))) begin
        reg_569 <= grp_fu_532_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state38))) begin
        reg_573 <= grp_fu_537_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state59))) begin
        reg_577 <= grp_fu_542_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state26) & (1'd1 == tmp_3_7_reg_1887)) | ((1'b1 == ap_CS_fsm_state40) & (1'd1 == tmp_5_9_reg_1989)))) begin
        reg_581 <= grp_fu_547_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state45))) begin
        reg_585 <= grp_fu_552_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        tmp11_reg_1855 <= grp_fu_1265_p3;
        tmp12_reg_1860 <= grp_fu_1271_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        tmp18_reg_1906 <= grp_fu_1301_p3;
        tmp19_reg_1911 <= grp_fu_1308_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        tmp25_reg_1957 <= grp_fu_1338_p3;
        tmp26_reg_1962 <= grp_fu_1345_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        tmp32_reg_2008 <= grp_fu_1375_p3;
        tmp33_reg_2013 <= grp_fu_1382_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        tmp39_reg_2085 <= grp_fu_1412_p3;
        tmp40_reg_2090 <= grp_fu_1419_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        tmp46_reg_2169 <= grp_fu_1445_p3;
        tmp47_reg_2174 <= grp_fu_1450_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        tmp49_reg_2219 <= tmp49_fu_1197_p2;
        tmp53_reg_2224 <= grp_fu_1473_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        tmp54_reg_2239 <= grp_fu_1478_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_18_cast_cast_reg_1616[8 : 0] <= tmp_18_cast_cast_fu_690_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'd1 == tmp_s_fu_678_p2))) begin
        tmp_1_reg_1611 <= tmp_1_fu_684_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        tmp_21_1_1_2_reg_1850 <= tmp_21_1_1_2_fu_840_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        tmp_21_5_2_2_reg_2080 <= tmp_21_5_2_2_fu_1073_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        tmp_21_6_1_2_reg_2159 <= tmp_21_6_1_2_fu_1138_p2;
        tmp_21_6_2_2_reg_2164 <= tmp_21_6_2_2_fu_1142_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        tmp_3_cast_reg_1537[15 : 8] <= tmp_3_cast_fu_597_p1[15 : 8];
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'd1 == exitcond_fu_601_p2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'd1 == exitcond_fu_601_p2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        in_r_address0 = tmp_51_cast_fu_1205_p1;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        in_r_address0 = tmp_50_cast_fu_1201_p1;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        in_r_address0 = tmp_49_cast_fu_1193_p1;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        in_r_address0 = tmp_44_cast_fu_1133_p1;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        in_r_address0 = tmp_43_cast_fu_1123_p1;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        in_r_address0 = tmp_42_cast_fu_1105_p1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        in_r_address0 = tmp_37_cast_fu_1068_p1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        in_r_address0 = tmp_36_cast_fu_1058_p1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        in_r_address0 = tmp_35_cast_fu_1040_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        in_r_address0 = tmp_30_cast_fu_1011_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        in_r_address0 = tmp_29_cast_fu_1001_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        in_r_address0 = tmp_28_cast_fu_983_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        in_r_address0 = tmp_27_cast_fu_954_p1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        in_r_address0 = tmp_26_cast_fu_944_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        in_r_address0 = tmp_25_cast_fu_926_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        in_r_address0 = tmp_24_cast_fu_897_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        in_r_address0 = tmp_23_cast_fu_887_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        in_r_address0 = tmp_22_cast_fu_869_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        in_r_address0 = tmp_21_cast_fu_835_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        in_r_address0 = tmp_20_cast_fu_810_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        in_r_address0 = tmp_19_cast_fu_792_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        in_r_address0 = tmp_18_cast1_fu_768_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        in_r_address0 = tmp_17_cast_fu_754_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        in_r_address0 = tmp_16_cast_fu_745_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        in_r_address0 = in_addr_5_reg_1597;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        in_r_address0 = in_addr_4_reg_1592;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        in_r_address0 = in_addr_3_reg_1587;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        in_r_address0 = tmp_14_cast_fu_716_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        in_r_address0 = tmp_13_cast_fu_707_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        in_r_address0 = tmp_12_cast_fu_698_p1;
    end else begin
        in_r_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state55))) begin
        in_r_ce0 = 1'b1;
    end else begin
        in_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        krnl_address0 = 32'd8;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        krnl_address0 = 32'd5;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        krnl_address0 = 32'd2;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        krnl_address0 = 32'd7;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        krnl_address0 = 32'd4;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        krnl_address0 = 32'd1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        krnl_address0 = 32'd6;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        krnl_address0 = 32'd3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        krnl_address0 = 32'd0;
    end else begin
        krnl_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state4))) begin
        krnl_ce0 = 1'b1;
    end else begin
        krnl_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        out_r_address0 = out_addr_7_reg_2131;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        out_r_address0 = out_addr_6_reg_2049;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        out_r_address0 = out_addr_5_reg_1998;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        out_r_address0 = out_addr_4_reg_1947;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        out_r_address0 = out_addr_3_reg_1896;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        out_r_address0 = out_addr_2_reg_1840;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        out_r_address0 = tmp_17_cast_reg_1731;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        out_r_address0 = out_addr_reg_1602;
    end else begin
        out_r_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state61))) begin
        out_r_ce0 = 1'b1;
    end else begin
        out_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        out_r_d0 = sum_2_7_2_2_fu_1213_p2;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        out_r_d0 = sum_2_6_2_2_fu_1150_p2;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        out_r_d0 = sum_2_5_2_2_fu_1081_p2;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        out_r_d0 = sum_2_4_2_2_fu_1020_p2;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        out_r_d0 = sum_2_3_2_2_fu_963_p2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        out_r_d0 = sum_2_2_2_2_fu_906_p2;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        out_r_d0 = sum_2_1_2_2_fu_849_p2;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        out_r_d0 = sum_2_0_2_2_fu_824_p2;
    end else begin
        out_r_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state61) | ((tmp_2_6_reg_1826 == 1'd1) & (1'd1 == tmp_4_8_reg_1938) & (1'd1 == tmp_6_10_reg_2040) & (1'd1 == tmp_3_7_reg_1887) & (1'd1 == tmp_5_9_reg_1989) & (1'b1 == ap_CS_fsm_state54) & (1'd1 == tmp_s_reg_1607)))) begin
        out_r_we0 = 1'b1;
    end else begin
        out_r_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (1'd1 == exitcond_fu_601_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (1'd0 == tmp_s_fu_678_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            if (((1'b1 == ap_CS_fsm_state19) & (tmp_2_6_reg_1826 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            if (((1'b1 == ap_CS_fsm_state26) & (tmp_3_7_reg_1887 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            if (((1'b1 == ap_CS_fsm_state33) & (tmp_4_8_reg_1938 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            if (((1'b1 == ap_CS_fsm_state40) & (tmp_5_9_reg_1989 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            if (((1'b1 == ap_CS_fsm_state47) & (tmp_6_10_reg_2040 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            if (((1'b1 == ap_CS_fsm_state54) & ((1'd0 == tmp_s_reg_1607) | (tmp_2_6_reg_1826 == 1'd0) | (tmp_3_7_reg_1887 == 1'd0) | (tmp_4_8_reg_1938 == 1'd0) | (tmp_5_9_reg_1989 == 1'd0) | (tmp_6_10_reg_2040 == 1'd0) | (1'd0 == tmp_7_11_reg_2122)))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign c_cast_cast_fu_643_p1 = c_reg_481;

assign col_offset_0_2_cast_s_fu_737_p1 = col_offset_0_2_reg_1700;

assign col_offset_0_2_fu_726_p2 = (c_reg_481 + 9'd1);

assign col_offset_1_2_cast_s_fu_784_p1 = col_offset_1_2_reg_1780;

assign col_offset_1_2_fu_773_p2 = (c_reg_481 + 9'd2);

assign col_offset_2_2_cast_s_fu_861_p1 = col_offset_2_2_reg_1865;

assign col_offset_2_2_fu_855_p2 = (c_reg_481 + 9'd3);

assign col_offset_3_2_cast_s_fu_918_p1 = col_offset_3_2_reg_1916;

assign col_offset_3_2_fu_912_p2 = (c_reg_481 + 9'd4);

assign col_offset_4_2_cast_s_fu_975_p1 = col_offset_4_2_reg_1967;

assign col_offset_4_2_fu_969_p2 = (c_reg_481 + 9'd5);

assign col_offset_5_2_cast_s_fu_1032_p1 = col_offset_5_2_reg_2018;

assign col_offset_5_2_fu_1026_p2 = (c_reg_481 + 9'd6);

assign col_offset_6_2_cast_s_fu_1097_p1 = col_offset_6_2_reg_2100;

assign col_offset_6_2_fu_1091_p2 = (c_reg_481 + 9'd7);

assign col_offset_7_2_cast_s_fu_1174_p1 = col_offset_7_2_fu_1168_p2;

assign col_offset_7_2_fu_1168_p2 = (c_reg_481 + 9'd8);

assign exitcond_fu_601_p2 = ((r1_reg_470 == 8'd255) ? 1'b1 : 1'b0);

assign grp_fu_517_p2 = ($signed(reg_493) * $signed(krnl_load_reg_1632));

assign grp_fu_522_p2 = ($signed(reg_493) * $signed(krnl_load_3_reg_1674));

assign grp_fu_527_p2 = ($signed(reg_513) * $signed(krnl_load_8_reg_1796));

assign grp_fu_532_p2 = ($signed(reg_505) * $signed(krnl_load_3_reg_1674));

assign grp_fu_537_p2 = ($signed(reg_513) * $signed(krnl_load_5_reg_1710));

assign grp_fu_542_p2 = ($signed(reg_501) * $signed(krnl_load_8_reg_1796));

assign grp_fu_547_p2 = ($signed(reg_505) * $signed(krnl_load_reg_1632));

assign grp_fu_552_p2 = ($signed(reg_501) * $signed(krnl_load_5_reg_1710));

assign r_fu_625_p2 = (r1_reg_470 + 8'd1);

assign sum_2_0_2_2_fu_824_p2 = (tmp3_fu_820_p2 + tmp_fu_816_p2);

assign sum_2_1_2_2_fu_849_p2 = (tmp7_reg_1821 + tmp10_fu_845_p2);

assign sum_2_2_2_2_fu_906_p2 = (tmp14_reg_1882 + tmp17_fu_902_p2);

assign sum_2_3_2_2_fu_963_p2 = (tmp21_reg_1933 + tmp24_fu_959_p2);

assign sum_2_4_2_2_fu_1020_p2 = (tmp28_reg_1984 + tmp31_fu_1016_p2);

assign sum_2_5_2_2_fu_1081_p2 = (tmp35_reg_2035 + tmp38_fu_1077_p2);

assign sum_2_6_2_2_fu_1150_p2 = (tmp42_reg_2117 + tmp45_fu_1146_p2);

assign sum_2_7_2_2_fu_1213_p2 = (tmp49_reg_2219 + tmp52_fu_1209_p2);

assign tmp10_fu_845_p2 = ($signed(tmp11_reg_1855) + $signed(tmp12_reg_1860));

assign tmp14_fu_874_p2 = ($signed(grp_fu_1285_p3) + $signed(grp_fu_1293_p3));

assign tmp17_fu_902_p2 = ($signed(tmp18_reg_1906) + $signed(tmp19_reg_1911));

assign tmp21_fu_931_p2 = ($signed(grp_fu_1322_p3) + $signed(grp_fu_1330_p3));

assign tmp24_fu_959_p2 = ($signed(tmp25_reg_1957) + $signed(tmp26_reg_1962));

assign tmp28_fu_988_p2 = ($signed(grp_fu_1359_p3) + $signed(grp_fu_1367_p3));

assign tmp31_fu_1016_p2 = ($signed(tmp32_reg_2008) + $signed(tmp33_reg_2013));

assign tmp35_fu_1045_p2 = ($signed(grp_fu_1396_p3) + $signed(grp_fu_1404_p3));

assign tmp38_fu_1077_p2 = ($signed(tmp39_reg_2085) + $signed(tmp40_reg_2090));

assign tmp3_fu_820_p2 = ($signed(tmp5_reg_1830) + $signed(tmp4_reg_1805));

assign tmp42_fu_1110_p2 = ($signed(grp_fu_1430_p3) + $signed(grp_fu_1438_p3));

assign tmp45_fu_1146_p2 = ($signed(tmp46_reg_2169) + $signed(tmp47_reg_2174));

assign tmp49_fu_1197_p2 = ($signed(grp_fu_1461_p3) + $signed(grp_fu_1467_p3));

assign tmp52_fu_1209_p2 = ($signed(tmp53_reg_2224) + $signed(tmp54_reg_2239));

assign tmp7_fu_797_p2 = ($signed(tmp8_reg_1786) + $signed(grp_fu_1244_p3));

assign tmp_10_cast_fu_662_p1 = tmp_3_fu_657_p2;

assign tmp_10_fu_703_p2 = (tmp_3_cast_reg_1537 + tmp_18_cast_cast_reg_1616);

assign tmp_11_cast_fu_673_p1 = tmp_6_fu_668_p2;

assign tmp_11_fu_712_p2 = (tmp_8_cast_reg_1573 + tmp_18_cast_cast_reg_1616);

assign tmp_12_cast_fu_698_p1 = tmp_8_fu_693_p2;

assign tmp_13_cast_fu_707_p1 = tmp_10_fu_703_p2;

assign tmp_13_fu_740_p2 = (tmp_6_cast_reg_1554 + col_offset_0_2_cast_s_fu_737_p1);

assign tmp_14_cast_fu_716_p1 = tmp_11_fu_712_p2;

assign tmp_14_fu_750_p2 = (tmp_3_cast_reg_1537 + col_offset_0_2_cast_s_reg_1720);

assign tmp_15_fu_764_p2 = (tmp_8_cast_reg_1573 + col_offset_0_2_cast_s_reg_1720);

assign tmp_16_cast_fu_745_p1 = tmp_13_fu_740_p2;

assign tmp_16_fu_787_p2 = (tmp_6_cast_reg_1554 + col_offset_1_2_cast_s_fu_784_p1);

assign tmp_17_cast_fu_754_p1 = tmp_14_fu_750_p2;

assign tmp_17_fu_806_p2 = (tmp_3_cast_reg_1537 + col_offset_1_2_cast_s_reg_1810);

assign tmp_18_cast1_fu_768_p1 = tmp_15_fu_764_p2;

assign tmp_18_cast_cast_fu_690_p1 = tmp_1_reg_1611;

assign tmp_18_fu_831_p2 = (tmp_8_cast_reg_1573 + col_offset_1_2_cast_s_reg_1810);

assign tmp_19_cast_fu_792_p1 = tmp_16_fu_787_p2;

assign tmp_19_fu_864_p2 = (tmp_6_cast_reg_1554 + col_offset_2_2_cast_s_fu_861_p1);

assign tmp_1_fu_684_p2 = ($signed(c_reg_481) + $signed(9'd511));

assign tmp_20_cast_fu_810_p1 = tmp_17_fu_806_p2;

assign tmp_20_fu_883_p2 = (tmp_3_cast_reg_1537 + col_offset_2_2_cast_s_reg_1871);

assign tmp_21_0_0_1_fu_721_p2 = ($signed(krnl_load_1_reg_1645) * $signed(reg_497));

assign tmp_21_0_0_2_fu_732_p2 = ($signed(krnl_load_2_reg_1662) * $signed(reg_497));

assign tmp_21_0_1_1_fu_759_p2 = ($signed(krnl_load_4_reg_1688) * $signed(reg_501));

assign tmp_21_0_2_1_fu_779_p2 = ($signed(krnl_load_7_reg_1768) * $signed(reg_501));

assign tmp_21_1_1_2_fu_840_p2 = ($signed(reg_497) * $signed(krnl_load_5_reg_1710));

assign tmp_21_5_2_2_fu_1073_p2 = ($signed(in_load_23_reg_2073) * $signed(krnl_load_8_reg_1796));

assign tmp_21_6_1_2_fu_1138_p2 = ($signed(in_load_23_reg_2073) * $signed(krnl_load_5_reg_1710));

assign tmp_21_6_1_fu_1087_p2 = ($signed(in_load_21_reg_2054) * $signed(krnl_load_3_reg_1674));

assign tmp_21_6_2_2_fu_1142_p2 = ($signed(in_load_26_reg_2153) * $signed(krnl_load_8_reg_1796));

assign tmp_21_7_1_2_fu_1164_p2 = ($signed(in_load_26_reg_2153) * $signed(krnl_load_5_reg_1710));

assign tmp_21_7_1_fu_1160_p2 = ($signed(in_load_24_reg_2136) * $signed(krnl_load_3_reg_1674));

assign tmp_21_7_fu_1156_p2 = ($signed(in_load_21_reg_2054) * $signed(krnl_load_reg_1632));

assign tmp_21_cast_fu_835_p1 = tmp_18_fu_831_p2;

assign tmp_21_fu_893_p2 = (tmp_8_cast_reg_1573 + col_offset_2_2_cast_s_reg_1871);

assign tmp_22_cast_fu_869_p1 = tmp_19_fu_864_p2;

assign tmp_22_fu_921_p2 = (tmp_6_cast_reg_1554 + col_offset_3_2_cast_s_fu_918_p1);

assign tmp_23_cast_fu_887_p1 = tmp_20_fu_883_p2;

assign tmp_23_fu_940_p2 = (tmp_3_cast_reg_1537 + col_offset_3_2_cast_s_reg_1922);

assign tmp_24_cast_fu_897_p1 = tmp_21_fu_893_p2;

assign tmp_24_fu_950_p2 = (tmp_8_cast_reg_1573 + col_offset_3_2_cast_s_reg_1922);

assign tmp_25_cast_fu_926_p1 = tmp_22_fu_921_p2;

assign tmp_25_fu_978_p2 = (tmp_6_cast_reg_1554 + col_offset_4_2_cast_s_fu_975_p1);

assign tmp_26_cast_fu_944_p1 = tmp_23_fu_940_p2;

assign tmp_26_fu_997_p2 = (tmp_3_cast_reg_1537 + col_offset_4_2_cast_s_reg_1973);

assign tmp_27_cast_fu_954_p1 = tmp_24_fu_950_p2;

assign tmp_27_fu_1007_p2 = (tmp_8_cast_reg_1573 + col_offset_4_2_cast_s_reg_1973);

assign tmp_28_cast_fu_983_p1 = tmp_25_fu_978_p2;

assign tmp_28_fu_1035_p2 = (tmp_6_cast_reg_1554 + col_offset_5_2_cast_s_fu_1032_p1);

assign tmp_29_cast_fu_1001_p1 = tmp_26_fu_997_p2;

assign tmp_29_fu_1054_p2 = (tmp_3_cast_reg_1537 + col_offset_5_2_cast_s_reg_2024);

assign tmp_2_6_fu_801_p2 = ((col_offset_1_2_reg_1780 < 9'd255) ? 1'b1 : 1'b0);

assign tmp_2_fu_589_p3 = {{r1_reg_470}, {8'd0}};

assign tmp_30_cast_fu_1011_p1 = tmp_27_fu_1007_p2;

assign tmp_30_fu_1064_p2 = (tmp_8_cast_reg_1573 + col_offset_5_2_cast_s_reg_2024);

assign tmp_31_fu_1100_p2 = (tmp_6_cast_reg_1554 + col_offset_6_2_cast_s_fu_1097_p1);

assign tmp_32_fu_1119_p2 = (tmp_3_cast_reg_1537 + col_offset_6_2_cast_s_reg_2106);

assign tmp_33_fu_1129_p2 = (tmp_8_cast_reg_1573 + col_offset_6_2_cast_s_reg_2106);

assign tmp_34_fu_1178_p2 = (tmp_6_cast_reg_1554 + col_offset_7_2_cast_s_fu_1174_p1);

assign tmp_35_cast_fu_1040_p1 = tmp_28_fu_1035_p2;

assign tmp_35_fu_1183_p2 = (tmp_3_cast_reg_1537 + col_offset_7_2_cast_s_fu_1174_p1);

assign tmp_36_cast_fu_1058_p1 = tmp_29_fu_1054_p2;

assign tmp_36_fu_1188_p2 = (tmp_8_cast_reg_1573 + col_offset_7_2_cast_s_fu_1174_p1);

assign tmp_37_cast_fu_1068_p1 = tmp_30_fu_1064_p2;

assign tmp_3_7_fu_878_p2 = ((col_offset_2_2_reg_1865 < 9'd255) ? 1'b1 : 1'b0);

assign tmp_3_cast_fu_597_p1 = tmp_2_fu_589_p3;

assign tmp_3_fu_657_p2 = (tmp_3_cast_reg_1537 + c_cast_cast_fu_643_p1);

assign tmp_42_cast_fu_1105_p1 = tmp_31_fu_1100_p2;

assign tmp_43_cast_fu_1123_p1 = tmp_32_fu_1119_p2;

assign tmp_44_cast_fu_1133_p1 = tmp_33_fu_1129_p2;

assign tmp_49_cast_fu_1193_p1 = tmp_34_reg_2199;

assign tmp_4_8_fu_935_p2 = ((col_offset_3_2_reg_1916 < 9'd255) ? 1'b1 : 1'b0);

assign tmp_4_fu_607_p2 = ($signed(r1_reg_470) + $signed(8'd255));

assign tmp_50_cast_fu_1201_p1 = tmp_35_reg_2204;

assign tmp_51_cast_fu_1205_p1 = tmp_36_reg_2209;

assign tmp_5_9_fu_992_p2 = ((col_offset_4_2_reg_1967 < 9'd255) ? 1'b1 : 1'b0);

assign tmp_5_fu_613_p3 = {{tmp_4_fu_607_p2}, {8'd0}};

assign tmp_6_10_fu_1049_p2 = ((col_offset_5_2_reg_2018 < 9'd255) ? 1'b1 : 1'b0);

assign tmp_6_cast_fu_621_p1 = tmp_5_fu_613_p3;

assign tmp_6_fu_668_p2 = (tmp_8_cast_reg_1573 + c_cast_cast_fu_643_p1);

assign tmp_7_11_fu_1114_p2 = ((col_offset_6_2_reg_2100 < 9'd255) ? 1'b1 : 1'b0);

assign tmp_7_fu_631_p3 = {{r_fu_625_p2}, {8'd0}};

assign tmp_8_cast_fu_639_p1 = tmp_7_fu_631_p3;

assign tmp_8_fu_693_p2 = (tmp_6_cast_reg_1554 + tmp_18_cast_cast_fu_690_p1);

assign tmp_9_cast_fu_652_p1 = tmp_9_fu_647_p2;

assign tmp_9_fu_647_p2 = (tmp_6_cast_reg_1554 + c_cast_cast_fu_643_p1);

assign tmp_fu_816_p2 = ($signed(tmp2_reg_1753) + $signed(tmp1_reg_1683));

assign tmp_s_fu_678_p2 = ((c_reg_481 < 9'd255) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    tmp_3_cast_reg_1537[7:0] <= 8'b00000000;
    tmp_3_cast_reg_1537[16] <= 1'b0;
    tmp_6_cast_reg_1554[7:0] <= 8'b00000000;
    tmp_6_cast_reg_1554[16] <= 1'b0;
    tmp_8_cast_reg_1573[7:0] <= 8'b00000000;
    tmp_8_cast_reg_1573[16] <= 1'b0;
    tmp_18_cast_cast_reg_1616[16:9] <= 8'b00000000;
    col_offset_0_2_cast_s_reg_1720[16:9] <= 8'b00000000;
    tmp_17_cast_reg_1731[31:17] <= 15'b000000000000000;
    col_offset_1_2_cast_s_reg_1810[16:9] <= 8'b00000000;
    col_offset_2_2_cast_s_reg_1871[16:9] <= 8'b00000000;
    col_offset_3_2_cast_s_reg_1922[16:9] <= 8'b00000000;
    col_offset_4_2_cast_s_reg_1973[16:9] <= 8'b00000000;
    col_offset_5_2_cast_s_reg_2024[16:9] <= 8'b00000000;
    col_offset_6_2_cast_s_reg_2106[16:9] <= 8'b00000000;
end

endmodule //convolveMedium

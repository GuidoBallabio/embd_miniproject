// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="houghTransform,hls_ip_2017_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z010clg400-1,HLS_INPUT_CLOCK=8.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.634000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=28,HLS_SYN_DSP=314,HLS_SYN_FF=48933,HLS_SYN_LUT=39073}" *)

module houghTransform (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_r_address0,
        in_r_ce0,
        in_r_q0,
        out_r_address0,
        out_r_ce0,
        out_r_we0,
        out_r_d0,
        acc_address0,
        acc_ce0,
        acc_we0,
        acc_d0,
        acc_q0,
        dNonZero_address0,
        dNonZero_ce0,
        dNonZero_we0,
        dNonZero_d0,
        dNonZero_q0,
        fiNonZero_address0,
        fiNonZero_ce0,
        fiNonZero_we0,
        fiNonZero_d0,
        fiNonZero_q0,
        threshold
);

parameter    ap_ST_fsm_state1 = 395'd1;
parameter    ap_ST_fsm_state2 = 395'd2;
parameter    ap_ST_fsm_state3 = 395'd4;
parameter    ap_ST_fsm_state4 = 395'd8;
parameter    ap_ST_fsm_state5 = 395'd16;
parameter    ap_ST_fsm_state6 = 395'd32;
parameter    ap_ST_fsm_state7 = 395'd64;
parameter    ap_ST_fsm_state8 = 395'd128;
parameter    ap_ST_fsm_state9 = 395'd256;
parameter    ap_ST_fsm_state10 = 395'd512;
parameter    ap_ST_fsm_state11 = 395'd1024;
parameter    ap_ST_fsm_state12 = 395'd2048;
parameter    ap_ST_fsm_state13 = 395'd4096;
parameter    ap_ST_fsm_state14 = 395'd8192;
parameter    ap_ST_fsm_state15 = 395'd16384;
parameter    ap_ST_fsm_state16 = 395'd32768;
parameter    ap_ST_fsm_state17 = 395'd65536;
parameter    ap_ST_fsm_state18 = 395'd131072;
parameter    ap_ST_fsm_state19 = 395'd262144;
parameter    ap_ST_fsm_state20 = 395'd524288;
parameter    ap_ST_fsm_state21 = 395'd1048576;
parameter    ap_ST_fsm_state22 = 395'd2097152;
parameter    ap_ST_fsm_state23 = 395'd4194304;
parameter    ap_ST_fsm_state24 = 395'd8388608;
parameter    ap_ST_fsm_state25 = 395'd16777216;
parameter    ap_ST_fsm_state26 = 395'd33554432;
parameter    ap_ST_fsm_state27 = 395'd67108864;
parameter    ap_ST_fsm_state28 = 395'd134217728;
parameter    ap_ST_fsm_state29 = 395'd268435456;
parameter    ap_ST_fsm_state30 = 395'd536870912;
parameter    ap_ST_fsm_state31 = 395'd1073741824;
parameter    ap_ST_fsm_state32 = 395'd2147483648;
parameter    ap_ST_fsm_state33 = 395'd4294967296;
parameter    ap_ST_fsm_state34 = 395'd8589934592;
parameter    ap_ST_fsm_state35 = 395'd17179869184;
parameter    ap_ST_fsm_state36 = 395'd34359738368;
parameter    ap_ST_fsm_state37 = 395'd68719476736;
parameter    ap_ST_fsm_state38 = 395'd137438953472;
parameter    ap_ST_fsm_state39 = 395'd274877906944;
parameter    ap_ST_fsm_state40 = 395'd549755813888;
parameter    ap_ST_fsm_state41 = 395'd1099511627776;
parameter    ap_ST_fsm_state42 = 395'd2199023255552;
parameter    ap_ST_fsm_state43 = 395'd4398046511104;
parameter    ap_ST_fsm_state44 = 395'd8796093022208;
parameter    ap_ST_fsm_state45 = 395'd17592186044416;
parameter    ap_ST_fsm_state46 = 395'd35184372088832;
parameter    ap_ST_fsm_state47 = 395'd70368744177664;
parameter    ap_ST_fsm_state48 = 395'd140737488355328;
parameter    ap_ST_fsm_state49 = 395'd281474976710656;
parameter    ap_ST_fsm_state50 = 395'd562949953421312;
parameter    ap_ST_fsm_state51 = 395'd1125899906842624;
parameter    ap_ST_fsm_state52 = 395'd2251799813685248;
parameter    ap_ST_fsm_state53 = 395'd4503599627370496;
parameter    ap_ST_fsm_state54 = 395'd9007199254740992;
parameter    ap_ST_fsm_state55 = 395'd18014398509481984;
parameter    ap_ST_fsm_state56 = 395'd36028797018963968;
parameter    ap_ST_fsm_state57 = 395'd72057594037927936;
parameter    ap_ST_fsm_state58 = 395'd144115188075855872;
parameter    ap_ST_fsm_state59 = 395'd288230376151711744;
parameter    ap_ST_fsm_state60 = 395'd576460752303423488;
parameter    ap_ST_fsm_state61 = 395'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 395'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 395'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 395'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 395'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 395'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 395'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 395'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 395'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 395'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 395'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 395'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 395'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 395'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 395'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 395'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 395'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 395'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 395'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 395'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 395'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 395'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 395'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 395'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 395'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 395'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 395'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 395'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 395'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 395'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 395'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 395'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 395'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 395'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 395'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 395'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 395'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 395'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 395'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 395'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 395'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 395'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 395'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 395'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 395'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 395'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 395'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 395'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 395'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 395'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 395'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 395'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 395'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 395'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 395'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 395'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 395'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 395'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state119 = 395'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state120 = 395'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state121 = 395'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state122 = 395'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state123 = 395'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state124 = 395'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state125 = 395'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state126 = 395'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state127 = 395'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_state128 = 395'd170141183460469231731687303715884105728;
parameter    ap_ST_fsm_state129 = 395'd340282366920938463463374607431768211456;
parameter    ap_ST_fsm_state130 = 395'd680564733841876926926749214863536422912;
parameter    ap_ST_fsm_state131 = 395'd1361129467683753853853498429727072845824;
parameter    ap_ST_fsm_state132 = 395'd2722258935367507707706996859454145691648;
parameter    ap_ST_fsm_state133 = 395'd5444517870735015415413993718908291383296;
parameter    ap_ST_fsm_state134 = 395'd10889035741470030830827987437816582766592;
parameter    ap_ST_fsm_state135 = 395'd21778071482940061661655974875633165533184;
parameter    ap_ST_fsm_state136 = 395'd43556142965880123323311949751266331066368;
parameter    ap_ST_fsm_state137 = 395'd87112285931760246646623899502532662132736;
parameter    ap_ST_fsm_state138 = 395'd174224571863520493293247799005065324265472;
parameter    ap_ST_fsm_state139 = 395'd348449143727040986586495598010130648530944;
parameter    ap_ST_fsm_state140 = 395'd696898287454081973172991196020261297061888;
parameter    ap_ST_fsm_state141 = 395'd1393796574908163946345982392040522594123776;
parameter    ap_ST_fsm_state142 = 395'd2787593149816327892691964784081045188247552;
parameter    ap_ST_fsm_state143 = 395'd5575186299632655785383929568162090376495104;
parameter    ap_ST_fsm_state144 = 395'd11150372599265311570767859136324180752990208;
parameter    ap_ST_fsm_state145 = 395'd22300745198530623141535718272648361505980416;
parameter    ap_ST_fsm_state146 = 395'd44601490397061246283071436545296723011960832;
parameter    ap_ST_fsm_state147 = 395'd89202980794122492566142873090593446023921664;
parameter    ap_ST_fsm_state148 = 395'd178405961588244985132285746181186892047843328;
parameter    ap_ST_fsm_state149 = 395'd356811923176489970264571492362373784095686656;
parameter    ap_ST_fsm_state150 = 395'd713623846352979940529142984724747568191373312;
parameter    ap_ST_fsm_state151 = 395'd1427247692705959881058285969449495136382746624;
parameter    ap_ST_fsm_state152 = 395'd2854495385411919762116571938898990272765493248;
parameter    ap_ST_fsm_state153 = 395'd5708990770823839524233143877797980545530986496;
parameter    ap_ST_fsm_state154 = 395'd11417981541647679048466287755595961091061972992;
parameter    ap_ST_fsm_state155 = 395'd22835963083295358096932575511191922182123945984;
parameter    ap_ST_fsm_state156 = 395'd45671926166590716193865151022383844364247891968;
parameter    ap_ST_fsm_state157 = 395'd91343852333181432387730302044767688728495783936;
parameter    ap_ST_fsm_state158 = 395'd182687704666362864775460604089535377456991567872;
parameter    ap_ST_fsm_state159 = 395'd365375409332725729550921208179070754913983135744;
parameter    ap_ST_fsm_state160 = 395'd730750818665451459101842416358141509827966271488;
parameter    ap_ST_fsm_state161 = 395'd1461501637330902918203684832716283019655932542976;
parameter    ap_ST_fsm_state162 = 395'd2923003274661805836407369665432566039311865085952;
parameter    ap_ST_fsm_state163 = 395'd5846006549323611672814739330865132078623730171904;
parameter    ap_ST_fsm_state164 = 395'd11692013098647223345629478661730264157247460343808;
parameter    ap_ST_fsm_state165 = 395'd23384026197294446691258957323460528314494920687616;
parameter    ap_ST_fsm_state166 = 395'd46768052394588893382517914646921056628989841375232;
parameter    ap_ST_fsm_state167 = 395'd93536104789177786765035829293842113257979682750464;
parameter    ap_ST_fsm_state168 = 395'd187072209578355573530071658587684226515959365500928;
parameter    ap_ST_fsm_state169 = 395'd374144419156711147060143317175368453031918731001856;
parameter    ap_ST_fsm_state170 = 395'd748288838313422294120286634350736906063837462003712;
parameter    ap_ST_fsm_state171 = 395'd1496577676626844588240573268701473812127674924007424;
parameter    ap_ST_fsm_state172 = 395'd2993155353253689176481146537402947624255349848014848;
parameter    ap_ST_fsm_state173 = 395'd5986310706507378352962293074805895248510699696029696;
parameter    ap_ST_fsm_state174 = 395'd11972621413014756705924586149611790497021399392059392;
parameter    ap_ST_fsm_state175 = 395'd23945242826029513411849172299223580994042798784118784;
parameter    ap_ST_fsm_state176 = 395'd47890485652059026823698344598447161988085597568237568;
parameter    ap_ST_fsm_state177 = 395'd95780971304118053647396689196894323976171195136475136;
parameter    ap_ST_fsm_state178 = 395'd191561942608236107294793378393788647952342390272950272;
parameter    ap_ST_fsm_state179 = 395'd383123885216472214589586756787577295904684780545900544;
parameter    ap_ST_fsm_state180 = 395'd766247770432944429179173513575154591809369561091801088;
parameter    ap_ST_fsm_state181 = 395'd1532495540865888858358347027150309183618739122183602176;
parameter    ap_ST_fsm_state182 = 395'd3064991081731777716716694054300618367237478244367204352;
parameter    ap_ST_fsm_state183 = 395'd6129982163463555433433388108601236734474956488734408704;
parameter    ap_ST_fsm_state184 = 395'd12259964326927110866866776217202473468949912977468817408;
parameter    ap_ST_fsm_state185 = 395'd24519928653854221733733552434404946937899825954937634816;
parameter    ap_ST_fsm_state186 = 395'd49039857307708443467467104868809893875799651909875269632;
parameter    ap_ST_fsm_state187 = 395'd98079714615416886934934209737619787751599303819750539264;
parameter    ap_ST_fsm_state188 = 395'd196159429230833773869868419475239575503198607639501078528;
parameter    ap_ST_fsm_state189 = 395'd392318858461667547739736838950479151006397215279002157056;
parameter    ap_ST_fsm_state190 = 395'd784637716923335095479473677900958302012794430558004314112;
parameter    ap_ST_fsm_state191 = 395'd1569275433846670190958947355801916604025588861116008628224;
parameter    ap_ST_fsm_state192 = 395'd3138550867693340381917894711603833208051177722232017256448;
parameter    ap_ST_fsm_state193 = 395'd6277101735386680763835789423207666416102355444464034512896;
parameter    ap_ST_fsm_state194 = 395'd12554203470773361527671578846415332832204710888928069025792;
parameter    ap_ST_fsm_state195 = 395'd25108406941546723055343157692830665664409421777856138051584;
parameter    ap_ST_fsm_state196 = 395'd50216813883093446110686315385661331328818843555712276103168;
parameter    ap_ST_fsm_state197 = 395'd100433627766186892221372630771322662657637687111424552206336;
parameter    ap_ST_fsm_state198 = 395'd200867255532373784442745261542645325315275374222849104412672;
parameter    ap_ST_fsm_state199 = 395'd401734511064747568885490523085290650630550748445698208825344;
parameter    ap_ST_fsm_state200 = 395'd803469022129495137770981046170581301261101496891396417650688;
parameter    ap_ST_fsm_state201 = 395'd1606938044258990275541962092341162602522202993782792835301376;
parameter    ap_ST_fsm_state202 = 395'd3213876088517980551083924184682325205044405987565585670602752;
parameter    ap_ST_fsm_state203 = 395'd6427752177035961102167848369364650410088811975131171341205504;
parameter    ap_ST_fsm_state204 = 395'd12855504354071922204335696738729300820177623950262342682411008;
parameter    ap_ST_fsm_state205 = 395'd25711008708143844408671393477458601640355247900524685364822016;
parameter    ap_ST_fsm_state206 = 395'd51422017416287688817342786954917203280710495801049370729644032;
parameter    ap_ST_fsm_state207 = 395'd102844034832575377634685573909834406561420991602098741459288064;
parameter    ap_ST_fsm_state208 = 395'd205688069665150755269371147819668813122841983204197482918576128;
parameter    ap_ST_fsm_state209 = 395'd411376139330301510538742295639337626245683966408394965837152256;
parameter    ap_ST_fsm_state210 = 395'd822752278660603021077484591278675252491367932816789931674304512;
parameter    ap_ST_fsm_state211 = 395'd1645504557321206042154969182557350504982735865633579863348609024;
parameter    ap_ST_fsm_state212 = 395'd3291009114642412084309938365114701009965471731267159726697218048;
parameter    ap_ST_fsm_state213 = 395'd6582018229284824168619876730229402019930943462534319453394436096;
parameter    ap_ST_fsm_state214 = 395'd13164036458569648337239753460458804039861886925068638906788872192;
parameter    ap_ST_fsm_state215 = 395'd26328072917139296674479506920917608079723773850137277813577744384;
parameter    ap_ST_fsm_state216 = 395'd52656145834278593348959013841835216159447547700274555627155488768;
parameter    ap_ST_fsm_state217 = 395'd105312291668557186697918027683670432318895095400549111254310977536;
parameter    ap_ST_fsm_state218 = 395'd210624583337114373395836055367340864637790190801098222508621955072;
parameter    ap_ST_fsm_state219 = 395'd421249166674228746791672110734681729275580381602196445017243910144;
parameter    ap_ST_fsm_state220 = 395'd842498333348457493583344221469363458551160763204392890034487820288;
parameter    ap_ST_fsm_state221 = 395'd1684996666696914987166688442938726917102321526408785780068975640576;
parameter    ap_ST_fsm_state222 = 395'd3369993333393829974333376885877453834204643052817571560137951281152;
parameter    ap_ST_fsm_state223 = 395'd6739986666787659948666753771754907668409286105635143120275902562304;
parameter    ap_ST_fsm_state224 = 395'd13479973333575319897333507543509815336818572211270286240551805124608;
parameter    ap_ST_fsm_state225 = 395'd26959946667150639794667015087019630673637144422540572481103610249216;
parameter    ap_ST_fsm_state226 = 395'd53919893334301279589334030174039261347274288845081144962207220498432;
parameter    ap_ST_fsm_state227 = 395'd107839786668602559178668060348078522694548577690162289924414440996864;
parameter    ap_ST_fsm_state228 = 395'd215679573337205118357336120696157045389097155380324579848828881993728;
parameter    ap_ST_fsm_state229 = 395'd431359146674410236714672241392314090778194310760649159697657763987456;
parameter    ap_ST_fsm_state230 = 395'd862718293348820473429344482784628181556388621521298319395315527974912;
parameter    ap_ST_fsm_state231 = 395'd1725436586697640946858688965569256363112777243042596638790631055949824;
parameter    ap_ST_fsm_state232 = 395'd3450873173395281893717377931138512726225554486085193277581262111899648;
parameter    ap_ST_fsm_state233 = 395'd6901746346790563787434755862277025452451108972170386555162524223799296;
parameter    ap_ST_fsm_state234 = 395'd13803492693581127574869511724554050904902217944340773110325048447598592;
parameter    ap_ST_fsm_state235 = 395'd27606985387162255149739023449108101809804435888681546220650096895197184;
parameter    ap_ST_fsm_state236 = 395'd55213970774324510299478046898216203619608871777363092441300193790394368;
parameter    ap_ST_fsm_state237 = 395'd110427941548649020598956093796432407239217743554726184882600387580788736;
parameter    ap_ST_fsm_state238 = 395'd220855883097298041197912187592864814478435487109452369765200775161577472;
parameter    ap_ST_fsm_state239 = 395'd441711766194596082395824375185729628956870974218904739530401550323154944;
parameter    ap_ST_fsm_state240 = 395'd883423532389192164791648750371459257913741948437809479060803100646309888;
parameter    ap_ST_fsm_state241 = 395'd1766847064778384329583297500742918515827483896875618958121606201292619776;
parameter    ap_ST_fsm_state242 = 395'd3533694129556768659166595001485837031654967793751237916243212402585239552;
parameter    ap_ST_fsm_state243 = 395'd7067388259113537318333190002971674063309935587502475832486424805170479104;
parameter    ap_ST_fsm_state244 = 395'd14134776518227074636666380005943348126619871175004951664972849610340958208;
parameter    ap_ST_fsm_state245 = 395'd28269553036454149273332760011886696253239742350009903329945699220681916416;
parameter    ap_ST_fsm_state246 = 395'd56539106072908298546665520023773392506479484700019806659891398441363832832;
parameter    ap_ST_fsm_state247 = 395'd113078212145816597093331040047546785012958969400039613319782796882727665664;
parameter    ap_ST_fsm_state248 = 395'd226156424291633194186662080095093570025917938800079226639565593765455331328;
parameter    ap_ST_fsm_state249 = 395'd452312848583266388373324160190187140051835877600158453279131187530910662656;
parameter    ap_ST_fsm_state250 = 395'd904625697166532776746648320380374280103671755200316906558262375061821325312;
parameter    ap_ST_fsm_state251 = 395'd1809251394333065553493296640760748560207343510400633813116524750123642650624;
parameter    ap_ST_fsm_state252 = 395'd3618502788666131106986593281521497120414687020801267626233049500247285301248;
parameter    ap_ST_fsm_state253 = 395'd7237005577332262213973186563042994240829374041602535252466099000494570602496;
parameter    ap_ST_fsm_state254 = 395'd14474011154664524427946373126085988481658748083205070504932198000989141204992;
parameter    ap_ST_fsm_state255 = 395'd28948022309329048855892746252171976963317496166410141009864396001978282409984;
parameter    ap_ST_fsm_state256 = 395'd57896044618658097711785492504343953926634992332820282019728792003956564819968;
parameter    ap_ST_fsm_state257 = 395'd115792089237316195423570985008687907853269984665640564039457584007913129639936;
parameter    ap_ST_fsm_state258 = 395'd231584178474632390847141970017375815706539969331281128078915168015826259279872;
parameter    ap_ST_fsm_state259 = 395'd463168356949264781694283940034751631413079938662562256157830336031652518559744;
parameter    ap_ST_fsm_state260 = 395'd926336713898529563388567880069503262826159877325124512315660672063305037119488;
parameter    ap_ST_fsm_state261 = 395'd1852673427797059126777135760139006525652319754650249024631321344126610074238976;
parameter    ap_ST_fsm_state262 = 395'd3705346855594118253554271520278013051304639509300498049262642688253220148477952;
parameter    ap_ST_fsm_state263 = 395'd7410693711188236507108543040556026102609279018600996098525285376506440296955904;
parameter    ap_ST_fsm_state264 = 395'd14821387422376473014217086081112052205218558037201992197050570753012880593911808;
parameter    ap_ST_fsm_state265 = 395'd29642774844752946028434172162224104410437116074403984394101141506025761187823616;
parameter    ap_ST_fsm_state266 = 395'd59285549689505892056868344324448208820874232148807968788202283012051522375647232;
parameter    ap_ST_fsm_state267 = 395'd118571099379011784113736688648896417641748464297615937576404566024103044751294464;
parameter    ap_ST_fsm_state268 = 395'd237142198758023568227473377297792835283496928595231875152809132048206089502588928;
parameter    ap_ST_fsm_state269 = 395'd474284397516047136454946754595585670566993857190463750305618264096412179005177856;
parameter    ap_ST_fsm_state270 = 395'd948568795032094272909893509191171341133987714380927500611236528192824358010355712;
parameter    ap_ST_fsm_state271 = 395'd1897137590064188545819787018382342682267975428761855001222473056385648716020711424;
parameter    ap_ST_fsm_state272 = 395'd3794275180128377091639574036764685364535950857523710002444946112771297432041422848;
parameter    ap_ST_fsm_state273 = 395'd7588550360256754183279148073529370729071901715047420004889892225542594864082845696;
parameter    ap_ST_fsm_state274 = 395'd15177100720513508366558296147058741458143803430094840009779784451085189728165691392;
parameter    ap_ST_fsm_state275 = 395'd30354201441027016733116592294117482916287606860189680019559568902170379456331382784;
parameter    ap_ST_fsm_state276 = 395'd60708402882054033466233184588234965832575213720379360039119137804340758912662765568;
parameter    ap_ST_fsm_state277 = 395'd121416805764108066932466369176469931665150427440758720078238275608681517825325531136;
parameter    ap_ST_fsm_state278 = 395'd242833611528216133864932738352939863330300854881517440156476551217363035650651062272;
parameter    ap_ST_fsm_state279 = 395'd485667223056432267729865476705879726660601709763034880312953102434726071301302124544;
parameter    ap_ST_fsm_state280 = 395'd971334446112864535459730953411759453321203419526069760625906204869452142602604249088;
parameter    ap_ST_fsm_state281 = 395'd1942668892225729070919461906823518906642406839052139521251812409738904285205208498176;
parameter    ap_ST_fsm_state282 = 395'd3885337784451458141838923813647037813284813678104279042503624819477808570410416996352;
parameter    ap_ST_fsm_state283 = 395'd7770675568902916283677847627294075626569627356208558085007249638955617140820833992704;
parameter    ap_ST_fsm_state284 = 395'd15541351137805832567355695254588151253139254712417116170014499277911234281641667985408;
parameter    ap_ST_fsm_state285 = 395'd31082702275611665134711390509176302506278509424834232340028998555822468563283335970816;
parameter    ap_ST_fsm_state286 = 395'd62165404551223330269422781018352605012557018849668464680057997111644937126566671941632;
parameter    ap_ST_fsm_state287 = 395'd124330809102446660538845562036705210025114037699336929360115994223289874253133343883264;
parameter    ap_ST_fsm_state288 = 395'd248661618204893321077691124073410420050228075398673858720231988446579748506266687766528;
parameter    ap_ST_fsm_state289 = 395'd497323236409786642155382248146820840100456150797347717440463976893159497012533375533056;
parameter    ap_ST_fsm_state290 = 395'd994646472819573284310764496293641680200912301594695434880927953786318994025066751066112;
parameter    ap_ST_fsm_state291 = 395'd1989292945639146568621528992587283360401824603189390869761855907572637988050133502132224;
parameter    ap_ST_fsm_state292 = 395'd3978585891278293137243057985174566720803649206378781739523711815145275976100267004264448;
parameter    ap_ST_fsm_state293 = 395'd7957171782556586274486115970349133441607298412757563479047423630290551952200534008528896;
parameter    ap_ST_fsm_state294 = 395'd15914343565113172548972231940698266883214596825515126958094847260581103904401068017057792;
parameter    ap_ST_fsm_state295 = 395'd31828687130226345097944463881396533766429193651030253916189694521162207808802136034115584;
parameter    ap_ST_fsm_state296 = 395'd63657374260452690195888927762793067532858387302060507832379389042324415617604272068231168;
parameter    ap_ST_fsm_state297 = 395'd127314748520905380391777855525586135065716774604121015664758778084648831235208544136462336;
parameter    ap_ST_fsm_state298 = 395'd254629497041810760783555711051172270131433549208242031329517556169297662470417088272924672;
parameter    ap_ST_fsm_state299 = 395'd509258994083621521567111422102344540262867098416484062659035112338595324940834176545849344;
parameter    ap_ST_fsm_state300 = 395'd1018517988167243043134222844204689080525734196832968125318070224677190649881668353091698688;
parameter    ap_ST_fsm_state301 = 395'd2037035976334486086268445688409378161051468393665936250636140449354381299763336706183397376;
parameter    ap_ST_fsm_state302 = 395'd4074071952668972172536891376818756322102936787331872501272280898708762599526673412366794752;
parameter    ap_ST_fsm_state303 = 395'd8148143905337944345073782753637512644205873574663745002544561797417525199053346824733589504;
parameter    ap_ST_fsm_state304 = 395'd16296287810675888690147565507275025288411747149327490005089123594835050398106693649467179008;
parameter    ap_ST_fsm_state305 = 395'd32592575621351777380295131014550050576823494298654980010178247189670100796213387298934358016;
parameter    ap_ST_fsm_state306 = 395'd65185151242703554760590262029100101153646988597309960020356494379340201592426774597868716032;
parameter    ap_ST_fsm_state307 = 395'd130370302485407109521180524058200202307293977194619920040712988758680403184853549195737432064;
parameter    ap_ST_fsm_state308 = 395'd260740604970814219042361048116400404614587954389239840081425977517360806369707098391474864128;
parameter    ap_ST_fsm_state309 = 395'd521481209941628438084722096232800809229175908778479680162851955034721612739414196782949728256;
parameter    ap_ST_fsm_state310 = 395'd1042962419883256876169444192465601618458351817556959360325703910069443225478828393565899456512;
parameter    ap_ST_fsm_state311 = 395'd2085924839766513752338888384931203236916703635113918720651407820138886450957656787131798913024;
parameter    ap_ST_fsm_state312 = 395'd4171849679533027504677776769862406473833407270227837441302815640277772901915313574263597826048;
parameter    ap_ST_fsm_state313 = 395'd8343699359066055009355553539724812947666814540455674882605631280555545803830627148527195652096;
parameter    ap_ST_fsm_state314 = 395'd16687398718132110018711107079449625895333629080911349765211262561111091607661254297054391304192;
parameter    ap_ST_fsm_state315 = 395'd33374797436264220037422214158899251790667258161822699530422525122222183215322508594108782608384;
parameter    ap_ST_fsm_state316 = 395'd66749594872528440074844428317798503581334516323645399060845050244444366430645017188217565216768;
parameter    ap_ST_fsm_state317 = 395'd133499189745056880149688856635597007162669032647290798121690100488888732861290034376435130433536;
parameter    ap_ST_fsm_state318 = 395'd266998379490113760299377713271194014325338065294581596243380200977777465722580068752870260867072;
parameter    ap_ST_fsm_state319 = 395'd533996758980227520598755426542388028650676130589163192486760401955554931445160137505740521734144;
parameter    ap_ST_fsm_state320 = 395'd1067993517960455041197510853084776057301352261178326384973520803911109862890320275011481043468288;
parameter    ap_ST_fsm_state321 = 395'd2135987035920910082395021706169552114602704522356652769947041607822219725780640550022962086936576;
parameter    ap_ST_fsm_state322 = 395'd4271974071841820164790043412339104229205409044713305539894083215644439451561281100045924173873152;
parameter    ap_ST_fsm_state323 = 395'd8543948143683640329580086824678208458410818089426611079788166431288878903122562200091848347746304;
parameter    ap_ST_fsm_state324 = 395'd17087896287367280659160173649356416916821636178853222159576332862577757806245124400183696695492608;
parameter    ap_ST_fsm_state325 = 395'd34175792574734561318320347298712833833643272357706444319152665725155515612490248800367393390985216;
parameter    ap_ST_fsm_state326 = 395'd68351585149469122636640694597425667667286544715412888638305331450311031224980497600734786781970432;
parameter    ap_ST_fsm_state327 = 395'd136703170298938245273281389194851335334573089430825777276610662900622062449960995201469573563940864;
parameter    ap_ST_fsm_state328 = 395'd273406340597876490546562778389702670669146178861651554553221325801244124899921990402939147127881728;
parameter    ap_ST_fsm_state329 = 395'd546812681195752981093125556779405341338292357723303109106442651602488249799843980805878294255763456;
parameter    ap_ST_fsm_state330 = 395'd1093625362391505962186251113558810682676584715446606218212885303204976499599687961611756588511526912;
parameter    ap_ST_fsm_state331 = 395'd2187250724783011924372502227117621365353169430893212436425770606409952999199375923223513177023053824;
parameter    ap_ST_fsm_state332 = 395'd4374501449566023848745004454235242730706338861786424872851541212819905998398751846447026354046107648;
parameter    ap_ST_fsm_state333 = 395'd8749002899132047697490008908470485461412677723572849745703082425639811996797503692894052708092215296;
parameter    ap_ST_fsm_state334 = 395'd17498005798264095394980017816940970922825355447145699491406164851279623993595007385788105416184430592;
parameter    ap_ST_fsm_state335 = 395'd34996011596528190789960035633881941845650710894291398982812329702559247987190014771576210832368861184;
parameter    ap_ST_fsm_state336 = 395'd69992023193056381579920071267763883691301421788582797965624659405118495974380029543152421664737722368;
parameter    ap_ST_fsm_state337 = 395'd139984046386112763159840142535527767382602843577165595931249318810236991948760059086304843329475444736;
parameter    ap_ST_fsm_state338 = 395'd279968092772225526319680285071055534765205687154331191862498637620473983897520118172609686658950889472;
parameter    ap_ST_fsm_state339 = 395'd559936185544451052639360570142111069530411374308662383724997275240947967795040236345219373317901778944;
parameter    ap_ST_fsm_state340 = 395'd1119872371088902105278721140284222139060822748617324767449994550481895935590080472690438746635803557888;
parameter    ap_ST_fsm_state341 = 395'd2239744742177804210557442280568444278121645497234649534899989100963791871180160945380877493271607115776;
parameter    ap_ST_fsm_state342 = 395'd4479489484355608421114884561136888556243290994469299069799978201927583742360321890761754986543214231552;
parameter    ap_ST_fsm_state343 = 395'd8958978968711216842229769122273777112486581988938598139599956403855167484720643781523509973086428463104;
parameter    ap_ST_fsm_state344 = 395'd17917957937422433684459538244547554224973163977877196279199912807710334969441287563047019946172856926208;
parameter    ap_ST_fsm_state345 = 395'd35835915874844867368919076489095108449946327955754392558399825615420669938882575126094039892345713852416;
parameter    ap_ST_fsm_state346 = 395'd71671831749689734737838152978190216899892655911508785116799651230841339877765150252188079784691427704832;
parameter    ap_ST_fsm_state347 = 395'd143343663499379469475676305956380433799785311823017570233599302461682679755530300504376159569382855409664;
parameter    ap_ST_fsm_state348 = 395'd286687326998758938951352611912760867599570623646035140467198604923365359511060601008752319138765710819328;
parameter    ap_ST_fsm_state349 = 395'd573374653997517877902705223825521735199141247292070280934397209846730719022121202017504638277531421638656;
parameter    ap_ST_fsm_state350 = 395'd1146749307995035755805410447651043470398282494584140561868794419693461438044242404035009276555062843277312;
parameter    ap_ST_fsm_state351 = 395'd2293498615990071511610820895302086940796564989168281123737588839386922876088484808070018553110125686554624;
parameter    ap_ST_fsm_state352 = 395'd4586997231980143023221641790604173881593129978336562247475177678773845752176969616140037106220251373109248;
parameter    ap_ST_fsm_state353 = 395'd9173994463960286046443283581208347763186259956673124494950355357547691504353939232280074212440502746218496;
parameter    ap_ST_fsm_state354 = 395'd18347988927920572092886567162416695526372519913346248989900710715095383008707878464560148424881005492436992;
parameter    ap_ST_fsm_state355 = 395'd36695977855841144185773134324833391052745039826692497979801421430190766017415756929120296849762010984873984;
parameter    ap_ST_fsm_state356 = 395'd73391955711682288371546268649666782105490079653384995959602842860381532034831513858240593699524021969747968;
parameter    ap_ST_fsm_state357 = 395'd146783911423364576743092537299333564210980159306769991919205685720763064069663027716481187399048043939495936;
parameter    ap_ST_fsm_state358 = 395'd293567822846729153486185074598667128421960318613539983838411371441526128139326055432962374798096087878991872;
parameter    ap_ST_fsm_state359 = 395'd587135645693458306972370149197334256843920637227079967676822742883052256278652110865924749596192175757983744;
parameter    ap_ST_fsm_state360 = 395'd1174271291386916613944740298394668513687841274454159935353645485766104512557304221731849499192384351515967488;
parameter    ap_ST_fsm_state361 = 395'd2348542582773833227889480596789337027375682548908319870707290971532209025114608443463698998384768703031934976;
parameter    ap_ST_fsm_state362 = 395'd4697085165547666455778961193578674054751365097816639741414581943064418050229216886927397996769537406063869952;
parameter    ap_ST_fsm_state363 = 395'd9394170331095332911557922387157348109502730195633279482829163886128836100458433773854795993539074812127739904;
parameter    ap_ST_fsm_state364 = 395'd18788340662190665823115844774314696219005460391266558965658327772257672200916867547709591987078149624255479808;
parameter    ap_ST_fsm_state365 = 395'd37576681324381331646231689548629392438010920782533117931316655544515344401833735095419183974156299248510959616;
parameter    ap_ST_fsm_state366 = 395'd75153362648762663292463379097258784876021841565066235862633311089030688803667470190838367948312598497021919232;
parameter    ap_ST_fsm_state367 = 395'd150306725297525326584926758194517569752043683130132471725266622178061377607334940381676735896625196994043838464;
parameter    ap_ST_fsm_state368 = 395'd300613450595050653169853516389035139504087366260264943450533244356122755214669880763353471793250393988087676928;
parameter    ap_ST_fsm_state369 = 395'd601226901190101306339707032778070279008174732520529886901066488712245510429339761526706943586500787976175353856;
parameter    ap_ST_fsm_state370 = 395'd1202453802380202612679414065556140558016349465041059773802132977424491020858679523053413887173001575952350707712;
parameter    ap_ST_fsm_state371 = 395'd2404907604760405225358828131112281116032698930082119547604265954848982041717359046106827774346003151904701415424;
parameter    ap_ST_fsm_state372 = 395'd4809815209520810450717656262224562232065397860164239095208531909697964083434718092213655548692006303809402830848;
parameter    ap_ST_fsm_state373 = 395'd9619630419041620901435312524449124464130795720328478190417063819395928166869436184427311097384012607618805661696;
parameter    ap_ST_fsm_state374 = 395'd19239260838083241802870625048898248928261591440656956380834127638791856333738872368854622194768025215237611323392;
parameter    ap_ST_fsm_state375 = 395'd38478521676166483605741250097796497856523182881313912761668255277583712667477744737709244389536050430475222646784;
parameter    ap_ST_fsm_state376 = 395'd76957043352332967211482500195592995713046365762627825523336510555167425334955489475418488779072100860950445293568;
parameter    ap_ST_fsm_state377 = 395'd153914086704665934422965000391185991426092731525255651046673021110334850669910978950836977558144201721900890587136;
parameter    ap_ST_fsm_state378 = 395'd307828173409331868845930000782371982852185463050511302093346042220669701339821957901673955116288403443801781174272;
parameter    ap_ST_fsm_state379 = 395'd615656346818663737691860001564743965704370926101022604186692084441339402679643915803347910232576806887603562348544;
parameter    ap_ST_fsm_state380 = 395'd1231312693637327475383720003129487931408741852202045208373384168882678805359287831606695820465153613775207124697088;
parameter    ap_ST_fsm_state381 = 395'd2462625387274654950767440006258975862817483704404090416746768337765357610718575663213391640930307227550414249394176;
parameter    ap_ST_fsm_state382 = 395'd4925250774549309901534880012517951725634967408808180833493536675530715221437151326426783281860614455100828498788352;
parameter    ap_ST_fsm_state383 = 395'd9850501549098619803069760025035903451269934817616361666987073351061430442874302652853566563721228910201656997576704;
parameter    ap_ST_fsm_state384 = 395'd19701003098197239606139520050071806902539869635232723333974146702122860885748605305707133127442457820403313995153408;
parameter    ap_ST_fsm_state385 = 395'd39402006196394479212279040100143613805079739270465446667948293404245721771497210611414266254884915640806627990306816;
parameter    ap_ST_fsm_state386 = 395'd78804012392788958424558080200287227610159478540930893335896586808491443542994421222828532509769831281613255980613632;
parameter    ap_ST_fsm_state387 = 395'd157608024785577916849116160400574455220318957081861786671793173616982887085988842445657065019539662563226511961227264;
parameter    ap_ST_fsm_state388 = 395'd315216049571155833698232320801148910440637914163723573343586347233965774171977684891314130039079325126453023922454528;
parameter    ap_ST_fsm_state389 = 395'd630432099142311667396464641602297820881275828327447146687172694467931548343955369782628260078158650252906047844909056;
parameter    ap_ST_fsm_state390 = 395'd1260864198284623334792929283204595641762551656654894293374345388935863096687910739565256520156317300505812095689818112;
parameter    ap_ST_fsm_state391 = 395'd2521728396569246669585858566409191283525103313309788586748690777871726193375821479130513040312634601011624191379636224;
parameter    ap_ST_fsm_state392 = 395'd5043456793138493339171717132818382567050206626619577173497381555743452386751642958261026080625269202023248382759272448;
parameter    ap_ST_fsm_state393 = 395'd10086913586276986678343434265636765134100413253239154346994763111486904773503285916522052161250538404046496765518544896;
parameter    ap_ST_fsm_state394 = 395'd20173827172553973356686868531273530268200826506478308693989526222973809547006571833044104322501076808092993531037089792;
parameter    ap_ST_fsm_state395 = 395'd40347654345107946713373737062547060536401653012956617387979052445947619094013143666088208645002153616185987062074179584;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] in_r_address0;
output   in_r_ce0;
input  [15:0] in_r_q0;
output  [11:0] out_r_address0;
output   out_r_ce0;
output   out_r_we0;
output  [15:0] out_r_d0;
output  [15:0] acc_address0;
output   acc_ce0;
output   acc_we0;
output  [31:0] acc_d0;
input  [31:0] acc_q0;
output  [15:0] dNonZero_address0;
output   dNonZero_ce0;
output   dNonZero_we0;
output  [31:0] dNonZero_d0;
input  [31:0] dNonZero_q0;
output  [15:0] fiNonZero_address0;
output   fiNonZero_ce0;
output   fiNonZero_we0;
output  [31:0] fiNonZero_d0;
input  [31:0] fiNonZero_q0;
input  [31:0] threshold;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[11:0] in_r_address0;
reg in_r_ce0;
reg out_r_ce0;
reg out_r_we0;
reg[15:0] acc_address0;
reg acc_ce0;
reg acc_we0;
reg[31:0] acc_d0;
reg[15:0] dNonZero_address0;
reg dNonZero_ce0;
reg dNonZero_we0;
reg[15:0] fiNonZero_address0;
reg fiNonZero_ce0;
reg fiNonZero_we0;

(* fsm_encoding = "none" *) reg   [394:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [4:0] mask_table1_address0;
reg    mask_table1_ce0;
wire   [22:0] mask_table1_q0;
wire   [4:0] one_half_table2_address0;
reg    one_half_table2_ce0;
wire   [23:0] one_half_table2_q0;
wire   [5:0] mask_table4_address0;
reg    mask_table4_ce0;
wire   [51:0] mask_table4_q0;
wire   [5:0] one_half_table6_address0;
reg    one_half_table6_ce0;
wire   [52:0] one_half_table6_q0;
wire   [63:0] grp_fu_701_p1;
reg   [63:0] reg_712;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state317;
wire   [63:0] grp_fu_687_p2;
reg   [63:0] reg_718;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state95;
wire    ap_CS_fsm_state192;
wire    ap_CS_fsm_state324;
wire   [63:0] grp_fu_696_p2;
reg   [63:0] reg_724;
wire    ap_CS_fsm_state86;
wire    ap_CS_fsm_state251;
wire    ap_CS_fsm_state380;
wire   [63:0] grp_sin_or_cos_double_s_fu_621_ap_return;
reg   [63:0] reg_733;
wire    ap_CS_fsm_state88;
wire    grp_sin_or_cos_double_s_fu_621_ap_done;
wire    grp_sin_or_cos_double_s_fu_640_ap_done;
reg    ap_block_state88_on_subcall_done;
wire    ap_CS_fsm_state321;
wire   [63:0] grp_fu_682_p2;
reg   [63:0] reg_739;
wire    ap_CS_fsm_state103;
wire    ap_CS_fsm_state111;
wire    ap_CS_fsm_state388;
reg   [31:0] reg_745;
wire    ap_CS_fsm_state120;
wire    ap_CS_fsm_state173;
wire   [31:0] grp_fu_659_p2;
reg   [31:0] reg_751;
wire    ap_CS_fsm_state127;
wire    ap_CS_fsm_state320;
reg   [15:0] reg_757;
wire    ap_CS_fsm_state131;
wire    ap_CS_fsm_state142;
wire   [31:0] grp_fu_669_p1;
reg   [31:0] reg_761;
wire    ap_CS_fsm_state137;
wire    ap_CS_fsm_state148;
wire    ap_CS_fsm_state171;
reg   [31:0] reg_768;
wire    ap_CS_fsm_state138;
wire    ap_CS_fsm_state149;
wire   [63:0] grp_fu_675_p1;
reg   [63:0] reg_773;
wire    ap_CS_fsm_state185;
wire   [63:0] c_cast_fu_779_p1;
wire    ap_CS_fsm_state2;
wire   [5:0] c_1_fu_790_p2;
reg   [5:0] c_1_reg_1915;
wire   [11:0] tmp_1_cast_fu_801_p1;
reg   [11:0] tmp_1_cast_reg_1927;
wire   [11:0] next_mul_fu_805_p2;
reg   [11:0] next_mul_reg_1932;
wire    ap_CS_fsm_state8;
wire   [63:0] r_cast_fu_811_p1;
reg   [63:0] r_cast_reg_1937;
wire   [5:0] r_3_fu_821_p2;
reg   [5:0] r_3_reg_1945;
wire   [0:0] exitcond8_fu_815_p2;
wire   [0:0] tmp_6_fu_837_p2;
reg   [0:0] tmp_6_reg_1955;
wire    ap_CS_fsm_state9;
reg   [63:0] tmp_7_reg_1959;
wire    ap_CS_fsm_state14;
wire   [63:0] fi_cast_fu_843_p1;
wire    ap_CS_fsm_state15;
wire   [7:0] fi_1_fu_854_p2;
reg   [7:0] fi_1_reg_1972;
reg   [63:0] tmp_9_reg_1977;
wire    ap_CS_fsm_state20;
wire   [63:0] grp_sin_or_cos_double_s_fu_640_ap_return;
reg   [63:0] tmp_i_i_i1_reg_1982;
wire   [63:0] grp_fu_692_p2;
reg   [63:0] tmp_13_reg_1987;
wire   [31:0] x_assign_1_fu_672_p1;
reg   [31:0] x_assign_1_reg_1992;
wire    ap_CS_fsm_state112;
wire   [31:0] t_V_3_fu_860_p1;
reg   [31:0] t_V_3_reg_1998;
wire    ap_CS_fsm_state113;
wire   [0:0] tmp_i_i_i_62_fu_873_p2;
reg   [0:0] tmp_i_i_i_62_reg_2004;
wire   [0:0] tmp_119_i_i_i_fu_879_p2;
reg   [0:0] tmp_119_i_i_i_reg_2010;
reg   [22:0] mask_reg_2025;
wire    ap_CS_fsm_state114;
reg   [23:0] one_half_reg_2030;
wire   [31:0] sel_tmp_fu_964_p1;
reg   [31:0] sel_tmp_reg_2035;
wire    ap_CS_fsm_state115;
reg   [0:0] p_Result_60_reg_2040;
wire    ap_CS_fsm_state116;
wire   [22:0] loc_V_6_fu_1006_p1;
reg   [22:0] loc_V_6_reg_2045;
wire   [0:0] isNeg_fu_1020_p3;
reg   [0:0] isNeg_reg_2050;
wire   [8:0] sh_assign_1_fu_1038_p3;
reg   [8:0] sh_assign_1_reg_2055;
wire   [16:0] tmp_61_fu_1110_p1;
reg   [16:0] tmp_61_reg_2061;
wire    ap_CS_fsm_state117;
wire   [16:0] tmp_63_fu_1114_p1;
reg   [16:0] tmp_63_reg_2066;
wire  signed [16:0] tmp_64_fu_1123_p3;
reg  signed [16:0] tmp_64_reg_2071;
wire    ap_CS_fsm_state118;
reg   [15:0] acc_addr_2_reg_2076;
wire    ap_CS_fsm_state119;
wire   [5:0] c_2_fu_1143_p2;
reg   [5:0] c_2_reg_2084;
wire    ap_CS_fsm_state129;
wire   [11:0] tmp_3_cast_fu_1149_p1;
reg   [11:0] tmp_3_cast_reg_2089;
wire   [0:0] exitcond6_fu_1137_p2;
wire   [5:0] r_1_fu_1159_p2;
reg   [5:0] r_1_reg_2097;
wire    ap_CS_fsm_state130;
wire   [11:0] next_mul2_fu_1165_p2;
reg   [11:0] next_mul2_reg_2102;
wire   [0:0] exitcond5_fu_1153_p2;
wire  signed [31:0] accMax_s_fu_1181_p1;
wire    ap_CS_fsm_state132;
wire   [0:0] notlhs_fu_1222_p2;
reg   [0:0] notlhs_reg_2117;
wire   [0:0] notrhs_fu_1228_p2;
reg   [0:0] notrhs_reg_2122;
wire   [0:0] notlhs1_fu_1234_p2;
reg   [0:0] notlhs1_reg_2127;
wire   [0:0] notrhs1_fu_1240_p2;
reg   [0:0] notrhs1_reg_2132;
wire   [0:0] grp_fu_678_p2;
reg   [0:0] tmp_21_reg_2137;
wire   [5:0] c_3_fu_1284_p2;
reg   [5:0] c_3_reg_2145;
wire    ap_CS_fsm_state140;
wire   [13:0] tmp_8_cast9_fu_1290_p1;
reg   [13:0] tmp_8_cast9_reg_2150;
wire   [0:0] exitcond4_fu_1278_p2;
wire   [11:0] tmp_8_cast_fu_1294_p1;
reg   [11:0] tmp_8_cast_reg_2155;
wire   [31:0] threshold_to_int_fu_1298_p1;
reg   [31:0] threshold_to_int_reg_2167;
wire   [0:0] notrhs3_fu_1305_p2;
reg   [0:0] notrhs3_reg_2172;
wire   [5:0] r_2_fu_1322_p2;
reg   [5:0] r_2_reg_2180;
wire    ap_CS_fsm_state141;
wire   [11:0] next_mul4_fu_1328_p2;
reg   [11:0] next_mul4_reg_2185;
wire   [0:0] exitcond3_fu_1316_p2;
wire   [13:0] next_mul6_fu_1344_p2;
reg   [13:0] next_mul6_reg_2195;
wire   [13:0] tmp_47_fu_1350_p2;
reg   [13:0] tmp_47_reg_2200;
wire  signed [31:0] tmp_48_fu_1355_p1;
wire    ap_CS_fsm_state143;
wire   [31:0] grp_fu_665_p2;
reg   [31:0] tmp_25_reg_2210;
wire    ap_CS_fsm_state164;
wire   [63:0] c5_cast_fu_1364_p1;
wire    ap_CS_fsm_state166;
wire   [7:0] c_4_fu_1375_p2;
reg   [7:0] c_4_reg_2223;
wire   [15:0] tmp_18_cast_fu_1381_p1;
reg   [15:0] tmp_18_cast_reg_2228;
wire   [63:0] r6_cast_fu_1385_p1;
reg   [63:0] r6_cast_reg_2233;
wire    ap_CS_fsm_state172;
wire   [7:0] r_4_fu_1395_p2;
reg   [7:0] r_4_reg_2241;
wire   [15:0] next_mul8_fu_1401_p2;
reg   [15:0] next_mul8_reg_2246;
wire   [0:0] exitcond1_fu_1389_p2;
wire   [0:0] notlhs3_fu_1426_p2;
reg   [0:0] notlhs3_reg_2256;
wire   [0:0] notlhs2_fu_1450_p2;
reg   [0:0] notlhs2_reg_2261;
wire    ap_CS_fsm_state174;
wire   [0:0] notrhs2_fu_1456_p2;
reg   [0:0] notrhs2_reg_2266;
reg   [0:0] tmp_55_reg_2271;
wire   [0:0] tmp_56_fu_1476_p2;
reg   [0:0] tmp_56_reg_2276;
wire    ap_CS_fsm_state175;
reg   [31:0] tmp_30_reg_2280;
wire    ap_CS_fsm_state180;
wire   [62:0] k_1_fu_1508_p2;
reg   [62:0] k_1_reg_2288;
wire    ap_CS_fsm_state182;
reg   [15:0] fiNonZero_addr_reg_2293;
wire   [0:0] tmp_26_fu_1502_p2;
reg   [15:0] dNonZero_addr_reg_2298;
wire   [63:0] c7_cast9_fu_1520_p1;
reg   [63:0] c7_cast9_reg_2303;
wire    ap_CS_fsm_state183;
wire   [5:0] c_5_fu_1530_p2;
reg   [5:0] c_5_reg_2311;
reg   [31:0] fiNonZero_load_reg_2316;
wire    ap_CS_fsm_state184;
wire   [0:0] icmp_fu_1550_p2;
reg   [0:0] icmp_reg_2321;
wire    ap_CS_fsm_state252;
reg   [63:0] s_out_reg_2325;
wire    ap_CS_fsm_state253;
wire    grp_generic_sincos_fu_594_ap_done;
reg   [63:0] c_out_reg_2330;
wire    ap_CS_fsm_state312;
reg   [31:0] dNonZero_load_reg_2340;
wire    ap_CS_fsm_state313;
wire   [63:0] tmp_39_neg_fu_1568_p2;
reg   [63:0] tmp_39_neg_reg_2345;
wire   [63:0] tmp_35_fu_1574_p1;
wire    ap_CS_fsm_state318;
wire   [63:0] t_V_6_fu_1578_p1;
reg   [63:0] t_V_6_reg_2355;
wire    ap_CS_fsm_state389;
wire   [0:0] tmp_i_i_i3_fu_1592_p2;
reg   [0:0] tmp_i_i_i3_reg_2361;
wire   [0:0] tmp_125_i_i_i_fu_1598_p2;
reg   [0:0] tmp_125_i_i_i_reg_2367;
wire   [31:0] tmp_126_i_i_i_fu_1614_p1;
reg   [31:0] tmp_126_i_i_i_reg_2372;
wire    ap_CS_fsm_state390;
reg   [52:0] one_half_1_reg_2387;
wire   [63:0] sel_tmp4_fu_1683_p1;
reg   [63:0] sel_tmp4_reg_2392;
wire    ap_CS_fsm_state391;
reg   [0:0] p_Result_63_reg_2397;
wire    ap_CS_fsm_state392;
wire   [51:0] loc_V_10_fu_1726_p1;
reg   [51:0] loc_V_10_reg_2402;
wire   [0:0] isNeg_1_fu_1740_p3;
reg   [0:0] isNeg_1_reg_2407;
wire   [11:0] sh_assign_3_fu_1758_p3;
reg   [11:0] sh_assign_3_reg_2412;
wire   [62:0] p_Val2_51_fu_1824_p3;
reg   [62:0] p_Val2_51_reg_2417;
wire    ap_CS_fsm_state393;
wire   [63:0] p_Val2_54_fu_1840_p3;
reg   [63:0] p_Val2_54_reg_2422;
wire    ap_CS_fsm_state394;
reg   [62:0] tmp_75_reg_2428;
wire    grp_generic_sincos_fu_594_ap_start;
wire    grp_generic_sincos_fu_594_ap_idle;
wire    grp_generic_sincos_fu_594_ap_ready;
wire   [63:0] grp_generic_sincos_fu_594_ap_return_0;
wire   [63:0] grp_generic_sincos_fu_594_ap_return_1;
wire    grp_sin_or_cos_double_s_fu_621_ap_start;
wire    grp_sin_or_cos_double_s_fu_621_ap_idle;
wire    grp_sin_or_cos_double_s_fu_621_ap_ready;
wire    grp_sin_or_cos_double_s_fu_621_do_cos;
wire    grp_sin_or_cos_double_s_fu_640_ap_start;
wire    grp_sin_or_cos_double_s_fu_640_ap_idle;
wire    grp_sin_or_cos_double_s_fu_640_ap_ready;
wire    grp_sin_or_cos_double_s_fu_640_do_cos;
reg   [5:0] c_reg_405;
reg   [5:0] r_reg_417;
wire   [0:0] exitcond7_fu_848_p2;
reg   [11:0] phi_mul_reg_428;
reg   [7:0] fi_reg_439;
wire    ap_CS_fsm_state128;
reg   [5:0] c1_reg_451;
wire   [0:0] exitcond9_fu_784_p2;
reg   [5:0] r2_reg_462;
wire    ap_CS_fsm_state139;
reg   [11:0] phi_mul1_reg_473;
reg   [5:0] c3_reg_484;
reg   [5:0] r4_reg_495;
wire    ap_CS_fsm_state165;
reg   [11:0] phi_mul3_reg_506;
reg   [13:0] phi_mul5_reg_517;
reg   [7:0] c5_reg_528;
reg   [7:0] r6_reg_540;
wire    ap_CS_fsm_state181;
reg   [15:0] phi_mul7_reg_551;
reg   [62:0] k_reg_562;
wire   [0:0] exitcond_fu_1524_p2;
wire   [0:0] exitcond2_fu_1369_p2;
reg   [5:0] c7_reg_573;
wire    ap_CS_fsm_state395;
reg   [63:0] p_i_i_reg_585;
reg    ap_reg_grp_generic_sincos_fu_594_ap_start;
reg    ap_reg_grp_sin_or_cos_double_s_fu_621_ap_start;
wire    ap_CS_fsm_state87;
reg    ap_reg_grp_sin_or_cos_double_s_fu_640_ap_start;
wire   [31:0] tmp_60_cast_fu_832_p1;
wire   [31:0] tmp_120_i_i_i_fu_895_p1;
wire   [31:0] tmp_68_cast_fu_1133_p1;
wire   [31:0] tmp_62_cast_fu_1176_p1;
wire   [31:0] tmp_70_cast_fu_1339_p1;
wire   [31:0] tmp_72_cast_fu_1360_p1;
wire   [31:0] tmp_74_cast_fu_1412_p1;
wire   [31:0] tmp_67_fu_1481_p1;
wire   [31:0] tmp_65_fu_1514_p1;
wire   [31:0] tmp_80_cast_fu_1880_p1;
wire   [0:0] or_cond_fu_1867_p2;
reg   [31:0] accMax_fu_236;
wire   [31:0] accMax_2_fu_1265_p3;
reg   [63:0] nonZeroCount_fu_240;
wire   [63:0] nonZeroCount_1_fu_1487_p2;
reg   [31:0] grp_fu_659_p0;
reg   [31:0] grp_fu_659_p1;
wire    ap_CS_fsm_state121;
wire    ap_CS_fsm_state314;
reg  signed [63:0] grp_fu_669_p0;
reg   [31:0] grp_fu_675_p0;
reg   [31:0] grp_fu_678_p0;
reg   [31:0] grp_fu_678_p1;
reg   [63:0] grp_fu_682_p0;
reg   [63:0] grp_fu_682_p1;
wire    ap_CS_fsm_state96;
wire    ap_CS_fsm_state104;
wire    ap_CS_fsm_state381;
reg   [63:0] grp_fu_687_p0;
reg   [63:0] grp_fu_687_p1;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state89;
wire    ap_CS_fsm_state186;
reg   [63:0] grp_fu_696_p0;
reg   [63:0] grp_fu_696_p1;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state193;
wire    ap_CS_fsm_state254;
wire    ap_CS_fsm_state322;
reg   [63:0] grp_fu_701_p0;
wire   [11:0] tmp_s_fu_827_p2;
wire   [7:0] loc_V_fu_863_p4;
wire   [4:0] index_V_fu_885_p4;
wire   [0:0] p_Result_s_fu_901_p3;
wire   [31:0] one_half_cast_fu_916_p1;
wire   [31:0] p_Val2_s_fu_919_p2;
wire   [22:0] loc_V_4_fu_924_p1;
wire   [22:0] tmp_122_i_i_i_fu_928_p2;
wire   [8:0] tmp_27_fu_939_p4;
wire   [22:0] xs_sig_V_fu_933_p2;
wire   [31:0] p_Result_58_fu_908_p3;
wire   [31:0] p_Result_59_fu_949_p3;
wire   [31:0] sel_tmp_v_fu_957_p3;
wire   [0:0] sel_tmp1_fu_968_p2;
wire   [0:0] sel_tmp2_fu_973_p2;
wire   [31:0] x_assign_2_fu_978_p3;
wire   [31:0] p_Val2_39_fu_984_p1;
wire   [7:0] loc_V_5_fu_996_p4;
wire   [8:0] tmp_i_i_i_i_cast_fu_1010_p1;
wire   [8:0] sh_assign_fu_1014_p2;
wire   [7:0] tmp_132_i_i_i_fu_1028_p2;
wire  signed [8:0] tmp_132_i_i_i_cast_fu_1034_p1;
wire   [24:0] tmp_131_i_i_i_fu_1046_p4;
wire  signed [31:0] sh_assign_1_cast_fu_1059_p1;
wire  signed [24:0] sh_assign_1_cast_cas_fu_1062_p1;
wire   [110:0] tmp_131_i_i_i_cast1_fu_1055_p1;
wire   [110:0] tmp_133_i_i_i_fu_1065_p1;
wire   [24:0] tmp_134_i_i_i_fu_1069_p2;
wire   [0:0] tmp_60_fu_1081_p3;
wire   [110:0] tmp_135_i_i_i_fu_1075_p2;
wire   [31:0] tmp_28_fu_1089_p1;
wire   [31:0] tmp_29_fu_1093_p4;
wire   [31:0] tmp_31_fu_1103_p3;
wire   [16:0] tmp_62_fu_1118_p2;
wire  signed [16:0] grp_fu_1884_p3;
wire   [11:0] tmp_16_fu_1171_p2;
wire   [31:0] accMax_3_to_int_fu_1186_p1;
wire   [31:0] accMax_1_to_int_fu_1204_p1;
wire   [7:0] tmp_fu_1190_p4;
wire   [22:0] tmp_44_fu_1200_p1;
wire   [7:0] tmp_11_fu_1208_p4;
wire   [22:0] tmp_45_fu_1218_p1;
wire   [0:0] tmp_17_fu_1246_p2;
wire   [0:0] tmp_18_fu_1250_p2;
wire   [0:0] tmp_20_fu_1254_p2;
wire   [0:0] tmp_23_fu_1260_p2;
wire   [22:0] tmp_42_fu_1301_p1;
wire   [11:0] tmp_46_fu_1334_p2;
wire   [15:0] tmp_49_fu_1407_p2;
wire   [7:0] tmp_51_fu_1417_p4;
wire   [31:0] acc_load_1_to_int_fu_1432_p1;
wire   [7:0] tmp_50_fu_1436_p4;
wire   [22:0] tmp_66_fu_1446_p1;
wire   [0:0] tmp_52_fu_1462_p2;
wire   [0:0] tmp_53_fu_1466_p2;
wire   [0:0] tmp_54_fu_1470_p2;
wire   [63:0] k_cast_fu_1498_p1;
wire   [63:0] p_Val2_41_fu_1536_p1;
wire   [9:0] tmp_68_fu_1540_p4;
wire   [63:0] tmp_39_to_int_fu_1564_p1;
wire   [10:0] loc_V_7_fu_1582_p4;
wire   [5:0] index_V_1_fu_1604_p4;
wire   [0:0] p_Result_47_fu_1619_p3;
wire   [63:0] one_half_1_cast_fu_1634_p1;
wire   [63:0] p_Val2_47_fu_1637_p2;
wire   [51:0] loc_V_8_fu_1642_p1;
wire   [51:0] tmp_128_i_i_i_fu_1646_p2;
wire   [11:0] tmp_57_fu_1658_p4;
wire   [51:0] xs_sig_V_1_fu_1652_p2;
wire   [63:0] p_Result_61_fu_1626_p3;
wire   [63:0] p_Result_62_fu_1668_p3;
wire   [63:0] sel_tmp4_v_fu_1676_p3;
wire   [0:0] sel_tmp5_fu_1687_p2;
wire   [0:0] sel_tmp6_fu_1692_p2;
wire   [63:0] x_assign_5_fu_1697_p3;
wire   [63:0] p_Val2_49_fu_1704_p1;
wire   [10:0] loc_V_9_fu_1716_p4;
wire   [11:0] tmp_i_i_i_i1_cast8_fu_1730_p1;
wire   [11:0] sh_assign_2_fu_1734_p2;
wire   [10:0] tmp_141_i_i_i_fu_1748_p2;
wire  signed [11:0] tmp_141_i_i_i_cast_fu_1754_p1;
wire   [53:0] tmp_i_i_i2_70_fu_1766_p4;
wire  signed [31:0] sh_assign_3_cast_fu_1779_p1;
wire   [53:0] tmp_142_i_i_i_cast_fu_1786_p1;
wire   [168:0] tmp_i_i_i2_cast_fu_1775_p1;
wire   [168:0] tmp_142_i_i_i_fu_1782_p1;
wire   [53:0] tmp_143_i_i_i_fu_1790_p2;
wire   [0:0] tmp_74_fu_1802_p3;
wire   [168:0] tmp_144_i_i_i_fu_1796_p2;
wire   [62:0] tmp_58_fu_1810_p1;
wire   [62:0] tmp_59_fu_1814_p4;
wire   [63:0] tmp_146_i_i_i_fu_1831_p1;
wire   [63:0] tmp_149_i_i_i_fu_1834_p2;
wire   [0:0] icmp1_fu_1857_p2;
wire   [0:0] tmp_43_fu_1862_p2;
wire  signed [12:0] grp_fu_1892_p3;
wire   [8:0] grp_fu_1884_p0;
wire   [7:0] grp_fu_1884_p2;
wire   [6:0] grp_fu_1892_p0;
wire  signed [12:0] grp_fu_1892_p1;
wire   [5:0] grp_fu_1892_p2;
reg    grp_fu_687_ce;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state90;
wire    ap_CS_fsm_state91;
wire    ap_CS_fsm_state92;
wire    ap_CS_fsm_state93;
wire    ap_CS_fsm_state94;
wire    ap_CS_fsm_state187;
wire    ap_CS_fsm_state188;
wire    ap_CS_fsm_state189;
wire    ap_CS_fsm_state190;
wire    ap_CS_fsm_state191;
wire    ap_CS_fsm_state319;
wire    ap_CS_fsm_state323;
reg   [394:0] ap_NS_fsm;
wire   [16:0] grp_fu_1884_p20;
wire   [12:0] grp_fu_1892_p20;

// power-on initialization
initial begin
#0 ap_CS_fsm = 395'd1;
#0 ap_reg_grp_generic_sincos_fu_594_ap_start = 1'b0;
#0 ap_reg_grp_sin_or_cos_double_s_fu_621_ap_start = 1'b0;
#0 ap_reg_grp_sin_or_cos_double_s_fu_640_ap_start = 1'b0;
end

houghTransform_maLf8 #(
    .DataWidth( 23 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
mask_table1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mask_table1_address0),
    .ce0(mask_table1_ce0),
    .q0(mask_table1_q0)
);

houghTransform_onMgi #(
    .DataWidth( 24 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
one_half_table2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(one_half_table2_address0),
    .ce0(one_half_table2_ce0),
    .q0(one_half_table2_q0)
);

houghTransform_maNgs #(
    .DataWidth( 52 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
mask_table4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mask_table4_address0),
    .ce0(mask_table4_ce0),
    .q0(mask_table4_q0)
);

houghTransform_onOgC #(
    .DataWidth( 53 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
one_half_table6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(one_half_table6_address0),
    .ce0(one_half_table6_ce0),
    .q0(one_half_table6_q0)
);

generic_sincos grp_generic_sincos_fu_594(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_generic_sincos_fu_594_ap_start),
    .ap_done(grp_generic_sincos_fu_594_ap_done),
    .ap_idle(grp_generic_sincos_fu_594_ap_idle),
    .ap_ready(grp_generic_sincos_fu_594_ap_ready),
    .t_in(reg_724),
    .ap_return_0(grp_generic_sincos_fu_594_ap_return_0),
    .ap_return_1(grp_generic_sincos_fu_594_ap_return_1)
);

sin_or_cos_double_s grp_sin_or_cos_double_s_fu_621(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_sin_or_cos_double_s_fu_621_ap_start),
    .ap_done(grp_sin_or_cos_double_s_fu_621_ap_done),
    .ap_idle(grp_sin_or_cos_double_s_fu_621_ap_idle),
    .ap_ready(grp_sin_or_cos_double_s_fu_621_ap_ready),
    .t_in(reg_724),
    .do_cos(grp_sin_or_cos_double_s_fu_621_do_cos),
    .ap_return(grp_sin_or_cos_double_s_fu_621_ap_return)
);

sin_or_cos_double_s grp_sin_or_cos_double_s_fu_640(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_sin_or_cos_double_s_fu_640_ap_start),
    .ap_done(grp_sin_or_cos_double_s_fu_640_ap_done),
    .ap_idle(grp_sin_or_cos_double_s_fu_640_ap_idle),
    .ap_ready(grp_sin_or_cos_double_s_fu_640_ap_ready),
    .t_in(reg_724),
    .do_cos(grp_sin_or_cos_double_s_fu_640_do_cos),
    .ap_return(grp_sin_or_cos_double_s_fu_640_ap_return)
);

houghTransform_faPgM #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
houghTransform_faPgM_U51(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_659_p0),
    .din1(grp_fu_659_p1),
    .ce(1'b1),
    .dout(grp_fu_659_p2)
);

houghTransform_fdQgW #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
houghTransform_fdQgW_U52(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_761),
    .din1(accMax_fu_236),
    .ce(1'b1),
    .dout(grp_fu_665_p2)
);

houghTransform_siRg6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
houghTransform_siRg6_U53(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_669_p0),
    .ce(1'b1),
    .dout(grp_fu_669_p1)
);

houghTransform_fpShg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
houghTransform_fpShg_U54(
    .din0(reg_739),
    .dout(x_assign_1_fu_672_p1)
);

houghTransform_fpThq #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
houghTransform_fpThq_U55(
    .din0(grp_fu_675_p0),
    .dout(grp_fu_675_p1)
);

houghTransform_fcUhA #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
houghTransform_fcUhA_U56(
    .din0(grp_fu_678_p0),
    .din1(grp_fu_678_p1),
    .opcode(5'd2),
    .dout(grp_fu_678_p2)
);

houghTransform_daVhK #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
houghTransform_daVhK_U57(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_682_p0),
    .din1(grp_fu_682_p1),
    .ce(1'b1),
    .dout(grp_fu_682_p2)
);

houghTransform_dmWhU #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
houghTransform_dmWhU_U58(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_687_p0),
    .din1(grp_fu_687_p1),
    .ce(grp_fu_687_ce),
    .dout(grp_fu_687_p2)
);

houghTransform_dmWhU #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
houghTransform_dmWhU_U59(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_712),
    .din1(tmp_i_i_i1_reg_1982),
    .ce(1'b1),
    .dout(grp_fu_692_p2)
);

houghTransform_ddXh4 #(
    .ID( 1 ),
    .NUM_STAGE( 59 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
houghTransform_ddXh4_U60(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_696_p0),
    .din1(grp_fu_696_p1),
    .ce(1'b1),
    .dout(grp_fu_696_p2)
);

houghTransform_siYie #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
houghTransform_siYie_U61(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_701_p0),
    .ce(1'b1),
    .dout(grp_fu_701_p1)
);

houghTransform_maZio #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 17 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 17 ))
houghTransform_maZio_U62(
    .din0(grp_fu_1884_p0),
    .din1(tmp_64_reg_2071),
    .din2(grp_fu_1884_p2),
    .dout(grp_fu_1884_p3)
);

houghTransform_ma0iy #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 6 ),
    .dout_WIDTH( 13 ))
houghTransform_ma0iy_U63(
    .din0(grp_fu_1892_p0),
    .din1(grp_fu_1892_p1),
    .din2(grp_fu_1892_p2),
    .dout(grp_fu_1892_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_generic_sincos_fu_594_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state252) & (1'd0 == icmp_fu_1550_p2))) begin
            ap_reg_grp_generic_sincos_fu_594_ap_start <= 1'b1;
        end else if ((1'b1 == grp_generic_sincos_fu_594_ap_ready)) begin
            ap_reg_grp_generic_sincos_fu_594_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_sin_or_cos_double_s_fu_621_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state320) | (1'b1 == ap_CS_fsm_state87))) begin
            ap_reg_grp_sin_or_cos_double_s_fu_621_ap_start <= 1'b1;
        end else if ((1'b1 == grp_sin_or_cos_double_s_fu_621_ap_ready)) begin
            ap_reg_grp_sin_or_cos_double_s_fu_621_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_sin_or_cos_double_s_fu_640_ap_start <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state87)) begin
            ap_reg_grp_sin_or_cos_double_s_fu_640_ap_start <= 1'b1;
        end else if ((1'b1 == grp_sin_or_cos_double_s_fu_640_ap_ready)) begin
            ap_reg_grp_sin_or_cos_double_s_fu_640_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state139)) begin
        accMax_fu_236 <= accMax_2_fu_1265_p3;
    end else if (((1'b1 == ap_CS_fsm_state2) & (1'd1 == exitcond9_fu_784_p2))) begin
        accMax_fu_236 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state130) & (1'd1 == exitcond5_fu_1153_p2))) begin
        c1_reg_451 <= c_2_reg_2084;
    end else if (((1'b1 == ap_CS_fsm_state2) & (1'd1 == exitcond9_fu_784_p2))) begin
        c1_reg_451 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state129) & (1'd1 == exitcond6_fu_1137_p2))) begin
        c3_reg_484 <= 6'd0;
    end else if (((1'b1 == ap_CS_fsm_state141) & (1'd1 == exitcond3_fu_1316_p2))) begin
        c3_reg_484 <= c_3_reg_2145;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state172) & (1'd1 == exitcond1_fu_1389_p2))) begin
        c5_reg_528 <= c_4_reg_2223;
    end else if (((1'b1 == ap_CS_fsm_state140) & (1'd1 == exitcond4_fu_1278_p2))) begin
        c5_reg_528 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state182) & (1'd1 == tmp_26_fu_1502_p2))) begin
        c7_reg_573 <= 6'd0;
    end else if ((1'b1 == ap_CS_fsm_state395)) begin
        c7_reg_573 <= c_5_reg_2311;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (exitcond8_fu_815_p2 == 1'd1))) begin
        c_reg_405 <= c_1_reg_1915;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        c_reg_405 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        fi_reg_439 <= 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state128)) begin
        fi_reg_439 <= fi_1_reg_1972;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state166) & (1'd1 == exitcond2_fu_1369_p2))) begin
        k_reg_562 <= 63'd0;
    end else if (((1'b1 == ap_CS_fsm_state183) & (1'd1 == exitcond_fu_1524_p2))) begin
        k_reg_562 <= k_1_reg_2288;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state181) & (1'd1 == tmp_56_reg_2276))) begin
        nonZeroCount_fu_240 <= nonZeroCount_1_fu_1487_p2;
    end else if (((1'b1 == ap_CS_fsm_state140) & (1'd1 == exitcond4_fu_1278_p2))) begin
        nonZeroCount_fu_240 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state252) & (1'd1 == icmp_fu_1550_p2))) begin
        p_i_i_reg_585 <= reg_724;
    end else if (((1'b1 == ap_CS_fsm_state312) & (1'd0 == icmp_reg_2321))) begin
        p_i_i_reg_585 <= grp_fu_696_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state129) & (1'd0 == exitcond6_fu_1137_p2))) begin
        phi_mul1_reg_473 <= 12'd0;
    end else if ((1'b1 == ap_CS_fsm_state139)) begin
        phi_mul1_reg_473 <= next_mul2_reg_2102;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state140) & (1'd0 == exitcond4_fu_1278_p2))) begin
        phi_mul3_reg_506 <= 12'd0;
    end else if ((1'b1 == ap_CS_fsm_state165)) begin
        phi_mul3_reg_506 <= next_mul4_reg_2185;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state140) & (1'd0 == exitcond4_fu_1278_p2))) begin
        phi_mul5_reg_517 <= 14'd0;
    end else if ((1'b1 == ap_CS_fsm_state165)) begin
        phi_mul5_reg_517 <= next_mul6_reg_2195;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state181)) begin
        phi_mul7_reg_551 <= next_mul8_reg_2246;
    end else if ((1'b1 == ap_CS_fsm_state171)) begin
        phi_mul7_reg_551 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        phi_mul_reg_428 <= 12'd0;
    end else if (((1'b1 == ap_CS_fsm_state15) & ((1'd0 == tmp_6_reg_1955) | (1'd1 == exitcond7_fu_848_p2)))) begin
        phi_mul_reg_428 <= next_mul_reg_1932;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state129) & (1'd0 == exitcond6_fu_1137_p2))) begin
        r2_reg_462 <= 6'd0;
    end else if ((1'b1 == ap_CS_fsm_state139)) begin
        r2_reg_462 <= r_1_reg_2097;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state140) & (1'd0 == exitcond4_fu_1278_p2))) begin
        r4_reg_495 <= 6'd0;
    end else if ((1'b1 == ap_CS_fsm_state165)) begin
        r4_reg_495 <= r_2_reg_2180;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state181)) begin
        r6_reg_540 <= r_4_reg_2241;
    end else if ((1'b1 == ap_CS_fsm_state171)) begin
        r6_reg_540 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        r_reg_417 <= 6'd0;
    end else if (((1'b1 == ap_CS_fsm_state15) & ((1'd0 == tmp_6_reg_1955) | (1'd1 == exitcond7_fu_848_p2)))) begin
        r_reg_417 <= r_3_reg_1945;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state119)) begin
        acc_addr_2_reg_2076 <= tmp_68_cast_fu_1133_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state183)) begin
        c7_cast9_reg_2303[5 : 0] <= c7_cast9_fu_1520_p1[5 : 0];
        c_5_reg_2311 <= c_5_fu_1530_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        c_1_reg_1915 <= c_1_fu_790_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state129)) begin
        c_2_reg_2084 <= c_2_fu_1143_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state140)) begin
        c_3_reg_2145 <= c_3_fu_1284_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state166)) begin
        c_4_reg_2223 <= c_4_fu_1375_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state253) & (grp_generic_sincos_fu_594_ap_done == 1'b1))) begin
        c_out_reg_2330 <= grp_generic_sincos_fu_594_ap_return_1;
        s_out_reg_2325 <= grp_generic_sincos_fu_594_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state182) & (1'd1 == tmp_26_fu_1502_p2))) begin
        dNonZero_addr_reg_2298 <= tmp_65_fu_1514_p1;
        fiNonZero_addr_reg_2293 <= tmp_65_fu_1514_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state313)) begin
        dNonZero_load_reg_2340 <= dNonZero_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state184)) begin
        fiNonZero_load_reg_2316 <= fiNonZero_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (tmp_6_reg_1955 == 1'd1))) begin
        fi_1_reg_1972 <= fi_1_fu_854_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state252)) begin
        icmp_reg_2321 <= icmp_fu_1550_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state392)) begin
        isNeg_1_reg_2407 <= sh_assign_2_fu_1734_p2[32'd11];
        loc_V_10_reg_2402 <= loc_V_10_fu_1726_p1;
        p_Result_63_reg_2397 <= p_Val2_49_fu_1704_p1[32'd63];
        sh_assign_3_reg_2412 <= sh_assign_3_fu_1758_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state116)) begin
        isNeg_reg_2050 <= sh_assign_fu_1014_p2[32'd8];
        loc_V_6_reg_2045 <= loc_V_6_fu_1006_p1;
        p_Result_60_reg_2040 <= p_Val2_39_fu_984_p1[32'd31];
        sh_assign_1_reg_2055 <= sh_assign_1_fu_1038_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state182)) begin
        k_1_reg_2288 <= k_1_fu_1508_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state114)) begin
        mask_reg_2025 <= mask_table1_q0;
        one_half_reg_2030 <= one_half_table2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state130) & (1'd0 == exitcond5_fu_1153_p2))) begin
        next_mul2_reg_2102 <= next_mul2_fu_1165_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state141) & (1'd0 == exitcond3_fu_1316_p2))) begin
        next_mul4_reg_2185 <= next_mul4_fu_1328_p2;
        next_mul6_reg_2195 <= next_mul6_fu_1344_p2;
        tmp_47_reg_2200 <= tmp_47_fu_1350_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state172) & (1'd0 == exitcond1_fu_1389_p2))) begin
        next_mul8_reg_2246 <= next_mul8_fu_1401_p2;
        notlhs3_reg_2256 <= notlhs3_fu_1426_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        next_mul_reg_1932 <= next_mul_fu_805_p2;
        r_3_reg_1945 <= r_3_fu_821_p2;
        r_cast_reg_1937[5 : 0] <= r_cast_fu_811_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state138)) begin
        notlhs1_reg_2127 <= notlhs1_fu_1234_p2;
        notlhs_reg_2117 <= notlhs_fu_1222_p2;
        notrhs1_reg_2132 <= notrhs1_fu_1240_p2;
        notrhs_reg_2122 <= notrhs_fu_1228_p2;
        tmp_21_reg_2137 <= grp_fu_678_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state174)) begin
        notlhs2_reg_2261 <= notlhs2_fu_1450_p2;
        notrhs2_reg_2266 <= notrhs2_fu_1456_p2;
        tmp_55_reg_2271 <= grp_fu_678_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state140) & (1'd1 == exitcond4_fu_1278_p2))) begin
        notrhs3_reg_2172 <= notrhs3_fu_1305_p2;
        threshold_to_int_reg_2167 <= threshold_to_int_fu_1298_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state390)) begin
        one_half_1_reg_2387 <= one_half_table6_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state393)) begin
        p_Val2_51_reg_2417 <= p_Val2_51_fu_1824_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state394)) begin
        p_Val2_54_reg_2422 <= p_Val2_54_fu_1840_p3;
        tmp_75_reg_2428 <= {{p_Val2_54_fu_1840_p3[63:1]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state172)) begin
        r6_cast_reg_2233[7 : 0] <= r6_cast_fu_1385_p1[7 : 0];
        r_4_reg_2241 <= r_4_fu_1395_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state130)) begin
        r_1_reg_2097 <= r_1_fu_1159_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state141)) begin
        r_2_reg_2180 <= r_2_fu_1322_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state317))) begin
        reg_712 <= grp_fu_701_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state192) | (1'b1 == ap_CS_fsm_state324))) begin
        reg_718 <= grp_fu_687_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state251) | (1'b1 == ap_CS_fsm_state380))) begin
        reg_724 <= grp_fu_696_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state88) & (ap_block_state88_on_subcall_done == 1'b0)) | ((1'b1 == ap_CS_fsm_state321) & (grp_sin_or_cos_double_s_fu_621_ap_done == 1'b1)))) begin
        reg_733 <= grp_sin_or_cos_double_s_fu_621_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state103) | (1'b1 == ap_CS_fsm_state111) | (1'b1 == ap_CS_fsm_state388))) begin
        reg_739 <= grp_fu_682_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state120) | (1'b1 == ap_CS_fsm_state173))) begin
        reg_745 <= acc_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state127) | (1'b1 == ap_CS_fsm_state320))) begin
        reg_751 <= grp_fu_659_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state131) | (1'b1 == ap_CS_fsm_state142))) begin
        reg_757 <= in_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state137) | (1'b1 == ap_CS_fsm_state148) | (1'b1 == ap_CS_fsm_state171))) begin
        reg_761 <= grp_fu_669_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state138) | (1'b1 == ap_CS_fsm_state149))) begin
        reg_768 <= accMax_fu_236;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state321) & (grp_sin_or_cos_double_s_fu_621_ap_done == 1'b1)) | (1'b1 == ap_CS_fsm_state185))) begin
        reg_773 <= grp_fu_675_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state391)) begin
        sel_tmp4_reg_2392 <= sel_tmp4_fu_1683_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state115)) begin
        sel_tmp_reg_2035 <= sel_tmp_fu_964_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        t_V_3_reg_1998 <= t_V_3_fu_860_p1;
        tmp_119_i_i_i_reg_2010 <= tmp_119_i_i_i_fu_879_p2;
        tmp_i_i_i_62_reg_2004 <= tmp_i_i_i_62_fu_873_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state389)) begin
        t_V_6_reg_2355 <= t_V_6_fu_1578_p1;
        tmp_125_i_i_i_reg_2367 <= tmp_125_i_i_i_fu_1598_p2;
        tmp_126_i_i_i_reg_2372[5 : 0] <= tmp_126_i_i_i_fu_1614_p1[5 : 0];
        tmp_i_i_i3_reg_2361 <= tmp_i_i_i3_fu_1592_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state95)) begin
        tmp_13_reg_1987 <= grp_fu_692_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state171)) begin
        tmp_18_cast_reg_2228[7 : 0] <= tmp_18_cast_fu_1381_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_1_cast_reg_1927[5 : 0] <= tmp_1_cast_fu_801_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state164)) begin
        tmp_25_reg_2210 <= grp_fu_665_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state180)) begin
        tmp_30_reg_2280 <= grp_fu_669_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state317)) begin
        tmp_39_neg_reg_2345 <= tmp_39_neg_fu_1568_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state129) & (1'd0 == exitcond6_fu_1137_p2))) begin
        tmp_3_cast_reg_2089[5 : 0] <= tmp_3_cast_fu_1149_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state175)) begin
        tmp_56_reg_2276 <= tmp_56_fu_1476_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state117) & (1'd1 == p_Result_60_reg_2040))) begin
        tmp_61_reg_2061 <= tmp_61_fu_1110_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state117) & (1'd0 == p_Result_60_reg_2040))) begin
        tmp_63_reg_2066 <= tmp_63_fu_1114_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state118)) begin
        tmp_64_reg_2071 <= tmp_64_fu_1123_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        tmp_6_reg_1955 <= tmp_6_fu_837_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        tmp_7_reg_1959 <= grp_fu_701_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state140) & (1'd0 == exitcond4_fu_1278_p2))) begin
        tmp_8_cast9_reg_2150[5 : 0] <= tmp_8_cast9_fu_1290_p1[5 : 0];
        tmp_8_cast_reg_2155[5 : 0] <= tmp_8_cast_fu_1294_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        tmp_9_reg_1977 <= grp_fu_701_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state88) & (ap_block_state88_on_subcall_done == 1'b0))) begin
        tmp_i_i_i1_reg_1982 <= grp_sin_or_cos_double_s_fu_640_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state112)) begin
        x_assign_1_reg_1992 <= x_assign_1_fu_672_p1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state172)) begin
        acc_address0 = tmp_74_cast_fu_1412_p1;
    end else if ((1'b1 == ap_CS_fsm_state165)) begin
        acc_address0 = tmp_72_cast_fu_1360_p1;
    end else if ((1'b1 == ap_CS_fsm_state128)) begin
        acc_address0 = acc_addr_2_reg_2076;
    end else if ((1'b1 == ap_CS_fsm_state119)) begin
        acc_address0 = tmp_68_cast_fu_1133_p1;
    end else begin
        acc_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state119) | (1'b1 == ap_CS_fsm_state172) | (1'b1 == ap_CS_fsm_state128) | (1'b1 == ap_CS_fsm_state165))) begin
        acc_ce0 = 1'b1;
    end else begin
        acc_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state165)) begin
        acc_d0 = tmp_25_reg_2210;
    end else if ((1'b1 == ap_CS_fsm_state128)) begin
        acc_d0 = reg_751;
    end else begin
        acc_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state128) | (1'b1 == ap_CS_fsm_state165))) begin
        acc_we0 = 1'b1;
    end else begin
        acc_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state182) & (1'd0 == tmp_26_fu_1502_p2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state182) & (1'd0 == tmp_26_fu_1502_p2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state312)) begin
        dNonZero_address0 = dNonZero_addr_reg_2298;
    end else if ((1'b1 == ap_CS_fsm_state181)) begin
        dNonZero_address0 = tmp_67_fu_1481_p1;
    end else begin
        dNonZero_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state312) | (1'b1 == ap_CS_fsm_state181))) begin
        dNonZero_ce0 = 1'b1;
    end else begin
        dNonZero_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state181) & (1'd1 == tmp_56_reg_2276))) begin
        dNonZero_we0 = 1'b1;
    end else begin
        dNonZero_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state183)) begin
        fiNonZero_address0 = fiNonZero_addr_reg_2293;
    end else if ((1'b1 == ap_CS_fsm_state181)) begin
        fiNonZero_address0 = tmp_67_fu_1481_p1;
    end else begin
        fiNonZero_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state183) | (1'b1 == ap_CS_fsm_state181))) begin
        fiNonZero_ce0 = 1'b1;
    end else begin
        fiNonZero_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state181) & (1'd1 == tmp_56_reg_2276))) begin
        fiNonZero_we0 = 1'b1;
    end else begin
        fiNonZero_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state314)) begin
        grp_fu_659_p0 = dNonZero_load_reg_2340;
    end else if ((1'b1 == ap_CS_fsm_state121)) begin
        grp_fu_659_p0 = reg_745;
    end else begin
        grp_fu_659_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state314)) begin
        grp_fu_659_p1 = 32'd3267887104;
    end else if ((1'b1 == ap_CS_fsm_state121)) begin
        grp_fu_659_p1 = 32'd1065353216;
    end else begin
        grp_fu_659_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state175)) begin
        grp_fu_669_p0 = r6_cast_reg_2233;
    end else if ((1'b1 == ap_CS_fsm_state166)) begin
        grp_fu_669_p0 = c5_cast_fu_1364_p1;
    end else if ((1'b1 == ap_CS_fsm_state143)) begin
        grp_fu_669_p0 = tmp_48_fu_1355_p1;
    end else if ((1'b1 == ap_CS_fsm_state132)) begin
        grp_fu_669_p0 = accMax_s_fu_1181_p1;
    end else begin
        grp_fu_669_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state321)) begin
        grp_fu_675_p0 = reg_751;
    end else if ((1'b1 == ap_CS_fsm_state185)) begin
        grp_fu_675_p0 = fiNonZero_load_reg_2316;
    end else begin
        grp_fu_675_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state174)) begin
        grp_fu_678_p0 = reg_745;
    end else if ((1'b1 == ap_CS_fsm_state138)) begin
        grp_fu_678_p0 = reg_761;
    end else begin
        grp_fu_678_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state174)) begin
        grp_fu_678_p1 = threshold;
    end else if ((1'b1 == ap_CS_fsm_state138)) begin
        grp_fu_678_p1 = accMax_fu_236;
    end else begin
        grp_fu_678_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state104)) begin
        grp_fu_682_p0 = reg_739;
    end else if (((1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state381))) begin
        grp_fu_682_p0 = reg_718;
    end else begin
        grp_fu_682_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state381)) begin
        grp_fu_682_p1 = reg_724;
    end else if ((1'b1 == ap_CS_fsm_state104)) begin
        grp_fu_682_p1 = 64'd4636737291354636288;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        grp_fu_682_p1 = tmp_13_reg_1987;
    end else begin
        grp_fu_682_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state192) | (1'b1 == ap_CS_fsm_state324) | ((1'b1 == ap_CS_fsm_state321) & (grp_sin_or_cos_double_s_fu_621_ap_done == 1'b1)) | (1'b1 == ap_CS_fsm_state320) | (1'b1 == ap_CS_fsm_state318) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state186) | (1'b1 == ap_CS_fsm_state322) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state187) | (1'b1 == ap_CS_fsm_state188) | (1'b1 == ap_CS_fsm_state189) | (1'b1 == ap_CS_fsm_state190) | (1'b1 == ap_CS_fsm_state191) | (1'b1 == ap_CS_fsm_state319) | (1'b1 == ap_CS_fsm_state323))) begin
        grp_fu_687_ce = 1'b1;
    end else begin
        grp_fu_687_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state318)) begin
        grp_fu_687_p0 = reg_712;
    end else if ((1'b1 == ap_CS_fsm_state186)) begin
        grp_fu_687_p0 = reg_773;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        grp_fu_687_p0 = tmp_7_reg_1959;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_687_p0 = tmp_9_reg_1977;
    end else begin
        grp_fu_687_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state318)) begin
        grp_fu_687_p1 = tmp_35_fu_1574_p1;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        grp_fu_687_p1 = reg_733;
    end else if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state186))) begin
        grp_fu_687_p1 = 64'd4614256656552045848;
    end else begin
        grp_fu_687_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state322)) begin
        grp_fu_696_p0 = reg_773;
    end else if ((1'b1 == ap_CS_fsm_state254)) begin
        grp_fu_696_p0 = s_out_reg_2325;
    end else if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state193))) begin
        grp_fu_696_p0 = reg_718;
    end else begin
        grp_fu_696_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state322)) begin
        grp_fu_696_p1 = reg_733;
    end else if ((1'b1 == ap_CS_fsm_state254)) begin
        grp_fu_696_p1 = c_out_reg_2330;
    end else if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state193))) begin
        grp_fu_696_p1 = 64'd4640537203540230144;
    end else begin
        grp_fu_696_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state312)) begin
        grp_fu_701_p0 = c7_cast9_reg_2303;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_701_p0 = fi_cast_fu_843_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_701_p0 = r_cast_reg_1937;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_701_p0 = c_cast_fu_779_p1;
    end else begin
        grp_fu_701_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state141)) begin
        in_r_address0 = tmp_70_cast_fu_1339_p1;
    end else if ((1'b1 == ap_CS_fsm_state130)) begin
        in_r_address0 = tmp_62_cast_fu_1176_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        in_r_address0 = tmp_60_cast_fu_832_p1;
    end else begin
        in_r_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state130) | (1'b1 == ap_CS_fsm_state141))) begin
        in_r_ce0 = 1'b1;
    end else begin
        in_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        mask_table1_ce0 = 1'b1;
    end else begin
        mask_table1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state390)) begin
        mask_table4_ce0 = 1'b1;
    end else begin
        mask_table4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        one_half_table2_ce0 = 1'b1;
    end else begin
        one_half_table2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state389)) begin
        one_half_table6_ce0 = 1'b1;
    end else begin
        one_half_table6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state395)) begin
        out_r_ce0 = 1'b1;
    end else begin
        out_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state395) & (1'd1 == or_cond_fu_1867_p2))) begin
        out_r_we0 = 1'b1;
    end else begin
        out_r_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (1'd1 == exitcond9_fu_784_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state129;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (exitcond8_fu_815_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (1'd0 == tmp_6_fu_837_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & ((1'd0 == tmp_6_reg_1955) | (1'd1 == exitcond7_fu_848_p2)))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            if (((1'b1 == ap_CS_fsm_state88) & (ap_block_state88_on_subcall_done == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state89;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state88;
            end
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state124;
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state128;
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state129 : begin
            if (((1'b1 == ap_CS_fsm_state129) & (1'd1 == exitcond6_fu_1137_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state140;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state130;
            end
        end
        ap_ST_fsm_state130 : begin
            if (((1'b1 == ap_CS_fsm_state130) & (1'd1 == exitcond5_fu_1153_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state129;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state131;
            end
        end
        ap_ST_fsm_state131 : begin
            ap_NS_fsm = ap_ST_fsm_state132;
        end
        ap_ST_fsm_state132 : begin
            ap_NS_fsm = ap_ST_fsm_state133;
        end
        ap_ST_fsm_state133 : begin
            ap_NS_fsm = ap_ST_fsm_state134;
        end
        ap_ST_fsm_state134 : begin
            ap_NS_fsm = ap_ST_fsm_state135;
        end
        ap_ST_fsm_state135 : begin
            ap_NS_fsm = ap_ST_fsm_state136;
        end
        ap_ST_fsm_state136 : begin
            ap_NS_fsm = ap_ST_fsm_state137;
        end
        ap_ST_fsm_state137 : begin
            ap_NS_fsm = ap_ST_fsm_state138;
        end
        ap_ST_fsm_state138 : begin
            ap_NS_fsm = ap_ST_fsm_state139;
        end
        ap_ST_fsm_state139 : begin
            ap_NS_fsm = ap_ST_fsm_state130;
        end
        ap_ST_fsm_state140 : begin
            if (((1'b1 == ap_CS_fsm_state140) & (1'd1 == exitcond4_fu_1278_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state166;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state141;
            end
        end
        ap_ST_fsm_state141 : begin
            if (((1'b1 == ap_CS_fsm_state141) & (1'd1 == exitcond3_fu_1316_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state140;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state142;
            end
        end
        ap_ST_fsm_state142 : begin
            ap_NS_fsm = ap_ST_fsm_state143;
        end
        ap_ST_fsm_state143 : begin
            ap_NS_fsm = ap_ST_fsm_state144;
        end
        ap_ST_fsm_state144 : begin
            ap_NS_fsm = ap_ST_fsm_state145;
        end
        ap_ST_fsm_state145 : begin
            ap_NS_fsm = ap_ST_fsm_state146;
        end
        ap_ST_fsm_state146 : begin
            ap_NS_fsm = ap_ST_fsm_state147;
        end
        ap_ST_fsm_state147 : begin
            ap_NS_fsm = ap_ST_fsm_state148;
        end
        ap_ST_fsm_state148 : begin
            ap_NS_fsm = ap_ST_fsm_state149;
        end
        ap_ST_fsm_state149 : begin
            ap_NS_fsm = ap_ST_fsm_state150;
        end
        ap_ST_fsm_state150 : begin
            ap_NS_fsm = ap_ST_fsm_state151;
        end
        ap_ST_fsm_state151 : begin
            ap_NS_fsm = ap_ST_fsm_state152;
        end
        ap_ST_fsm_state152 : begin
            ap_NS_fsm = ap_ST_fsm_state153;
        end
        ap_ST_fsm_state153 : begin
            ap_NS_fsm = ap_ST_fsm_state154;
        end
        ap_ST_fsm_state154 : begin
            ap_NS_fsm = ap_ST_fsm_state155;
        end
        ap_ST_fsm_state155 : begin
            ap_NS_fsm = ap_ST_fsm_state156;
        end
        ap_ST_fsm_state156 : begin
            ap_NS_fsm = ap_ST_fsm_state157;
        end
        ap_ST_fsm_state157 : begin
            ap_NS_fsm = ap_ST_fsm_state158;
        end
        ap_ST_fsm_state158 : begin
            ap_NS_fsm = ap_ST_fsm_state159;
        end
        ap_ST_fsm_state159 : begin
            ap_NS_fsm = ap_ST_fsm_state160;
        end
        ap_ST_fsm_state160 : begin
            ap_NS_fsm = ap_ST_fsm_state161;
        end
        ap_ST_fsm_state161 : begin
            ap_NS_fsm = ap_ST_fsm_state162;
        end
        ap_ST_fsm_state162 : begin
            ap_NS_fsm = ap_ST_fsm_state163;
        end
        ap_ST_fsm_state163 : begin
            ap_NS_fsm = ap_ST_fsm_state164;
        end
        ap_ST_fsm_state164 : begin
            ap_NS_fsm = ap_ST_fsm_state165;
        end
        ap_ST_fsm_state165 : begin
            ap_NS_fsm = ap_ST_fsm_state141;
        end
        ap_ST_fsm_state166 : begin
            if (((1'b1 == ap_CS_fsm_state166) & (1'd1 == exitcond2_fu_1369_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state182;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state167;
            end
        end
        ap_ST_fsm_state167 : begin
            ap_NS_fsm = ap_ST_fsm_state168;
        end
        ap_ST_fsm_state168 : begin
            ap_NS_fsm = ap_ST_fsm_state169;
        end
        ap_ST_fsm_state169 : begin
            ap_NS_fsm = ap_ST_fsm_state170;
        end
        ap_ST_fsm_state170 : begin
            ap_NS_fsm = ap_ST_fsm_state171;
        end
        ap_ST_fsm_state171 : begin
            ap_NS_fsm = ap_ST_fsm_state172;
        end
        ap_ST_fsm_state172 : begin
            if (((1'b1 == ap_CS_fsm_state172) & (1'd1 == exitcond1_fu_1389_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state166;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state173;
            end
        end
        ap_ST_fsm_state173 : begin
            ap_NS_fsm = ap_ST_fsm_state174;
        end
        ap_ST_fsm_state174 : begin
            ap_NS_fsm = ap_ST_fsm_state175;
        end
        ap_ST_fsm_state175 : begin
            if (((1'b1 == ap_CS_fsm_state175) & (1'd0 == tmp_56_fu_1476_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state181;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state176;
            end
        end
        ap_ST_fsm_state176 : begin
            ap_NS_fsm = ap_ST_fsm_state177;
        end
        ap_ST_fsm_state177 : begin
            ap_NS_fsm = ap_ST_fsm_state178;
        end
        ap_ST_fsm_state178 : begin
            ap_NS_fsm = ap_ST_fsm_state179;
        end
        ap_ST_fsm_state179 : begin
            ap_NS_fsm = ap_ST_fsm_state180;
        end
        ap_ST_fsm_state180 : begin
            ap_NS_fsm = ap_ST_fsm_state181;
        end
        ap_ST_fsm_state181 : begin
            ap_NS_fsm = ap_ST_fsm_state172;
        end
        ap_ST_fsm_state182 : begin
            if (((1'b1 == ap_CS_fsm_state182) & (1'd0 == tmp_26_fu_1502_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state183;
            end
        end
        ap_ST_fsm_state183 : begin
            if (((1'b1 == ap_CS_fsm_state183) & (1'd1 == exitcond_fu_1524_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state182;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state184;
            end
        end
        ap_ST_fsm_state184 : begin
            ap_NS_fsm = ap_ST_fsm_state185;
        end
        ap_ST_fsm_state185 : begin
            ap_NS_fsm = ap_ST_fsm_state186;
        end
        ap_ST_fsm_state186 : begin
            ap_NS_fsm = ap_ST_fsm_state187;
        end
        ap_ST_fsm_state187 : begin
            ap_NS_fsm = ap_ST_fsm_state188;
        end
        ap_ST_fsm_state188 : begin
            ap_NS_fsm = ap_ST_fsm_state189;
        end
        ap_ST_fsm_state189 : begin
            ap_NS_fsm = ap_ST_fsm_state190;
        end
        ap_ST_fsm_state190 : begin
            ap_NS_fsm = ap_ST_fsm_state191;
        end
        ap_ST_fsm_state191 : begin
            ap_NS_fsm = ap_ST_fsm_state192;
        end
        ap_ST_fsm_state192 : begin
            ap_NS_fsm = ap_ST_fsm_state193;
        end
        ap_ST_fsm_state193 : begin
            ap_NS_fsm = ap_ST_fsm_state194;
        end
        ap_ST_fsm_state194 : begin
            ap_NS_fsm = ap_ST_fsm_state195;
        end
        ap_ST_fsm_state195 : begin
            ap_NS_fsm = ap_ST_fsm_state196;
        end
        ap_ST_fsm_state196 : begin
            ap_NS_fsm = ap_ST_fsm_state197;
        end
        ap_ST_fsm_state197 : begin
            ap_NS_fsm = ap_ST_fsm_state198;
        end
        ap_ST_fsm_state198 : begin
            ap_NS_fsm = ap_ST_fsm_state199;
        end
        ap_ST_fsm_state199 : begin
            ap_NS_fsm = ap_ST_fsm_state200;
        end
        ap_ST_fsm_state200 : begin
            ap_NS_fsm = ap_ST_fsm_state201;
        end
        ap_ST_fsm_state201 : begin
            ap_NS_fsm = ap_ST_fsm_state202;
        end
        ap_ST_fsm_state202 : begin
            ap_NS_fsm = ap_ST_fsm_state203;
        end
        ap_ST_fsm_state203 : begin
            ap_NS_fsm = ap_ST_fsm_state204;
        end
        ap_ST_fsm_state204 : begin
            ap_NS_fsm = ap_ST_fsm_state205;
        end
        ap_ST_fsm_state205 : begin
            ap_NS_fsm = ap_ST_fsm_state206;
        end
        ap_ST_fsm_state206 : begin
            ap_NS_fsm = ap_ST_fsm_state207;
        end
        ap_ST_fsm_state207 : begin
            ap_NS_fsm = ap_ST_fsm_state208;
        end
        ap_ST_fsm_state208 : begin
            ap_NS_fsm = ap_ST_fsm_state209;
        end
        ap_ST_fsm_state209 : begin
            ap_NS_fsm = ap_ST_fsm_state210;
        end
        ap_ST_fsm_state210 : begin
            ap_NS_fsm = ap_ST_fsm_state211;
        end
        ap_ST_fsm_state211 : begin
            ap_NS_fsm = ap_ST_fsm_state212;
        end
        ap_ST_fsm_state212 : begin
            ap_NS_fsm = ap_ST_fsm_state213;
        end
        ap_ST_fsm_state213 : begin
            ap_NS_fsm = ap_ST_fsm_state214;
        end
        ap_ST_fsm_state214 : begin
            ap_NS_fsm = ap_ST_fsm_state215;
        end
        ap_ST_fsm_state215 : begin
            ap_NS_fsm = ap_ST_fsm_state216;
        end
        ap_ST_fsm_state216 : begin
            ap_NS_fsm = ap_ST_fsm_state217;
        end
        ap_ST_fsm_state217 : begin
            ap_NS_fsm = ap_ST_fsm_state218;
        end
        ap_ST_fsm_state218 : begin
            ap_NS_fsm = ap_ST_fsm_state219;
        end
        ap_ST_fsm_state219 : begin
            ap_NS_fsm = ap_ST_fsm_state220;
        end
        ap_ST_fsm_state220 : begin
            ap_NS_fsm = ap_ST_fsm_state221;
        end
        ap_ST_fsm_state221 : begin
            ap_NS_fsm = ap_ST_fsm_state222;
        end
        ap_ST_fsm_state222 : begin
            ap_NS_fsm = ap_ST_fsm_state223;
        end
        ap_ST_fsm_state223 : begin
            ap_NS_fsm = ap_ST_fsm_state224;
        end
        ap_ST_fsm_state224 : begin
            ap_NS_fsm = ap_ST_fsm_state225;
        end
        ap_ST_fsm_state225 : begin
            ap_NS_fsm = ap_ST_fsm_state226;
        end
        ap_ST_fsm_state226 : begin
            ap_NS_fsm = ap_ST_fsm_state227;
        end
        ap_ST_fsm_state227 : begin
            ap_NS_fsm = ap_ST_fsm_state228;
        end
        ap_ST_fsm_state228 : begin
            ap_NS_fsm = ap_ST_fsm_state229;
        end
        ap_ST_fsm_state229 : begin
            ap_NS_fsm = ap_ST_fsm_state230;
        end
        ap_ST_fsm_state230 : begin
            ap_NS_fsm = ap_ST_fsm_state231;
        end
        ap_ST_fsm_state231 : begin
            ap_NS_fsm = ap_ST_fsm_state232;
        end
        ap_ST_fsm_state232 : begin
            ap_NS_fsm = ap_ST_fsm_state233;
        end
        ap_ST_fsm_state233 : begin
            ap_NS_fsm = ap_ST_fsm_state234;
        end
        ap_ST_fsm_state234 : begin
            ap_NS_fsm = ap_ST_fsm_state235;
        end
        ap_ST_fsm_state235 : begin
            ap_NS_fsm = ap_ST_fsm_state236;
        end
        ap_ST_fsm_state236 : begin
            ap_NS_fsm = ap_ST_fsm_state237;
        end
        ap_ST_fsm_state237 : begin
            ap_NS_fsm = ap_ST_fsm_state238;
        end
        ap_ST_fsm_state238 : begin
            ap_NS_fsm = ap_ST_fsm_state239;
        end
        ap_ST_fsm_state239 : begin
            ap_NS_fsm = ap_ST_fsm_state240;
        end
        ap_ST_fsm_state240 : begin
            ap_NS_fsm = ap_ST_fsm_state241;
        end
        ap_ST_fsm_state241 : begin
            ap_NS_fsm = ap_ST_fsm_state242;
        end
        ap_ST_fsm_state242 : begin
            ap_NS_fsm = ap_ST_fsm_state243;
        end
        ap_ST_fsm_state243 : begin
            ap_NS_fsm = ap_ST_fsm_state244;
        end
        ap_ST_fsm_state244 : begin
            ap_NS_fsm = ap_ST_fsm_state245;
        end
        ap_ST_fsm_state245 : begin
            ap_NS_fsm = ap_ST_fsm_state246;
        end
        ap_ST_fsm_state246 : begin
            ap_NS_fsm = ap_ST_fsm_state247;
        end
        ap_ST_fsm_state247 : begin
            ap_NS_fsm = ap_ST_fsm_state248;
        end
        ap_ST_fsm_state248 : begin
            ap_NS_fsm = ap_ST_fsm_state249;
        end
        ap_ST_fsm_state249 : begin
            ap_NS_fsm = ap_ST_fsm_state250;
        end
        ap_ST_fsm_state250 : begin
            ap_NS_fsm = ap_ST_fsm_state251;
        end
        ap_ST_fsm_state251 : begin
            ap_NS_fsm = ap_ST_fsm_state252;
        end
        ap_ST_fsm_state252 : begin
            if (((1'b1 == ap_CS_fsm_state252) & (1'd1 == icmp_fu_1550_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state312;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state253;
            end
        end
        ap_ST_fsm_state253 : begin
            if (((1'b1 == ap_CS_fsm_state253) & (grp_generic_sincos_fu_594_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state254;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state253;
            end
        end
        ap_ST_fsm_state254 : begin
            ap_NS_fsm = ap_ST_fsm_state255;
        end
        ap_ST_fsm_state255 : begin
            ap_NS_fsm = ap_ST_fsm_state256;
        end
        ap_ST_fsm_state256 : begin
            ap_NS_fsm = ap_ST_fsm_state257;
        end
        ap_ST_fsm_state257 : begin
            ap_NS_fsm = ap_ST_fsm_state258;
        end
        ap_ST_fsm_state258 : begin
            ap_NS_fsm = ap_ST_fsm_state259;
        end
        ap_ST_fsm_state259 : begin
            ap_NS_fsm = ap_ST_fsm_state260;
        end
        ap_ST_fsm_state260 : begin
            ap_NS_fsm = ap_ST_fsm_state261;
        end
        ap_ST_fsm_state261 : begin
            ap_NS_fsm = ap_ST_fsm_state262;
        end
        ap_ST_fsm_state262 : begin
            ap_NS_fsm = ap_ST_fsm_state263;
        end
        ap_ST_fsm_state263 : begin
            ap_NS_fsm = ap_ST_fsm_state264;
        end
        ap_ST_fsm_state264 : begin
            ap_NS_fsm = ap_ST_fsm_state265;
        end
        ap_ST_fsm_state265 : begin
            ap_NS_fsm = ap_ST_fsm_state266;
        end
        ap_ST_fsm_state266 : begin
            ap_NS_fsm = ap_ST_fsm_state267;
        end
        ap_ST_fsm_state267 : begin
            ap_NS_fsm = ap_ST_fsm_state268;
        end
        ap_ST_fsm_state268 : begin
            ap_NS_fsm = ap_ST_fsm_state269;
        end
        ap_ST_fsm_state269 : begin
            ap_NS_fsm = ap_ST_fsm_state270;
        end
        ap_ST_fsm_state270 : begin
            ap_NS_fsm = ap_ST_fsm_state271;
        end
        ap_ST_fsm_state271 : begin
            ap_NS_fsm = ap_ST_fsm_state272;
        end
        ap_ST_fsm_state272 : begin
            ap_NS_fsm = ap_ST_fsm_state273;
        end
        ap_ST_fsm_state273 : begin
            ap_NS_fsm = ap_ST_fsm_state274;
        end
        ap_ST_fsm_state274 : begin
            ap_NS_fsm = ap_ST_fsm_state275;
        end
        ap_ST_fsm_state275 : begin
            ap_NS_fsm = ap_ST_fsm_state276;
        end
        ap_ST_fsm_state276 : begin
            ap_NS_fsm = ap_ST_fsm_state277;
        end
        ap_ST_fsm_state277 : begin
            ap_NS_fsm = ap_ST_fsm_state278;
        end
        ap_ST_fsm_state278 : begin
            ap_NS_fsm = ap_ST_fsm_state279;
        end
        ap_ST_fsm_state279 : begin
            ap_NS_fsm = ap_ST_fsm_state280;
        end
        ap_ST_fsm_state280 : begin
            ap_NS_fsm = ap_ST_fsm_state281;
        end
        ap_ST_fsm_state281 : begin
            ap_NS_fsm = ap_ST_fsm_state282;
        end
        ap_ST_fsm_state282 : begin
            ap_NS_fsm = ap_ST_fsm_state283;
        end
        ap_ST_fsm_state283 : begin
            ap_NS_fsm = ap_ST_fsm_state284;
        end
        ap_ST_fsm_state284 : begin
            ap_NS_fsm = ap_ST_fsm_state285;
        end
        ap_ST_fsm_state285 : begin
            ap_NS_fsm = ap_ST_fsm_state286;
        end
        ap_ST_fsm_state286 : begin
            ap_NS_fsm = ap_ST_fsm_state287;
        end
        ap_ST_fsm_state287 : begin
            ap_NS_fsm = ap_ST_fsm_state288;
        end
        ap_ST_fsm_state288 : begin
            ap_NS_fsm = ap_ST_fsm_state289;
        end
        ap_ST_fsm_state289 : begin
            ap_NS_fsm = ap_ST_fsm_state290;
        end
        ap_ST_fsm_state290 : begin
            ap_NS_fsm = ap_ST_fsm_state291;
        end
        ap_ST_fsm_state291 : begin
            ap_NS_fsm = ap_ST_fsm_state292;
        end
        ap_ST_fsm_state292 : begin
            ap_NS_fsm = ap_ST_fsm_state293;
        end
        ap_ST_fsm_state293 : begin
            ap_NS_fsm = ap_ST_fsm_state294;
        end
        ap_ST_fsm_state294 : begin
            ap_NS_fsm = ap_ST_fsm_state295;
        end
        ap_ST_fsm_state295 : begin
            ap_NS_fsm = ap_ST_fsm_state296;
        end
        ap_ST_fsm_state296 : begin
            ap_NS_fsm = ap_ST_fsm_state297;
        end
        ap_ST_fsm_state297 : begin
            ap_NS_fsm = ap_ST_fsm_state298;
        end
        ap_ST_fsm_state298 : begin
            ap_NS_fsm = ap_ST_fsm_state299;
        end
        ap_ST_fsm_state299 : begin
            ap_NS_fsm = ap_ST_fsm_state300;
        end
        ap_ST_fsm_state300 : begin
            ap_NS_fsm = ap_ST_fsm_state301;
        end
        ap_ST_fsm_state301 : begin
            ap_NS_fsm = ap_ST_fsm_state302;
        end
        ap_ST_fsm_state302 : begin
            ap_NS_fsm = ap_ST_fsm_state303;
        end
        ap_ST_fsm_state303 : begin
            ap_NS_fsm = ap_ST_fsm_state304;
        end
        ap_ST_fsm_state304 : begin
            ap_NS_fsm = ap_ST_fsm_state305;
        end
        ap_ST_fsm_state305 : begin
            ap_NS_fsm = ap_ST_fsm_state306;
        end
        ap_ST_fsm_state306 : begin
            ap_NS_fsm = ap_ST_fsm_state307;
        end
        ap_ST_fsm_state307 : begin
            ap_NS_fsm = ap_ST_fsm_state308;
        end
        ap_ST_fsm_state308 : begin
            ap_NS_fsm = ap_ST_fsm_state309;
        end
        ap_ST_fsm_state309 : begin
            ap_NS_fsm = ap_ST_fsm_state310;
        end
        ap_ST_fsm_state310 : begin
            ap_NS_fsm = ap_ST_fsm_state311;
        end
        ap_ST_fsm_state311 : begin
            ap_NS_fsm = ap_ST_fsm_state312;
        end
        ap_ST_fsm_state312 : begin
            ap_NS_fsm = ap_ST_fsm_state313;
        end
        ap_ST_fsm_state313 : begin
            ap_NS_fsm = ap_ST_fsm_state314;
        end
        ap_ST_fsm_state314 : begin
            ap_NS_fsm = ap_ST_fsm_state315;
        end
        ap_ST_fsm_state315 : begin
            ap_NS_fsm = ap_ST_fsm_state316;
        end
        ap_ST_fsm_state316 : begin
            ap_NS_fsm = ap_ST_fsm_state317;
        end
        ap_ST_fsm_state317 : begin
            ap_NS_fsm = ap_ST_fsm_state318;
        end
        ap_ST_fsm_state318 : begin
            ap_NS_fsm = ap_ST_fsm_state319;
        end
        ap_ST_fsm_state319 : begin
            ap_NS_fsm = ap_ST_fsm_state320;
        end
        ap_ST_fsm_state320 : begin
            ap_NS_fsm = ap_ST_fsm_state321;
        end
        ap_ST_fsm_state321 : begin
            if (((1'b1 == ap_CS_fsm_state321) & (grp_sin_or_cos_double_s_fu_621_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state322;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state321;
            end
        end
        ap_ST_fsm_state322 : begin
            ap_NS_fsm = ap_ST_fsm_state323;
        end
        ap_ST_fsm_state323 : begin
            ap_NS_fsm = ap_ST_fsm_state324;
        end
        ap_ST_fsm_state324 : begin
            ap_NS_fsm = ap_ST_fsm_state325;
        end
        ap_ST_fsm_state325 : begin
            ap_NS_fsm = ap_ST_fsm_state326;
        end
        ap_ST_fsm_state326 : begin
            ap_NS_fsm = ap_ST_fsm_state327;
        end
        ap_ST_fsm_state327 : begin
            ap_NS_fsm = ap_ST_fsm_state328;
        end
        ap_ST_fsm_state328 : begin
            ap_NS_fsm = ap_ST_fsm_state329;
        end
        ap_ST_fsm_state329 : begin
            ap_NS_fsm = ap_ST_fsm_state330;
        end
        ap_ST_fsm_state330 : begin
            ap_NS_fsm = ap_ST_fsm_state331;
        end
        ap_ST_fsm_state331 : begin
            ap_NS_fsm = ap_ST_fsm_state332;
        end
        ap_ST_fsm_state332 : begin
            ap_NS_fsm = ap_ST_fsm_state333;
        end
        ap_ST_fsm_state333 : begin
            ap_NS_fsm = ap_ST_fsm_state334;
        end
        ap_ST_fsm_state334 : begin
            ap_NS_fsm = ap_ST_fsm_state335;
        end
        ap_ST_fsm_state335 : begin
            ap_NS_fsm = ap_ST_fsm_state336;
        end
        ap_ST_fsm_state336 : begin
            ap_NS_fsm = ap_ST_fsm_state337;
        end
        ap_ST_fsm_state337 : begin
            ap_NS_fsm = ap_ST_fsm_state338;
        end
        ap_ST_fsm_state338 : begin
            ap_NS_fsm = ap_ST_fsm_state339;
        end
        ap_ST_fsm_state339 : begin
            ap_NS_fsm = ap_ST_fsm_state340;
        end
        ap_ST_fsm_state340 : begin
            ap_NS_fsm = ap_ST_fsm_state341;
        end
        ap_ST_fsm_state341 : begin
            ap_NS_fsm = ap_ST_fsm_state342;
        end
        ap_ST_fsm_state342 : begin
            ap_NS_fsm = ap_ST_fsm_state343;
        end
        ap_ST_fsm_state343 : begin
            ap_NS_fsm = ap_ST_fsm_state344;
        end
        ap_ST_fsm_state344 : begin
            ap_NS_fsm = ap_ST_fsm_state345;
        end
        ap_ST_fsm_state345 : begin
            ap_NS_fsm = ap_ST_fsm_state346;
        end
        ap_ST_fsm_state346 : begin
            ap_NS_fsm = ap_ST_fsm_state347;
        end
        ap_ST_fsm_state347 : begin
            ap_NS_fsm = ap_ST_fsm_state348;
        end
        ap_ST_fsm_state348 : begin
            ap_NS_fsm = ap_ST_fsm_state349;
        end
        ap_ST_fsm_state349 : begin
            ap_NS_fsm = ap_ST_fsm_state350;
        end
        ap_ST_fsm_state350 : begin
            ap_NS_fsm = ap_ST_fsm_state351;
        end
        ap_ST_fsm_state351 : begin
            ap_NS_fsm = ap_ST_fsm_state352;
        end
        ap_ST_fsm_state352 : begin
            ap_NS_fsm = ap_ST_fsm_state353;
        end
        ap_ST_fsm_state353 : begin
            ap_NS_fsm = ap_ST_fsm_state354;
        end
        ap_ST_fsm_state354 : begin
            ap_NS_fsm = ap_ST_fsm_state355;
        end
        ap_ST_fsm_state355 : begin
            ap_NS_fsm = ap_ST_fsm_state356;
        end
        ap_ST_fsm_state356 : begin
            ap_NS_fsm = ap_ST_fsm_state357;
        end
        ap_ST_fsm_state357 : begin
            ap_NS_fsm = ap_ST_fsm_state358;
        end
        ap_ST_fsm_state358 : begin
            ap_NS_fsm = ap_ST_fsm_state359;
        end
        ap_ST_fsm_state359 : begin
            ap_NS_fsm = ap_ST_fsm_state360;
        end
        ap_ST_fsm_state360 : begin
            ap_NS_fsm = ap_ST_fsm_state361;
        end
        ap_ST_fsm_state361 : begin
            ap_NS_fsm = ap_ST_fsm_state362;
        end
        ap_ST_fsm_state362 : begin
            ap_NS_fsm = ap_ST_fsm_state363;
        end
        ap_ST_fsm_state363 : begin
            ap_NS_fsm = ap_ST_fsm_state364;
        end
        ap_ST_fsm_state364 : begin
            ap_NS_fsm = ap_ST_fsm_state365;
        end
        ap_ST_fsm_state365 : begin
            ap_NS_fsm = ap_ST_fsm_state366;
        end
        ap_ST_fsm_state366 : begin
            ap_NS_fsm = ap_ST_fsm_state367;
        end
        ap_ST_fsm_state367 : begin
            ap_NS_fsm = ap_ST_fsm_state368;
        end
        ap_ST_fsm_state368 : begin
            ap_NS_fsm = ap_ST_fsm_state369;
        end
        ap_ST_fsm_state369 : begin
            ap_NS_fsm = ap_ST_fsm_state370;
        end
        ap_ST_fsm_state370 : begin
            ap_NS_fsm = ap_ST_fsm_state371;
        end
        ap_ST_fsm_state371 : begin
            ap_NS_fsm = ap_ST_fsm_state372;
        end
        ap_ST_fsm_state372 : begin
            ap_NS_fsm = ap_ST_fsm_state373;
        end
        ap_ST_fsm_state373 : begin
            ap_NS_fsm = ap_ST_fsm_state374;
        end
        ap_ST_fsm_state374 : begin
            ap_NS_fsm = ap_ST_fsm_state375;
        end
        ap_ST_fsm_state375 : begin
            ap_NS_fsm = ap_ST_fsm_state376;
        end
        ap_ST_fsm_state376 : begin
            ap_NS_fsm = ap_ST_fsm_state377;
        end
        ap_ST_fsm_state377 : begin
            ap_NS_fsm = ap_ST_fsm_state378;
        end
        ap_ST_fsm_state378 : begin
            ap_NS_fsm = ap_ST_fsm_state379;
        end
        ap_ST_fsm_state379 : begin
            ap_NS_fsm = ap_ST_fsm_state380;
        end
        ap_ST_fsm_state380 : begin
            ap_NS_fsm = ap_ST_fsm_state381;
        end
        ap_ST_fsm_state381 : begin
            ap_NS_fsm = ap_ST_fsm_state382;
        end
        ap_ST_fsm_state382 : begin
            ap_NS_fsm = ap_ST_fsm_state383;
        end
        ap_ST_fsm_state383 : begin
            ap_NS_fsm = ap_ST_fsm_state384;
        end
        ap_ST_fsm_state384 : begin
            ap_NS_fsm = ap_ST_fsm_state385;
        end
        ap_ST_fsm_state385 : begin
            ap_NS_fsm = ap_ST_fsm_state386;
        end
        ap_ST_fsm_state386 : begin
            ap_NS_fsm = ap_ST_fsm_state387;
        end
        ap_ST_fsm_state387 : begin
            ap_NS_fsm = ap_ST_fsm_state388;
        end
        ap_ST_fsm_state388 : begin
            ap_NS_fsm = ap_ST_fsm_state389;
        end
        ap_ST_fsm_state389 : begin
            ap_NS_fsm = ap_ST_fsm_state390;
        end
        ap_ST_fsm_state390 : begin
            ap_NS_fsm = ap_ST_fsm_state391;
        end
        ap_ST_fsm_state391 : begin
            ap_NS_fsm = ap_ST_fsm_state392;
        end
        ap_ST_fsm_state392 : begin
            ap_NS_fsm = ap_ST_fsm_state393;
        end
        ap_ST_fsm_state393 : begin
            ap_NS_fsm = ap_ST_fsm_state394;
        end
        ap_ST_fsm_state394 : begin
            ap_NS_fsm = ap_ST_fsm_state395;
        end
        ap_ST_fsm_state395 : begin
            ap_NS_fsm = ap_ST_fsm_state183;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign accMax_1_to_int_fu_1204_p1 = accMax_fu_236;

assign accMax_2_fu_1265_p3 = ((tmp_23_fu_1260_p2[0:0] === 1'b1) ? reg_761 : reg_768);

assign accMax_3_to_int_fu_1186_p1 = reg_761;

assign accMax_s_fu_1181_p1 = $signed(reg_757);

assign acc_load_1_to_int_fu_1432_p1 = reg_745;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state103 = ap_CS_fsm[32'd102];

assign ap_CS_fsm_state104 = ap_CS_fsm[32'd103];

assign ap_CS_fsm_state111 = ap_CS_fsm[32'd110];

assign ap_CS_fsm_state112 = ap_CS_fsm[32'd111];

assign ap_CS_fsm_state113 = ap_CS_fsm[32'd112];

assign ap_CS_fsm_state114 = ap_CS_fsm[32'd113];

assign ap_CS_fsm_state115 = ap_CS_fsm[32'd114];

assign ap_CS_fsm_state116 = ap_CS_fsm[32'd115];

assign ap_CS_fsm_state117 = ap_CS_fsm[32'd116];

assign ap_CS_fsm_state118 = ap_CS_fsm[32'd117];

assign ap_CS_fsm_state119 = ap_CS_fsm[32'd118];

assign ap_CS_fsm_state120 = ap_CS_fsm[32'd119];

assign ap_CS_fsm_state121 = ap_CS_fsm[32'd120];

assign ap_CS_fsm_state127 = ap_CS_fsm[32'd126];

assign ap_CS_fsm_state128 = ap_CS_fsm[32'd127];

assign ap_CS_fsm_state129 = ap_CS_fsm[32'd128];

assign ap_CS_fsm_state130 = ap_CS_fsm[32'd129];

assign ap_CS_fsm_state131 = ap_CS_fsm[32'd130];

assign ap_CS_fsm_state132 = ap_CS_fsm[32'd131];

assign ap_CS_fsm_state137 = ap_CS_fsm[32'd136];

assign ap_CS_fsm_state138 = ap_CS_fsm[32'd137];

assign ap_CS_fsm_state139 = ap_CS_fsm[32'd138];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state140 = ap_CS_fsm[32'd139];

assign ap_CS_fsm_state141 = ap_CS_fsm[32'd140];

assign ap_CS_fsm_state142 = ap_CS_fsm[32'd141];

assign ap_CS_fsm_state143 = ap_CS_fsm[32'd142];

assign ap_CS_fsm_state148 = ap_CS_fsm[32'd147];

assign ap_CS_fsm_state149 = ap_CS_fsm[32'd148];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state164 = ap_CS_fsm[32'd163];

assign ap_CS_fsm_state165 = ap_CS_fsm[32'd164];

assign ap_CS_fsm_state166 = ap_CS_fsm[32'd165];

assign ap_CS_fsm_state171 = ap_CS_fsm[32'd170];

assign ap_CS_fsm_state172 = ap_CS_fsm[32'd171];

assign ap_CS_fsm_state173 = ap_CS_fsm[32'd172];

assign ap_CS_fsm_state174 = ap_CS_fsm[32'd173];

assign ap_CS_fsm_state175 = ap_CS_fsm[32'd174];

assign ap_CS_fsm_state180 = ap_CS_fsm[32'd179];

assign ap_CS_fsm_state181 = ap_CS_fsm[32'd180];

assign ap_CS_fsm_state182 = ap_CS_fsm[32'd181];

assign ap_CS_fsm_state183 = ap_CS_fsm[32'd182];

assign ap_CS_fsm_state184 = ap_CS_fsm[32'd183];

assign ap_CS_fsm_state185 = ap_CS_fsm[32'd184];

assign ap_CS_fsm_state186 = ap_CS_fsm[32'd185];

assign ap_CS_fsm_state187 = ap_CS_fsm[32'd186];

assign ap_CS_fsm_state188 = ap_CS_fsm[32'd187];

assign ap_CS_fsm_state189 = ap_CS_fsm[32'd188];

assign ap_CS_fsm_state190 = ap_CS_fsm[32'd189];

assign ap_CS_fsm_state191 = ap_CS_fsm[32'd190];

assign ap_CS_fsm_state192 = ap_CS_fsm[32'd191];

assign ap_CS_fsm_state193 = ap_CS_fsm[32'd192];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state251 = ap_CS_fsm[32'd250];

assign ap_CS_fsm_state252 = ap_CS_fsm[32'd251];

assign ap_CS_fsm_state253 = ap_CS_fsm[32'd252];

assign ap_CS_fsm_state254 = ap_CS_fsm[32'd253];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state312 = ap_CS_fsm[32'd311];

assign ap_CS_fsm_state313 = ap_CS_fsm[32'd312];

assign ap_CS_fsm_state314 = ap_CS_fsm[32'd313];

assign ap_CS_fsm_state317 = ap_CS_fsm[32'd316];

assign ap_CS_fsm_state318 = ap_CS_fsm[32'd317];

assign ap_CS_fsm_state319 = ap_CS_fsm[32'd318];

assign ap_CS_fsm_state320 = ap_CS_fsm[32'd319];

assign ap_CS_fsm_state321 = ap_CS_fsm[32'd320];

assign ap_CS_fsm_state322 = ap_CS_fsm[32'd321];

assign ap_CS_fsm_state323 = ap_CS_fsm[32'd322];

assign ap_CS_fsm_state324 = ap_CS_fsm[32'd323];

assign ap_CS_fsm_state380 = ap_CS_fsm[32'd379];

assign ap_CS_fsm_state381 = ap_CS_fsm[32'd380];

assign ap_CS_fsm_state388 = ap_CS_fsm[32'd387];

assign ap_CS_fsm_state389 = ap_CS_fsm[32'd388];

assign ap_CS_fsm_state390 = ap_CS_fsm[32'd389];

assign ap_CS_fsm_state391 = ap_CS_fsm[32'd390];

assign ap_CS_fsm_state392 = ap_CS_fsm[32'd391];

assign ap_CS_fsm_state393 = ap_CS_fsm[32'd392];

assign ap_CS_fsm_state394 = ap_CS_fsm[32'd393];

assign ap_CS_fsm_state395 = ap_CS_fsm[32'd394];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state90 = ap_CS_fsm[32'd89];

assign ap_CS_fsm_state91 = ap_CS_fsm[32'd90];

assign ap_CS_fsm_state92 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_state93 = ap_CS_fsm[32'd92];

assign ap_CS_fsm_state94 = ap_CS_fsm[32'd93];

assign ap_CS_fsm_state95 = ap_CS_fsm[32'd94];

assign ap_CS_fsm_state96 = ap_CS_fsm[32'd95];

always @ (*) begin
    ap_block_state88_on_subcall_done = ((1'b0 == grp_sin_or_cos_double_s_fu_621_ap_done) | (1'b0 == grp_sin_or_cos_double_s_fu_640_ap_done));
end

assign c5_cast_fu_1364_p1 = c5_reg_528;

assign c7_cast9_fu_1520_p1 = c7_reg_573;

assign c_1_fu_790_p2 = (c_reg_405 + 6'd1);

assign c_2_fu_1143_p2 = (c1_reg_451 + 6'd1);

assign c_3_fu_1284_p2 = (c3_reg_484 + 6'd1);

assign c_4_fu_1375_p2 = (c5_reg_528 + 8'd1);

assign c_5_fu_1530_p2 = (c7_reg_573 + 6'd1);

assign c_cast_fu_779_p1 = c_reg_405;

assign dNonZero_d0 = tmp_30_reg_2280;

assign exitcond1_fu_1389_p2 = ((r6_reg_540 == 8'd200) ? 1'b1 : 1'b0);

assign exitcond2_fu_1369_p2 = ((c5_reg_528 == 8'd180) ? 1'b1 : 1'b0);

assign exitcond3_fu_1316_p2 = ((r4_reg_495 == 6'd50) ? 1'b1 : 1'b0);

assign exitcond4_fu_1278_p2 = ((c3_reg_484 == 6'd50) ? 1'b1 : 1'b0);

assign exitcond5_fu_1153_p2 = ((r2_reg_462 == 6'd50) ? 1'b1 : 1'b0);

assign exitcond6_fu_1137_p2 = ((c1_reg_451 == 6'd50) ? 1'b1 : 1'b0);

assign exitcond7_fu_848_p2 = ((fi_reg_439 == 8'd180) ? 1'b1 : 1'b0);

assign exitcond8_fu_815_p2 = ((r_reg_417 == 6'd50) ? 1'b1 : 1'b0);

assign exitcond9_fu_784_p2 = ((c_reg_405 == 6'd50) ? 1'b1 : 1'b0);

assign exitcond_fu_1524_p2 = ((c7_reg_573 == 6'd50) ? 1'b1 : 1'b0);

assign fiNonZero_d0 = reg_761;

assign fi_1_fu_854_p2 = (fi_reg_439 + 8'd1);

assign fi_cast_fu_843_p1 = fi_reg_439;

assign grp_fu_1884_p0 = 17'd180;

assign grp_fu_1884_p2 = grp_fu_1884_p20;

assign grp_fu_1884_p20 = fi_reg_439;

assign grp_fu_1892_p0 = 13'd50;

assign grp_fu_1892_p1 = p_Val2_54_reg_2422[12:0];

assign grp_fu_1892_p2 = grp_fu_1892_p20;

assign grp_fu_1892_p20 = c7_reg_573;

assign grp_generic_sincos_fu_594_ap_start = ap_reg_grp_generic_sincos_fu_594_ap_start;

assign grp_sin_or_cos_double_s_fu_621_ap_start = ap_reg_grp_sin_or_cos_double_s_fu_621_ap_start;

assign grp_sin_or_cos_double_s_fu_621_do_cos = 1'd1;

assign grp_sin_or_cos_double_s_fu_640_ap_start = ap_reg_grp_sin_or_cos_double_s_fu_640_ap_start;

assign grp_sin_or_cos_double_s_fu_640_do_cos = 1'd0;

assign icmp1_fu_1857_p2 = (($signed(tmp_75_reg_2428) > $signed(63'd0)) ? 1'b1 : 1'b0);

assign icmp_fu_1550_p2 = ((tmp_68_fu_1540_p4 == 10'd0) ? 1'b1 : 1'b0);

assign index_V_1_fu_1604_p4 = {{t_V_6_fu_1578_p1[57:52]}};

assign index_V_fu_885_p4 = {{t_V_3_fu_860_p1[27:23]}};

assign isNeg_1_fu_1740_p3 = sh_assign_2_fu_1734_p2[32'd11];

assign isNeg_fu_1020_p3 = sh_assign_fu_1014_p2[32'd8];

assign k_1_fu_1508_p2 = (k_reg_562 + 63'd1);

assign k_cast_fu_1498_p1 = k_reg_562;

assign loc_V_10_fu_1726_p1 = p_Val2_49_fu_1704_p1[51:0];

assign loc_V_4_fu_924_p1 = p_Val2_s_fu_919_p2[22:0];

assign loc_V_5_fu_996_p4 = {{p_Val2_39_fu_984_p1[30:23]}};

assign loc_V_6_fu_1006_p1 = p_Val2_39_fu_984_p1[22:0];

assign loc_V_7_fu_1582_p4 = {{t_V_6_fu_1578_p1[62:52]}};

assign loc_V_8_fu_1642_p1 = p_Val2_47_fu_1637_p2[51:0];

assign loc_V_9_fu_1716_p4 = {{p_Val2_49_fu_1704_p1[62:52]}};

assign loc_V_fu_863_p4 = {{t_V_3_fu_860_p1[30:23]}};

assign mask_table1_address0 = tmp_120_i_i_i_fu_895_p1;

assign mask_table4_address0 = tmp_126_i_i_i_reg_2372;

assign next_mul2_fu_1165_p2 = (12'd50 + phi_mul1_reg_473);

assign next_mul4_fu_1328_p2 = (phi_mul3_reg_506 + 12'd50);

assign next_mul6_fu_1344_p2 = (phi_mul5_reg_517 + 14'd180);

assign next_mul8_fu_1401_p2 = (16'd180 + phi_mul7_reg_551);

assign next_mul_fu_805_p2 = (phi_mul_reg_428 + 12'd50);

assign nonZeroCount_1_fu_1487_p2 = (64'd1 + nonZeroCount_fu_240);

assign notlhs1_fu_1234_p2 = ((tmp_11_fu_1208_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs2_fu_1450_p2 = ((tmp_50_fu_1436_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs3_fu_1426_p2 = ((tmp_51_fu_1417_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs_fu_1222_p2 = ((tmp_fu_1190_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notrhs1_fu_1240_p2 = ((tmp_45_fu_1218_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs2_fu_1456_p2 = ((tmp_66_fu_1446_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs3_fu_1305_p2 = ((tmp_42_fu_1301_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs_fu_1228_p2 = ((tmp_44_fu_1200_p1 == 23'd0) ? 1'b1 : 1'b0);

assign one_half_1_cast_fu_1634_p1 = one_half_1_reg_2387;

assign one_half_cast_fu_916_p1 = one_half_reg_2030;

assign one_half_table2_address0 = tmp_120_i_i_i_fu_895_p1;

assign one_half_table6_address0 = tmp_126_i_i_i_fu_1614_p1;

assign or_cond_fu_1867_p2 = (icmp1_fu_1857_p2 & tmp_43_fu_1862_p2);

assign out_r_address0 = tmp_80_cast_fu_1880_p1;

assign out_r_d0 = 16'd1;

assign p_Result_47_fu_1619_p3 = t_V_6_reg_2355[32'd63];

assign p_Result_58_fu_908_p3 = {{p_Result_s_fu_901_p3}, {31'd0}};

assign p_Result_59_fu_949_p3 = {{tmp_27_fu_939_p4}, {xs_sig_V_fu_933_p2}};

assign p_Result_61_fu_1626_p3 = {{p_Result_47_fu_1619_p3}, {63'd0}};

assign p_Result_62_fu_1668_p3 = {{tmp_57_fu_1658_p4}, {xs_sig_V_1_fu_1652_p2}};

assign p_Result_s_fu_901_p3 = t_V_3_reg_1998[32'd31];

assign p_Val2_39_fu_984_p1 = x_assign_2_fu_978_p3;

assign p_Val2_41_fu_1536_p1 = reg_724;

assign p_Val2_47_fu_1637_p2 = (one_half_1_cast_fu_1634_p1 + t_V_6_reg_2355);

assign p_Val2_49_fu_1704_p1 = x_assign_5_fu_1697_p3;

assign p_Val2_51_fu_1824_p3 = ((isNeg_1_reg_2407[0:0] === 1'b1) ? tmp_58_fu_1810_p1 : tmp_59_fu_1814_p4);

assign p_Val2_54_fu_1840_p3 = ((p_Result_63_reg_2397[0:0] === 1'b1) ? tmp_149_i_i_i_fu_1834_p2 : tmp_146_i_i_i_fu_1831_p1);

assign p_Val2_s_fu_919_p2 = (t_V_3_reg_1998 + one_half_cast_fu_916_p1);

assign r6_cast_fu_1385_p1 = r6_reg_540;

assign r_1_fu_1159_p2 = (r2_reg_462 + 6'd1);

assign r_2_fu_1322_p2 = (r4_reg_495 + 6'd1);

assign r_3_fu_821_p2 = (r_reg_417 + 6'd1);

assign r_4_fu_1395_p2 = (r6_reg_540 + 8'd1);

assign r_cast_fu_811_p1 = r_reg_417;

assign sel_tmp1_fu_968_p2 = (tmp_i_i_i_62_reg_2004 ^ 1'd1);

assign sel_tmp2_fu_973_p2 = (tmp_119_i_i_i_reg_2010 & sel_tmp1_fu_968_p2);

assign sel_tmp4_fu_1683_p1 = sel_tmp4_v_fu_1676_p3;

assign sel_tmp4_v_fu_1676_p3 = ((tmp_i_i_i3_reg_2361[0:0] === 1'b1) ? p_Result_61_fu_1626_p3 : p_Result_62_fu_1668_p3);

assign sel_tmp5_fu_1687_p2 = (tmp_i_i_i3_reg_2361 ^ 1'd1);

assign sel_tmp6_fu_1692_p2 = (tmp_125_i_i_i_reg_2367 & sel_tmp5_fu_1687_p2);

assign sel_tmp_fu_964_p1 = sel_tmp_v_fu_957_p3;

assign sel_tmp_v_fu_957_p3 = ((tmp_i_i_i_62_reg_2004[0:0] === 1'b1) ? p_Result_58_fu_908_p3 : p_Result_59_fu_949_p3);

assign sh_assign_1_cast_cas_fu_1062_p1 = $signed(sh_assign_1_reg_2055);

assign sh_assign_1_cast_fu_1059_p1 = $signed(sh_assign_1_reg_2055);

assign sh_assign_1_fu_1038_p3 = ((isNeg_fu_1020_p3[0:0] === 1'b1) ? tmp_132_i_i_i_cast_fu_1034_p1 : sh_assign_fu_1014_p2);

assign sh_assign_2_fu_1734_p2 = ($signed(12'd3073) + $signed(tmp_i_i_i_i1_cast8_fu_1730_p1));

assign sh_assign_3_cast_fu_1779_p1 = $signed(sh_assign_3_reg_2412);

assign sh_assign_3_fu_1758_p3 = ((isNeg_1_fu_1740_p3[0:0] === 1'b1) ? tmp_141_i_i_i_cast_fu_1754_p1 : sh_assign_2_fu_1734_p2);

assign sh_assign_fu_1014_p2 = ($signed(9'd385) + $signed(tmp_i_i_i_i_cast_fu_1010_p1));

assign t_V_3_fu_860_p1 = x_assign_1_reg_1992;

assign t_V_6_fu_1578_p1 = reg_739;

assign threshold_to_int_fu_1298_p1 = threshold;

assign tmp_119_i_i_i_fu_879_p2 = ((loc_V_fu_863_p4 > 8'd150) ? 1'b1 : 1'b0);

assign tmp_11_fu_1208_p4 = {{accMax_1_to_int_fu_1204_p1[30:23]}};

assign tmp_120_i_i_i_fu_895_p1 = index_V_fu_885_p4;

assign tmp_122_i_i_i_fu_928_p2 = (mask_reg_2025 ^ 23'd8388607);

assign tmp_125_i_i_i_fu_1598_p2 = ((loc_V_7_fu_1582_p4 > 11'd1075) ? 1'b1 : 1'b0);

assign tmp_126_i_i_i_fu_1614_p1 = index_V_1_fu_1604_p4;

assign tmp_128_i_i_i_fu_1646_p2 = (mask_table4_q0 ^ 52'd4503599627370495);

assign tmp_131_i_i_i_cast1_fu_1055_p1 = tmp_131_i_i_i_fu_1046_p4;

assign tmp_131_i_i_i_fu_1046_p4 = {{{{1'd1}, {loc_V_6_reg_2045}}}, {1'd0}};

assign tmp_132_i_i_i_cast_fu_1034_p1 = $signed(tmp_132_i_i_i_fu_1028_p2);

assign tmp_132_i_i_i_fu_1028_p2 = (8'd127 - loc_V_5_fu_996_p4);

assign tmp_133_i_i_i_fu_1065_p1 = $unsigned(sh_assign_1_cast_fu_1059_p1);

assign tmp_134_i_i_i_fu_1069_p2 = tmp_131_i_i_i_fu_1046_p4 >> sh_assign_1_cast_cas_fu_1062_p1;

assign tmp_135_i_i_i_fu_1075_p2 = tmp_131_i_i_i_cast1_fu_1055_p1 << tmp_133_i_i_i_fu_1065_p1;

assign tmp_141_i_i_i_cast_fu_1754_p1 = $signed(tmp_141_i_i_i_fu_1748_p2);

assign tmp_141_i_i_i_fu_1748_p2 = (11'd1023 - loc_V_9_fu_1716_p4);

assign tmp_142_i_i_i_cast_fu_1786_p1 = $unsigned(sh_assign_3_cast_fu_1779_p1);

assign tmp_142_i_i_i_fu_1782_p1 = $unsigned(sh_assign_3_cast_fu_1779_p1);

assign tmp_143_i_i_i_fu_1790_p2 = tmp_i_i_i2_70_fu_1766_p4 >> tmp_142_i_i_i_cast_fu_1786_p1;

assign tmp_144_i_i_i_fu_1796_p2 = tmp_i_i_i2_cast_fu_1775_p1 << tmp_142_i_i_i_fu_1782_p1;

assign tmp_146_i_i_i_fu_1831_p1 = p_Val2_51_reg_2417;

assign tmp_149_i_i_i_fu_1834_p2 = (64'd0 - tmp_146_i_i_i_fu_1831_p1);

assign tmp_16_fu_1171_p2 = (tmp_3_cast_reg_2089 + phi_mul1_reg_473);

assign tmp_17_fu_1246_p2 = (notrhs_reg_2122 | notlhs_reg_2117);

assign tmp_18_cast_fu_1381_p1 = c5_reg_528;

assign tmp_18_fu_1250_p2 = (notrhs1_reg_2132 | notlhs1_reg_2127);

assign tmp_1_cast_fu_801_p1 = c_reg_405;

assign tmp_20_fu_1254_p2 = (tmp_17_fu_1246_p2 & tmp_18_fu_1250_p2);

assign tmp_23_fu_1260_p2 = (tmp_20_fu_1254_p2 & tmp_21_reg_2137);

assign tmp_26_fu_1502_p2 = (($signed(k_cast_fu_1498_p1) < $signed(nonZeroCount_fu_240)) ? 1'b1 : 1'b0);

assign tmp_27_fu_939_p4 = {{p_Val2_s_fu_919_p2[31:23]}};

assign tmp_28_fu_1089_p1 = tmp_60_fu_1081_p3;

assign tmp_29_fu_1093_p4 = {{tmp_135_i_i_i_fu_1075_p2[55:24]}};

assign tmp_31_fu_1103_p3 = ((isNeg_reg_2050[0:0] === 1'b1) ? tmp_28_fu_1089_p1 : tmp_29_fu_1093_p4);

assign tmp_35_fu_1574_p1 = tmp_39_neg_reg_2345;

assign tmp_39_neg_fu_1568_p2 = (tmp_39_to_int_fu_1564_p1 ^ 64'd9223372036854775808);

assign tmp_39_to_int_fu_1564_p1 = p_i_i_reg_585;

assign tmp_3_cast_fu_1149_p1 = c1_reg_451;

assign tmp_42_fu_1301_p1 = threshold_to_int_fu_1298_p1[22:0];

assign tmp_43_fu_1862_p2 = (($signed(p_Val2_54_reg_2422) < $signed(64'd50)) ? 1'b1 : 1'b0);

assign tmp_44_fu_1200_p1 = accMax_3_to_int_fu_1186_p1[22:0];

assign tmp_45_fu_1218_p1 = accMax_1_to_int_fu_1204_p1[22:0];

assign tmp_46_fu_1334_p2 = (tmp_8_cast_reg_2155 + phi_mul3_reg_506);

assign tmp_47_fu_1350_p2 = (tmp_8_cast9_reg_2150 + phi_mul5_reg_517);

assign tmp_48_fu_1355_p1 = $signed(reg_757);

assign tmp_49_fu_1407_p2 = (tmp_18_cast_reg_2228 + phi_mul7_reg_551);

assign tmp_50_fu_1436_p4 = {{acc_load_1_to_int_fu_1432_p1[30:23]}};

assign tmp_51_fu_1417_p4 = {{threshold_to_int_reg_2167[30:23]}};

assign tmp_52_fu_1462_p2 = (notrhs2_reg_2266 | notlhs2_reg_2261);

assign tmp_53_fu_1466_p2 = (notrhs3_reg_2172 | notlhs3_reg_2256);

assign tmp_54_fu_1470_p2 = (tmp_52_fu_1462_p2 & tmp_53_fu_1466_p2);

assign tmp_56_fu_1476_p2 = (tmp_54_fu_1470_p2 & tmp_55_reg_2271);

assign tmp_57_fu_1658_p4 = {{p_Val2_47_fu_1637_p2[63:52]}};

assign tmp_58_fu_1810_p1 = tmp_74_fu_1802_p3;

assign tmp_59_fu_1814_p4 = {{tmp_144_i_i_i_fu_1796_p2[115:53]}};

assign tmp_60_cast_fu_832_p1 = tmp_s_fu_827_p2;

assign tmp_60_fu_1081_p3 = tmp_134_i_i_i_fu_1069_p2[32'd24];

assign tmp_61_fu_1110_p1 = tmp_31_fu_1103_p3[16:0];

assign tmp_62_cast_fu_1176_p1 = tmp_16_fu_1171_p2;

assign tmp_62_fu_1118_p2 = (17'd0 - tmp_61_reg_2061);

assign tmp_63_fu_1114_p1 = tmp_31_fu_1103_p3[16:0];

assign tmp_64_fu_1123_p3 = ((p_Result_60_reg_2040[0:0] === 1'b1) ? tmp_62_fu_1118_p2 : tmp_63_reg_2066);

assign tmp_65_fu_1514_p1 = k_reg_562[31:0];

assign tmp_66_fu_1446_p1 = acc_load_1_to_int_fu_1432_p1[22:0];

assign tmp_67_fu_1481_p1 = nonZeroCount_fu_240[31:0];

assign tmp_68_cast_fu_1133_p1 = $unsigned(grp_fu_1884_p3);

assign tmp_68_fu_1540_p4 = {{p_Val2_41_fu_1536_p1[62:53]}};

assign tmp_6_fu_837_p2 = ((in_r_q0 == 16'd1) ? 1'b1 : 1'b0);

assign tmp_70_cast_fu_1339_p1 = tmp_46_fu_1334_p2;

assign tmp_72_cast_fu_1360_p1 = tmp_47_reg_2200;

assign tmp_74_cast_fu_1412_p1 = tmp_49_fu_1407_p2;

assign tmp_74_fu_1802_p3 = tmp_143_i_i_i_fu_1790_p2[32'd53];

assign tmp_80_cast_fu_1880_p1 = $unsigned(grp_fu_1892_p3);

assign tmp_8_cast9_fu_1290_p1 = c3_reg_484;

assign tmp_8_cast_fu_1294_p1 = c3_reg_484;

assign tmp_fu_1190_p4 = {{accMax_3_to_int_fu_1186_p1[30:23]}};

assign tmp_i_i_i2_70_fu_1766_p4 = {{{{1'd1}, {loc_V_10_reg_2402}}}, {1'd0}};

assign tmp_i_i_i2_cast_fu_1775_p1 = tmp_i_i_i2_70_fu_1766_p4;

assign tmp_i_i_i3_fu_1592_p2 = ((loc_V_7_fu_1582_p4 < 11'd1022) ? 1'b1 : 1'b0);

assign tmp_i_i_i_62_fu_873_p2 = ((loc_V_fu_863_p4 < 8'd126) ? 1'b1 : 1'b0);

assign tmp_i_i_i_i1_cast8_fu_1730_p1 = loc_V_9_fu_1716_p4;

assign tmp_i_i_i_i_cast_fu_1010_p1 = loc_V_5_fu_996_p4;

assign tmp_s_fu_827_p2 = (tmp_1_cast_reg_1927 + phi_mul_reg_428);

assign x_assign_2_fu_978_p3 = ((sel_tmp2_fu_973_p2[0:0] === 1'b1) ? x_assign_1_reg_1992 : sel_tmp_reg_2035);

assign x_assign_5_fu_1697_p3 = ((sel_tmp6_fu_1692_p2[0:0] === 1'b1) ? reg_739 : sel_tmp4_reg_2392);

assign xs_sig_V_1_fu_1652_p2 = (loc_V_8_fu_1642_p1 & tmp_128_i_i_i_fu_1646_p2);

assign xs_sig_V_fu_933_p2 = (loc_V_4_fu_924_p1 & tmp_122_i_i_i_fu_928_p2);

always @ (posedge ap_clk) begin
    tmp_1_cast_reg_1927[11:6] <= 6'b000000;
    r_cast_reg_1937[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_3_cast_reg_2089[11:6] <= 6'b000000;
    tmp_8_cast9_reg_2150[13:6] <= 8'b00000000;
    tmp_8_cast_reg_2155[11:6] <= 6'b000000;
    tmp_18_cast_reg_2228[15:8] <= 8'b00000000;
    r6_cast_reg_2233[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    c7_cast9_reg_2303[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_126_i_i_i_reg_2372[31:6] <= 26'b00000000000000000000000000;
end

endmodule //houghTransform

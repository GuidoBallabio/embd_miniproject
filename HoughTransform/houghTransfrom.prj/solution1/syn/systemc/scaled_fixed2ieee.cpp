// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "scaled_fixed2ieee.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic scaled_fixed2ieee::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic scaled_fixed2ieee::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<10> scaled_fixed2ieee::ap_ST_fsm_state1 = "1";
const sc_lv<10> scaled_fixed2ieee::ap_ST_fsm_state2 = "10";
const sc_lv<10> scaled_fixed2ieee::ap_ST_fsm_state3 = "100";
const sc_lv<10> scaled_fixed2ieee::ap_ST_fsm_state4 = "1000";
const sc_lv<10> scaled_fixed2ieee::ap_ST_fsm_state5 = "10000";
const sc_lv<10> scaled_fixed2ieee::ap_ST_fsm_state6 = "100000";
const sc_lv<10> scaled_fixed2ieee::ap_ST_fsm_state7 = "1000000";
const sc_lv<10> scaled_fixed2ieee::ap_ST_fsm_state8 = "10000000";
const sc_lv<10> scaled_fixed2ieee::ap_ST_fsm_state9 = "100000000";
const sc_lv<10> scaled_fixed2ieee::ap_ST_fsm_state10 = "1000000000";
const sc_lv<32> scaled_fixed2ieee::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> scaled_fixed2ieee::ap_const_lv32_1 = "1";
const sc_lv<1> scaled_fixed2ieee::ap_const_lv1_0 = "0";
const sc_lv<1> scaled_fixed2ieee::ap_const_lv1_1 = "1";
const sc_lv<32> scaled_fixed2ieee::ap_const_lv32_2 = "10";
const sc_lv<32> scaled_fixed2ieee::ap_const_lv32_3 = "11";
const sc_lv<32> scaled_fixed2ieee::ap_const_lv32_4 = "100";
const sc_lv<32> scaled_fixed2ieee::ap_const_lv32_5 = "101";
const sc_lv<32> scaled_fixed2ieee::ap_const_lv32_6 = "110";
const sc_lv<32> scaled_fixed2ieee::ap_const_lv32_7 = "111";
const sc_lv<32> scaled_fixed2ieee::ap_const_lv32_8 = "1000";
const sc_lv<2> scaled_fixed2ieee::ap_const_lv2_0 = "00";
const sc_lv<3> scaled_fixed2ieee::ap_const_lv3_0 = "000";
const sc_lv<2> scaled_fixed2ieee::ap_const_lv2_3 = "11";
const sc_lv<2> scaled_fixed2ieee::ap_const_lv2_1 = "1";
const sc_lv<4> scaled_fixed2ieee::ap_const_lv4_0 = "0000";
const sc_lv<6> scaled_fixed2ieee::ap_const_lv6_3E = "111110";
const sc_lv<6> scaled_fixed2ieee::ap_const_lv6_2F = "101111";
const sc_lv<32> scaled_fixed2ieee::ap_const_lv32_10 = "10000";
const sc_lv<32> scaled_fixed2ieee::ap_const_lv32_1F = "11111";
const sc_lv<32> scaled_fixed2ieee::ap_const_lv32_3E = "111110";
const sc_lv<63> scaled_fixed2ieee::ap_const_lv63_7FFFFFFFFFFFFFFF = "111111111111111111111111111111111111111111111111111111111111111";
const sc_lv<32> scaled_fixed2ieee::ap_const_lv32_F = "1111";
const sc_lv<3> scaled_fixed2ieee::ap_const_lv3_4 = "100";
const sc_lv<3> scaled_fixed2ieee::ap_const_lv3_1 = "1";
const sc_lv<2> scaled_fixed2ieee::ap_const_lv2_2 = "10";
const sc_lv<12> scaled_fixed2ieee::ap_const_lv12_3FF = "1111111111";
const sc_lv<63> scaled_fixed2ieee::ap_const_lv63_0 = "000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> scaled_fixed2ieee::ap_const_lv32_A = "1010";
const sc_lv<32> scaled_fixed2ieee::ap_const_lv32_3D = "111101";
const sc_lv<32> scaled_fixed2ieee::ap_const_lv32_9 = "1001";
const sc_lv<52> scaled_fixed2ieee::ap_const_lv52_0 = "0000000000000000000000000000000000000000000000000000";
const sc_lv<11> scaled_fixed2ieee::ap_const_lv11_0 = "00000000000";
const sc_lv<64> scaled_fixed2ieee::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const bool scaled_fixed2ieee::ap_const_boolean_1 = true;

scaled_fixed2ieee::scaled_fixed2ieee(sc_module_name name) : sc_module(name), mVcdFile(0) {
    houghTransform_mubkb_U0 = new houghTransform_mubkb<1,1,32,32,32,32,2,32>("houghTransform_mubkb_U0");
    houghTransform_mubkb_U0->din1(out_bits_2_V_7_reg_132);
    houghTransform_mubkb_U0->din2(out_bits_1_V_s_reg_120);
    houghTransform_mubkb_U0->din3(out_bits_2_V_s_reg_108);
    houghTransform_mubkb_U0->din4(p_Result_29_reg_821);
    houghTransform_mubkb_U0->din5(p_Val2_31_fu_508_p5);
    houghTransform_mubkb_U0->dout(p_Val2_31_fu_508_p6);
    houghTransform_mubkb_U1 = new houghTransform_mubkb<1,1,32,32,32,32,2,32>("houghTransform_mubkb_U1");
    houghTransform_mubkb_U1->din1(c_3_4_reg_180);
    houghTransform_mubkb_U1->din2(c_3_1_reg_168);
    houghTransform_mubkb_U1->din3(c_2_s_reg_156);
    houghTransform_mubkb_U1->din4(c_3_s_reg_192);
    houghTransform_mubkb_U1->din5(sh_assign_fu_633_p5);
    houghTransform_mubkb_U1->dout(sh_assign_fu_633_p6);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_Hi_assign_fu_288_p2);
    sensitive << ( tmp_fu_280_p3 );

    SC_METHOD(thread_Lo_assign_fu_294_p2);
    sensitive << ( tmp_fu_280_p3 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( result_write_assign_fu_774_p1 );
    sensitive << ( ap_return_preg );

    SC_METHOD(thread_c_3_2_fu_575_p3);
    sensitive << ( c_3_1_reg_168 );
    sensitive << ( sel_tmp4_fu_543_p2 );
    sensitive << ( c_3_8_fu_531_p3 );

    SC_METHOD(thread_c_3_3_fu_583_p3);
    sensitive << ( c_3_1_reg_168 );
    sensitive << ( sel_tmp5_fu_548_p2 );
    sensitive << ( c_3_2_fu_575_p3 );

    SC_METHOD(thread_c_3_5_fu_591_p3);
    sensitive << ( c_3_4_reg_180 );
    sensitive << ( sel_tmp5_fu_548_p2 );
    sensitive << ( c_3_8_fu_531_p3 );

    SC_METHOD(thread_c_3_6_fu_607_p3);
    sensitive << ( c_3_s_reg_192 );
    sensitive << ( or_cond_fu_553_p2 );
    sensitive << ( newSel2_fu_599_p3 );

    SC_METHOD(thread_c_3_8_fu_531_p3);
    sensitive << ( p_Result_30_reg_866 );

    SC_METHOD(thread_c_3_fu_567_p3);
    sensitive << ( c_2_s_reg_156 );
    sensitive << ( or_cond_fu_553_p2 );
    sensitive << ( newSel_fu_559_p3 );

    SC_METHOD(thread_exitcond1_fu_268_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_144 );

    SC_METHOD(thread_exitcond_fu_492_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( i1_reg_204 );

    SC_METHOD(thread_i_1_fu_274_p2);
    sensitive << ( i_reg_144 );

    SC_METHOD(thread_i_2_fu_498_p2);
    sensitive << ( i1_reg_204 );

    SC_METHOD(thread_i_3_fu_623_p2);
    sensitive << ( i2_reg_237 );

    SC_METHOD(thread_in_shift_V_fu_689_p3);
    sensitive << ( isNeg_reg_906 );
    sensitive << ( tmp_5_fu_683_p2 );
    sensitive << ( tmp_4_fu_677_p2 );

    SC_METHOD(thread_isNeg_fu_647_p3);
    sensitive << ( sh_assign_fu_633_p6 );

    SC_METHOD(thread_newSel2_fu_599_p3);
    sensitive << ( c_3_s_reg_192 );
    sensitive << ( sel_tmp3_fu_538_p2 );
    sensitive << ( c_3_8_fu_531_p3 );

    SC_METHOD(thread_newSel_fu_559_p3);
    sensitive << ( c_2_s_reg_156 );
    sensitive << ( sel_tmp3_fu_538_p2 );
    sensitive << ( c_3_8_fu_531_p3 );

    SC_METHOD(thread_newexp_fu_718_p2);
    sensitive << ( shift_1_reg_248 );
    sensitive << ( tmp_51_cast_fu_715_p1 );

    SC_METHOD(thread_or_cond_59_fu_732_p2);
    sensitive << ( tmp_8_reg_936 );
    sensitive << ( tmp_40_fu_724_p3 );

    SC_METHOD(thread_or_cond_fu_553_p2);
    sensitive << ( sel_tmp5_fu_548_p2 );
    sensitive << ( sel_tmp4_fu_543_p2 );

    SC_METHOD(thread_out_bits_2_V_1_fu_460_p3);
    sensitive << ( out_bits_2_V_s_reg_108 );
    sensitive << ( sel_tmp_fu_400_p2 );
    sensitive << ( out_bits_2_V_4_fu_452_p3 );

    SC_METHOD(thread_out_bits_2_V_4_fu_452_p3);
    sensitive << ( out_bits_2_V_s_reg_108 );
    sensitive << ( sel_tmp9_fu_414_p2 );
    sensitive << ( p_Result_28_fu_440_p5 );

    SC_METHOD(thread_out_bits_2_V_5_fu_468_p3);
    sensitive << ( out_bits_1_V_s_reg_120 );
    sensitive << ( sel_tmp9_fu_414_p2 );
    sensitive << ( p_Result_28_fu_440_p5 );

    SC_METHOD(thread_out_bits_2_V_6_fu_476_p3);
    sensitive << ( out_bits_1_V_s_reg_120 );
    sensitive << ( sel_tmp_fu_400_p2 );
    sensitive << ( out_bits_2_V_5_fu_468_p3 );

    SC_METHOD(thread_out_bits_2_V_8_fu_484_p3);
    sensitive << ( out_bits_2_V_7_reg_132 );
    sensitive << ( sel_tmp_fu_400_p2 );
    sensitive << ( p_Result_28_fu_440_p5 );

    SC_METHOD(thread_out_bits_2_V_9_fu_420_p3);
    sensitive << ( out_bits_1_V_s_reg_120 );
    sensitive << ( sel_tmp9_fu_414_p2 );
    sensitive << ( out_bits_2_V_fu_406_p3 );

    SC_METHOD(thread_out_bits_2_V_fu_406_p3);
    sensitive << ( out_bits_2_V_s_reg_108 );
    sensitive << ( out_bits_2_V_7_reg_132 );
    sensitive << ( sel_tmp_fu_400_p2 );

    SC_METHOD(thread_out_exp_V_fu_758_p3);
    sensitive << ( or_cond_59_reg_941 );
    sensitive << ( tmp_41_reg_947 );

    SC_METHOD(thread_p_Result_28_fu_440_p5);
    sensitive << ( out_bits_2_V_9_fu_420_p3 );
    sensitive << ( tmp_3_fu_432_p3 );

    SC_METHOD(thread_p_Result_29_fu_317_p5);
    sensitive << ( tmp_1_fu_309_p3 );

    SC_METHOD(thread_p_Result_30_fu_521_p4);
    sensitive << ( p_Val2_31_fu_508_p6 );

    SC_METHOD(thread_p_Result_31_fu_764_p4);
    sensitive << ( out_exp_V_fu_758_p3 );
    sensitive << ( p_Val2_32_fu_751_p3 );

    SC_METHOD(thread_p_Result_s_fu_395_p2);
    sensitive << ( tmp_31_reg_831 );
    sensitive << ( tmp_32_fu_389_p2 );

    SC_METHOD(thread_p_Val2_31_fu_508_p5);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( i1_reg_204 );

    SC_METHOD(thread_p_Val2_32_fu_751_p3);
    sensitive << ( or_cond_59_reg_941 );
    sensitive << ( phitmp2_fu_741_p4 );

    SC_METHOD(thread_phitmp2_fu_741_p4);
    sensitive << ( p_Val2_s_reg_258 );

    SC_METHOD(thread_result_write_assign_fu_774_p1);
    sensitive << ( p_Result_31_fu_764_p4 );

    SC_METHOD(thread_sel_tmp3_fu_538_p2);
    sensitive << ( tmp_35_reg_859 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_sel_tmp4_fu_543_p2);
    sensitive << ( tmp_35_reg_859 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_sel_tmp5_fu_548_p2);
    sensitive << ( tmp_35_reg_859 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_sel_tmp9_fu_414_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i_reg_144 );

    SC_METHOD(thread_sel_tmp_fu_400_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i_reg_144 );

    SC_METHOD(thread_sh_assign_1_fu_661_p3);
    sensitive << ( sh_assign_fu_633_p6 );
    sensitive << ( isNeg_fu_647_p3 );
    sensitive << ( tmp_s_fu_655_p2 );

    SC_METHOD(thread_sh_assign_fu_633_p5);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( i2_reg_237 );

    SC_METHOD(thread_shift_2_fu_669_p2);
    sensitive << ( sh_assign_reg_900 );
    sensitive << ( shift_reg_225 );

    SC_METHOD(thread_tmp_19_fu_306_p1);
    sensitive << ( in_V );

    SC_METHOD(thread_tmp_1_fu_309_p3);
    sensitive << ( tmp_19_fu_306_p1 );

    SC_METHOD(thread_tmp_20_fu_300_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( Hi_assign_fu_288_p2 );
    sensitive << ( exitcond1_fu_268_p2 );
    sensitive << ( Lo_assign_fu_294_p2 );

    SC_METHOD(thread_tmp_21_fu_329_p4);
    sensitive << ( in_V );

    SC_METHOD(thread_tmp_22_fu_338_p2);
    sensitive << ( Hi_assign_reg_800 );
    sensitive << ( Lo_assign_reg_806 );

    SC_METHOD(thread_tmp_23_fu_342_p2);
    sensitive << ( Lo_assign_reg_806 );

    SC_METHOD(thread_tmp_24_fu_347_p2);
    sensitive << ( Hi_assign_reg_800 );
    sensitive << ( Lo_assign_reg_806 );

    SC_METHOD(thread_tmp_25_fu_351_p3);
    sensitive << ( tmp_20_reg_814 );
    sensitive << ( tmp_22_fu_338_p2 );
    sensitive << ( tmp_24_fu_347_p2 );

    SC_METHOD(thread_tmp_26_fu_358_p3);
    sensitive << ( in_V );
    sensitive << ( tmp_20_reg_814 );
    sensitive << ( tmp_21_fu_329_p4 );

    SC_METHOD(thread_tmp_27_fu_364_p3);
    sensitive << ( Lo_assign_reg_806 );
    sensitive << ( tmp_20_reg_814 );
    sensitive << ( tmp_23_fu_342_p2 );

    SC_METHOD(thread_tmp_28_fu_370_p2);
    sensitive << ( tmp_25_fu_351_p3 );

    SC_METHOD(thread_tmp_29_fu_376_p1);
    sensitive << ( tmp_27_fu_364_p3 );

    SC_METHOD(thread_tmp_2_fu_674_p1);
    sensitive << ( sh_assign_1_reg_911 );

    SC_METHOD(thread_tmp_30_fu_386_p1);
    sensitive << ( tmp_28_reg_826 );

    SC_METHOD(thread_tmp_31_fu_380_p2);
    sensitive << ( tmp_26_fu_358_p3 );
    sensitive << ( tmp_29_fu_376_p1 );

    SC_METHOD(thread_tmp_32_fu_389_p2);
    sensitive << ( tmp_30_fu_386_p1 );

    SC_METHOD(thread_tmp_34_fu_428_p1);
    sensitive << ( p_Result_s_fu_395_p2 );

    SC_METHOD(thread_tmp_35_fu_504_p1);
    sensitive << ( i1_reg_204 );

    SC_METHOD(thread_tmp_36_fu_615_p3);
    sensitive << ( i2_reg_237 );

    SC_METHOD(thread_tmp_39_fu_701_p1);
    sensitive << ( prescale );

    SC_METHOD(thread_tmp_3_fu_432_p3);
    sensitive << ( tmp_34_fu_428_p1 );

    SC_METHOD(thread_tmp_40_fu_724_p3);
    sensitive << ( newexp_fu_718_p2 );

    SC_METHOD(thread_tmp_41_fu_737_p1);
    sensitive << ( newexp_fu_718_p2 );

    SC_METHOD(thread_tmp_4_fu_677_p2);
    sensitive << ( in_shift_reg_215 );
    sensitive << ( tmp_2_fu_674_p1 );

    SC_METHOD(thread_tmp_51_cast_fu_715_p1);
    sensitive << ( tmp_7_reg_931 );

    SC_METHOD(thread_tmp_5_fu_683_p2);
    sensitive << ( in_shift_reg_215 );
    sensitive << ( tmp_2_fu_674_p1 );

    SC_METHOD(thread_tmp_6_fu_696_p2);
    sensitive << ( tmp_36_reg_891 );
    sensitive << ( sh_assign_reg_900 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_tmp_7_fu_704_p2);
    sensitive << ( tmp_39_fu_701_p1 );

    SC_METHOD(thread_tmp_8_fu_710_p2);
    sensitive << ( in_V );
    sensitive << ( tmp_36_reg_891 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_6_fu_696_p2 );

    SC_METHOD(thread_tmp_fu_280_p3);
    sensitive << ( i_reg_144 );

    SC_METHOD(thread_tmp_s_fu_655_p2);
    sensitive << ( sh_assign_fu_633_p6 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_268_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond_fu_492_p2 );
    sensitive << ( tmp_36_reg_891 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_6_fu_696_p2 );

    ap_CS_fsm = "0000000001";
    ap_return_preg = "0000000000000000000000000000000000000000000000000000000000000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "scaled_fixed2ieee_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, in_V, "(port)in_V");
    sc_trace(mVcdFile, prescale, "(port)prescale");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_1_fu_274_p2, "i_1_fu_274_p2");
    sc_trace(mVcdFile, i_1_reg_795, "i_1_reg_795");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, Hi_assign_fu_288_p2, "Hi_assign_fu_288_p2");
    sc_trace(mVcdFile, Hi_assign_reg_800, "Hi_assign_reg_800");
    sc_trace(mVcdFile, exitcond1_fu_268_p2, "exitcond1_fu_268_p2");
    sc_trace(mVcdFile, Lo_assign_fu_294_p2, "Lo_assign_fu_294_p2");
    sc_trace(mVcdFile, Lo_assign_reg_806, "Lo_assign_reg_806");
    sc_trace(mVcdFile, tmp_20_fu_300_p2, "tmp_20_fu_300_p2");
    sc_trace(mVcdFile, tmp_20_reg_814, "tmp_20_reg_814");
    sc_trace(mVcdFile, p_Result_29_fu_317_p5, "p_Result_29_fu_317_p5");
    sc_trace(mVcdFile, p_Result_29_reg_821, "p_Result_29_reg_821");
    sc_trace(mVcdFile, tmp_28_fu_370_p2, "tmp_28_fu_370_p2");
    sc_trace(mVcdFile, tmp_28_reg_826, "tmp_28_reg_826");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_31_fu_380_p2, "tmp_31_fu_380_p2");
    sc_trace(mVcdFile, tmp_31_reg_831, "tmp_31_reg_831");
    sc_trace(mVcdFile, out_bits_2_V_1_fu_460_p3, "out_bits_2_V_1_fu_460_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, out_bits_2_V_6_fu_476_p3, "out_bits_2_V_6_fu_476_p3");
    sc_trace(mVcdFile, out_bits_2_V_8_fu_484_p3, "out_bits_2_V_8_fu_484_p3");
    sc_trace(mVcdFile, i_2_fu_498_p2, "i_2_fu_498_p2");
    sc_trace(mVcdFile, i_2_reg_854, "i_2_reg_854");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_35_fu_504_p1, "tmp_35_fu_504_p1");
    sc_trace(mVcdFile, tmp_35_reg_859, "tmp_35_reg_859");
    sc_trace(mVcdFile, exitcond_fu_492_p2, "exitcond_fu_492_p2");
    sc_trace(mVcdFile, p_Result_30_fu_521_p4, "p_Result_30_fu_521_p4");
    sc_trace(mVcdFile, p_Result_30_reg_866, "p_Result_30_reg_866");
    sc_trace(mVcdFile, c_3_fu_567_p3, "c_3_fu_567_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, c_3_3_fu_583_p3, "c_3_3_fu_583_p3");
    sc_trace(mVcdFile, c_3_5_fu_591_p3, "c_3_5_fu_591_p3");
    sc_trace(mVcdFile, c_3_6_fu_607_p3, "c_3_6_fu_607_p3");
    sc_trace(mVcdFile, tmp_36_fu_615_p3, "tmp_36_fu_615_p3");
    sc_trace(mVcdFile, tmp_36_reg_891, "tmp_36_reg_891");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, i_3_fu_623_p2, "i_3_fu_623_p2");
    sc_trace(mVcdFile, i_3_reg_895, "i_3_reg_895");
    sc_trace(mVcdFile, sh_assign_fu_633_p6, "sh_assign_fu_633_p6");
    sc_trace(mVcdFile, sh_assign_reg_900, "sh_assign_reg_900");
    sc_trace(mVcdFile, isNeg_fu_647_p3, "isNeg_fu_647_p3");
    sc_trace(mVcdFile, isNeg_reg_906, "isNeg_reg_906");
    sc_trace(mVcdFile, sh_assign_1_fu_661_p3, "sh_assign_1_fu_661_p3");
    sc_trace(mVcdFile, sh_assign_1_reg_911, "sh_assign_1_reg_911");
    sc_trace(mVcdFile, shift_2_fu_669_p2, "shift_2_fu_669_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, in_shift_V_fu_689_p3, "in_shift_V_fu_689_p3");
    sc_trace(mVcdFile, tmp_7_fu_704_p2, "tmp_7_fu_704_p2");
    sc_trace(mVcdFile, tmp_7_reg_931, "tmp_7_reg_931");
    sc_trace(mVcdFile, tmp_6_fu_696_p2, "tmp_6_fu_696_p2");
    sc_trace(mVcdFile, tmp_8_fu_710_p2, "tmp_8_fu_710_p2");
    sc_trace(mVcdFile, tmp_8_reg_936, "tmp_8_reg_936");
    sc_trace(mVcdFile, or_cond_59_fu_732_p2, "or_cond_59_fu_732_p2");
    sc_trace(mVcdFile, or_cond_59_reg_941, "or_cond_59_reg_941");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, tmp_41_fu_737_p1, "tmp_41_fu_737_p1");
    sc_trace(mVcdFile, tmp_41_reg_947, "tmp_41_reg_947");
    sc_trace(mVcdFile, out_bits_2_V_s_reg_108, "out_bits_2_V_s_reg_108");
    sc_trace(mVcdFile, out_bits_1_V_s_reg_120, "out_bits_1_V_s_reg_120");
    sc_trace(mVcdFile, out_bits_2_V_7_reg_132, "out_bits_2_V_7_reg_132");
    sc_trace(mVcdFile, i_reg_144, "i_reg_144");
    sc_trace(mVcdFile, c_2_s_reg_156, "c_2_s_reg_156");
    sc_trace(mVcdFile, c_3_1_reg_168, "c_3_1_reg_168");
    sc_trace(mVcdFile, c_3_4_reg_180, "c_3_4_reg_180");
    sc_trace(mVcdFile, c_3_s_reg_192, "c_3_s_reg_192");
    sc_trace(mVcdFile, i1_reg_204, "i1_reg_204");
    sc_trace(mVcdFile, in_shift_reg_215, "in_shift_reg_215");
    sc_trace(mVcdFile, shift_reg_225, "shift_reg_225");
    sc_trace(mVcdFile, i2_reg_237, "i2_reg_237");
    sc_trace(mVcdFile, shift_1_reg_248, "shift_1_reg_248");
    sc_trace(mVcdFile, p_Val2_s_reg_258, "p_Val2_s_reg_258");
    sc_trace(mVcdFile, tmp_fu_280_p3, "tmp_fu_280_p3");
    sc_trace(mVcdFile, tmp_19_fu_306_p1, "tmp_19_fu_306_p1");
    sc_trace(mVcdFile, tmp_1_fu_309_p3, "tmp_1_fu_309_p3");
    sc_trace(mVcdFile, tmp_22_fu_338_p2, "tmp_22_fu_338_p2");
    sc_trace(mVcdFile, tmp_24_fu_347_p2, "tmp_24_fu_347_p2");
    sc_trace(mVcdFile, tmp_21_fu_329_p4, "tmp_21_fu_329_p4");
    sc_trace(mVcdFile, tmp_23_fu_342_p2, "tmp_23_fu_342_p2");
    sc_trace(mVcdFile, tmp_25_fu_351_p3, "tmp_25_fu_351_p3");
    sc_trace(mVcdFile, tmp_27_fu_364_p3, "tmp_27_fu_364_p3");
    sc_trace(mVcdFile, tmp_26_fu_358_p3, "tmp_26_fu_358_p3");
    sc_trace(mVcdFile, tmp_29_fu_376_p1, "tmp_29_fu_376_p1");
    sc_trace(mVcdFile, tmp_30_fu_386_p1, "tmp_30_fu_386_p1");
    sc_trace(mVcdFile, tmp_32_fu_389_p2, "tmp_32_fu_389_p2");
    sc_trace(mVcdFile, sel_tmp_fu_400_p2, "sel_tmp_fu_400_p2");
    sc_trace(mVcdFile, sel_tmp9_fu_414_p2, "sel_tmp9_fu_414_p2");
    sc_trace(mVcdFile, out_bits_2_V_fu_406_p3, "out_bits_2_V_fu_406_p3");
    sc_trace(mVcdFile, p_Result_s_fu_395_p2, "p_Result_s_fu_395_p2");
    sc_trace(mVcdFile, tmp_34_fu_428_p1, "tmp_34_fu_428_p1");
    sc_trace(mVcdFile, out_bits_2_V_9_fu_420_p3, "out_bits_2_V_9_fu_420_p3");
    sc_trace(mVcdFile, tmp_3_fu_432_p3, "tmp_3_fu_432_p3");
    sc_trace(mVcdFile, p_Result_28_fu_440_p5, "p_Result_28_fu_440_p5");
    sc_trace(mVcdFile, out_bits_2_V_4_fu_452_p3, "out_bits_2_V_4_fu_452_p3");
    sc_trace(mVcdFile, out_bits_2_V_5_fu_468_p3, "out_bits_2_V_5_fu_468_p3");
    sc_trace(mVcdFile, p_Val2_31_fu_508_p5, "p_Val2_31_fu_508_p5");
    sc_trace(mVcdFile, p_Val2_31_fu_508_p6, "p_Val2_31_fu_508_p6");
    sc_trace(mVcdFile, sel_tmp5_fu_548_p2, "sel_tmp5_fu_548_p2");
    sc_trace(mVcdFile, sel_tmp4_fu_543_p2, "sel_tmp4_fu_543_p2");
    sc_trace(mVcdFile, sel_tmp3_fu_538_p2, "sel_tmp3_fu_538_p2");
    sc_trace(mVcdFile, c_3_8_fu_531_p3, "c_3_8_fu_531_p3");
    sc_trace(mVcdFile, or_cond_fu_553_p2, "or_cond_fu_553_p2");
    sc_trace(mVcdFile, newSel_fu_559_p3, "newSel_fu_559_p3");
    sc_trace(mVcdFile, c_3_2_fu_575_p3, "c_3_2_fu_575_p3");
    sc_trace(mVcdFile, newSel2_fu_599_p3, "newSel2_fu_599_p3");
    sc_trace(mVcdFile, sh_assign_fu_633_p5, "sh_assign_fu_633_p5");
    sc_trace(mVcdFile, tmp_s_fu_655_p2, "tmp_s_fu_655_p2");
    sc_trace(mVcdFile, tmp_2_fu_674_p1, "tmp_2_fu_674_p1");
    sc_trace(mVcdFile, tmp_5_fu_683_p2, "tmp_5_fu_683_p2");
    sc_trace(mVcdFile, tmp_4_fu_677_p2, "tmp_4_fu_677_p2");
    sc_trace(mVcdFile, tmp_39_fu_701_p1, "tmp_39_fu_701_p1");
    sc_trace(mVcdFile, tmp_51_cast_fu_715_p1, "tmp_51_cast_fu_715_p1");
    sc_trace(mVcdFile, newexp_fu_718_p2, "newexp_fu_718_p2");
    sc_trace(mVcdFile, tmp_40_fu_724_p3, "tmp_40_fu_724_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, phitmp2_fu_741_p4, "phitmp2_fu_741_p4");
    sc_trace(mVcdFile, out_exp_V_fu_758_p3, "out_exp_V_fu_758_p3");
    sc_trace(mVcdFile, p_Val2_32_fu_751_p3, "p_Val2_32_fu_751_p3");
    sc_trace(mVcdFile, p_Result_31_fu_764_p4, "p_Result_31_fu_764_p4");
    sc_trace(mVcdFile, result_write_assign_fu_774_p1, "result_write_assign_fu_774_p1");
    sc_trace(mVcdFile, ap_return_preg, "ap_return_preg");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

scaled_fixed2ieee::~scaled_fixed2ieee() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete houghTransform_mubkb_U0;
    delete houghTransform_mubkb_U1;
}

void scaled_fixed2ieee::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_preg = ap_const_lv64_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
            ap_return_preg = result_write_assign_fu_774_p1.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        i1_reg_204 = i_2_reg_854.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(exitcond1_fu_268_p2.read(), ap_const_lv1_1))) {
        i1_reg_204 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_492_p2.read()))) {
        i2_reg_237 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_36_reg_891.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_6_fu_696_p2.read()))) {
        i2_reg_237 = i_3_reg_895.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i_reg_144 = i_1_reg_795.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_144 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_492_p2.read()))) {
        in_shift_reg_215 = in_V.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_36_reg_891.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_6_fu_696_p2.read()))) {
        in_shift_reg_215 = in_shift_V_fu_689_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_36_reg_891.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_fu_696_p2.read()))) {
        p_Val2_s_reg_258 = in_shift_V_fu_689_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_36_fu_615_p3.read()))) {
        p_Val2_s_reg_258 = in_shift_reg_215.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_36_reg_891.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_fu_696_p2.read()))) {
        shift_1_reg_248 = shift_2_fu_669_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_36_fu_615_p3.read()))) {
        shift_1_reg_248 = shift_reg_225.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_492_p2.read()))) {
        shift_reg_225 = ap_const_lv32_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_36_reg_891.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_6_fu_696_p2.read()))) {
        shift_reg_225 = shift_2_fu_669_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond1_fu_268_p2.read(), ap_const_lv1_0))) {
        Hi_assign_reg_800 = Hi_assign_fu_288_p2.read();
        Lo_assign_reg_806 = Lo_assign_fu_294_p2.read();
        tmp_20_reg_814 = tmp_20_fu_300_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        c_2_s_reg_156 = c_3_fu_567_p3.read();
        c_3_1_reg_168 = c_3_3_fu_583_p3.read();
        c_3_4_reg_180 = c_3_5_fu_591_p3.read();
        c_3_s_reg_192 = c_3_6_fu_607_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_1_reg_795 = i_1_fu_274_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        i_2_reg_854 = i_2_fu_498_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        i_3_reg_895 = i_3_fu_623_p2.read();
        tmp_36_reg_891 = i2_reg_237.read().range(2, 2);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_36_fu_615_p3.read()))) {
        isNeg_reg_906 = sh_assign_fu_633_p6.read().range(31, 31);
        sh_assign_1_reg_911 = sh_assign_1_fu_661_p3.read();
        sh_assign_reg_900 = sh_assign_fu_633_p6.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        or_cond_59_reg_941 = or_cond_59_fu_732_p2.read();
        tmp_41_reg_947 = tmp_41_fu_737_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        out_bits_1_V_s_reg_120 = out_bits_2_V_6_fu_476_p3.read();
        out_bits_2_V_7_reg_132 = out_bits_2_V_8_fu_484_p3.read();
        out_bits_2_V_s_reg_108 = out_bits_2_V_1_fu_460_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond1_fu_268_p2.read(), ap_const_lv1_1))) {
        p_Result_29_reg_821 = p_Result_29_fu_317_p5.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_492_p2.read()))) {
        p_Result_30_reg_866 = p_Result_30_fu_521_p4.read();
        tmp_35_reg_859 = tmp_35_fu_504_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        tmp_28_reg_826 = tmp_28_fu_370_p2.read();
        tmp_31_reg_831 = tmp_31_fu_380_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_36_reg_891.read()) || 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_fu_696_p2.read())))) {
        tmp_7_reg_931 = tmp_7_fu_704_p2.read();
        tmp_8_reg_936 = tmp_8_fu_710_p2.read();
    }
}

void scaled_fixed2ieee::thread_Hi_assign_fu_288_p2() {
    Hi_assign_fu_288_p2 = (!ap_const_lv6_3E.is_01() || !tmp_fu_280_p3.read().is_01())? sc_lv<6>(): (sc_bigint<6>(ap_const_lv6_3E) - sc_biguint<6>(tmp_fu_280_p3.read()));
}

void scaled_fixed2ieee::thread_Lo_assign_fu_294_p2() {
    Lo_assign_fu_294_p2 = (!ap_const_lv6_2F.is_01() || !tmp_fu_280_p3.read().is_01())? sc_lv<6>(): (sc_bigint<6>(ap_const_lv6_2F) - sc_biguint<6>(tmp_fu_280_p3.read()));
}

void scaled_fixed2ieee::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void scaled_fixed2ieee::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void scaled_fixed2ieee::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void scaled_fixed2ieee::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void scaled_fixed2ieee::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void scaled_fixed2ieee::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void scaled_fixed2ieee::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void scaled_fixed2ieee::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void scaled_fixed2ieee::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void scaled_fixed2ieee::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void scaled_fixed2ieee::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void scaled_fixed2ieee::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void scaled_fixed2ieee::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void scaled_fixed2ieee::thread_ap_return() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        ap_return = result_write_assign_fu_774_p1.read();
    } else {
        ap_return = ap_return_preg.read();
    }
}

void scaled_fixed2ieee::thread_c_3_2_fu_575_p3() {
    c_3_2_fu_575_p3 = (!sel_tmp4_fu_543_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp4_fu_543_p2.read()[0].to_bool())? c_3_8_fu_531_p3.read(): c_3_1_reg_168.read());
}

void scaled_fixed2ieee::thread_c_3_3_fu_583_p3() {
    c_3_3_fu_583_p3 = (!sel_tmp5_fu_548_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp5_fu_548_p2.read()[0].to_bool())? c_3_1_reg_168.read(): c_3_2_fu_575_p3.read());
}

void scaled_fixed2ieee::thread_c_3_5_fu_591_p3() {
    c_3_5_fu_591_p3 = (!sel_tmp5_fu_548_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp5_fu_548_p2.read()[0].to_bool())? c_3_8_fu_531_p3.read(): c_3_4_reg_180.read());
}

void scaled_fixed2ieee::thread_c_3_6_fu_607_p3() {
    c_3_6_fu_607_p3 = (!or_cond_fu_553_p2.read()[0].is_01())? sc_lv<32>(): ((or_cond_fu_553_p2.read()[0].to_bool())? c_3_s_reg_192.read(): newSel2_fu_599_p3.read());
}

void scaled_fixed2ieee::thread_c_3_8_fu_531_p3() {
    c_3_8_fu_531_p3 = esl_cttz<32,32>(p_Result_30_reg_866.read());
}

void scaled_fixed2ieee::thread_c_3_fu_567_p3() {
    c_3_fu_567_p3 = (!or_cond_fu_553_p2.read()[0].is_01())? sc_lv<32>(): ((or_cond_fu_553_p2.read()[0].to_bool())? c_2_s_reg_156.read(): newSel_fu_559_p3.read());
}

void scaled_fixed2ieee::thread_exitcond1_fu_268_p2() {
    exitcond1_fu_268_p2 = (!i_reg_144.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_144.read() == ap_const_lv2_3);
}

void scaled_fixed2ieee::thread_exitcond_fu_492_p2() {
    exitcond_fu_492_p2 = (!i1_reg_204.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(i1_reg_204.read() == ap_const_lv3_4);
}

void scaled_fixed2ieee::thread_i_1_fu_274_p2() {
    i_1_fu_274_p2 = (!i_reg_144.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(i_reg_144.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void scaled_fixed2ieee::thread_i_2_fu_498_p2() {
    i_2_fu_498_p2 = (!i1_reg_204.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i1_reg_204.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void scaled_fixed2ieee::thread_i_3_fu_623_p2() {
    i_3_fu_623_p2 = (!i2_reg_237.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i2_reg_237.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void scaled_fixed2ieee::thread_in_shift_V_fu_689_p3() {
    in_shift_V_fu_689_p3 = (!isNeg_reg_906.read()[0].is_01())? sc_lv<63>(): ((isNeg_reg_906.read()[0].to_bool())? tmp_5_fu_683_p2.read(): tmp_4_fu_677_p2.read());
}

void scaled_fixed2ieee::thread_isNeg_fu_647_p3() {
    isNeg_fu_647_p3 = sh_assign_fu_633_p6.read().range(31, 31);
}

void scaled_fixed2ieee::thread_newSel2_fu_599_p3() {
    newSel2_fu_599_p3 = (!sel_tmp3_fu_538_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp3_fu_538_p2.read()[0].to_bool())? c_3_s_reg_192.read(): c_3_8_fu_531_p3.read());
}

void scaled_fixed2ieee::thread_newSel_fu_559_p3() {
    newSel_fu_559_p3 = (!sel_tmp3_fu_538_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp3_fu_538_p2.read()[0].to_bool())? c_3_8_fu_531_p3.read(): c_2_s_reg_156.read());
}

void scaled_fixed2ieee::thread_newexp_fu_718_p2() {
    newexp_fu_718_p2 = (!tmp_51_cast_fu_715_p1.read().is_01() || !shift_1_reg_248.read().is_01())? sc_lv<32>(): (sc_bigint<32>(tmp_51_cast_fu_715_p1.read()) - sc_biguint<32>(shift_1_reg_248.read()));
}

void scaled_fixed2ieee::thread_or_cond_59_fu_732_p2() {
    or_cond_59_fu_732_p2 = (tmp_40_fu_724_p3.read() | tmp_8_reg_936.read());
}

void scaled_fixed2ieee::thread_or_cond_fu_553_p2() {
    or_cond_fu_553_p2 = (sel_tmp5_fu_548_p2.read() | sel_tmp4_fu_543_p2.read());
}

void scaled_fixed2ieee::thread_out_bits_2_V_1_fu_460_p3() {
    out_bits_2_V_1_fu_460_p3 = (!sel_tmp_fu_400_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp_fu_400_p2.read()[0].to_bool())? out_bits_2_V_s_reg_108.read(): out_bits_2_V_4_fu_452_p3.read());
}

void scaled_fixed2ieee::thread_out_bits_2_V_4_fu_452_p3() {
    out_bits_2_V_4_fu_452_p3 = (!sel_tmp9_fu_414_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp9_fu_414_p2.read()[0].to_bool())? out_bits_2_V_s_reg_108.read(): p_Result_28_fu_440_p5.read());
}

void scaled_fixed2ieee::thread_out_bits_2_V_5_fu_468_p3() {
    out_bits_2_V_5_fu_468_p3 = (!sel_tmp9_fu_414_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp9_fu_414_p2.read()[0].to_bool())? p_Result_28_fu_440_p5.read(): out_bits_1_V_s_reg_120.read());
}

void scaled_fixed2ieee::thread_out_bits_2_V_6_fu_476_p3() {
    out_bits_2_V_6_fu_476_p3 = (!sel_tmp_fu_400_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp_fu_400_p2.read()[0].to_bool())? out_bits_1_V_s_reg_120.read(): out_bits_2_V_5_fu_468_p3.read());
}

void scaled_fixed2ieee::thread_out_bits_2_V_8_fu_484_p3() {
    out_bits_2_V_8_fu_484_p3 = (!sel_tmp_fu_400_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp_fu_400_p2.read()[0].to_bool())? p_Result_28_fu_440_p5.read(): out_bits_2_V_7_reg_132.read());
}

void scaled_fixed2ieee::thread_out_bits_2_V_9_fu_420_p3() {
    out_bits_2_V_9_fu_420_p3 = (!sel_tmp9_fu_414_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp9_fu_414_p2.read()[0].to_bool())? out_bits_1_V_s_reg_120.read(): out_bits_2_V_fu_406_p3.read());
}

void scaled_fixed2ieee::thread_out_bits_2_V_fu_406_p3() {
    out_bits_2_V_fu_406_p3 = (!sel_tmp_fu_400_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp_fu_400_p2.read()[0].to_bool())? out_bits_2_V_7_reg_132.read(): out_bits_2_V_s_reg_108.read());
}

void scaled_fixed2ieee::thread_out_exp_V_fu_758_p3() {
    out_exp_V_fu_758_p3 = (!or_cond_59_reg_941.read()[0].is_01())? sc_lv<11>(): ((or_cond_59_reg_941.read()[0].to_bool())? ap_const_lv11_0: tmp_41_reg_947.read());
}

void scaled_fixed2ieee::thread_p_Result_28_fu_440_p5() {
    p_Result_28_fu_440_p5 = esl_partset<32,32,17,32,32>(out_bits_2_V_9_fu_420_p3.read(), tmp_3_fu_432_p3.read(), ap_const_lv32_F, ap_const_lv32_1F);
}

void scaled_fixed2ieee::thread_p_Result_29_fu_317_p5() {
    p_Result_29_fu_317_p5 = esl_partset<32,32,16,32,32>(ap_const_lv32_0, tmp_1_fu_309_p3.read(), ap_const_lv32_10, ap_const_lv32_1F);
}

void scaled_fixed2ieee::thread_p_Result_30_fu_521_p4() {
    p_Result_30_fu_521_p4 = p_Val2_31_fu_508_p6.read().range(0, 31);
}

void scaled_fixed2ieee::thread_p_Result_31_fu_764_p4() {
    p_Result_31_fu_764_p4 = esl_concat<12,52>(esl_concat<1,11>(ap_const_lv1_0, out_exp_V_fu_758_p3.read()), p_Val2_32_fu_751_p3.read());
}

void scaled_fixed2ieee::thread_p_Result_s_fu_395_p2() {
    p_Result_s_fu_395_p2 = (tmp_31_reg_831.read() & tmp_32_fu_389_p2.read());
}

void scaled_fixed2ieee::thread_p_Val2_31_fu_508_p5() {
    p_Val2_31_fu_508_p5 = i1_reg_204.read().range(2-1, 0);
}

void scaled_fixed2ieee::thread_p_Val2_32_fu_751_p3() {
    p_Val2_32_fu_751_p3 = (!or_cond_59_reg_941.read()[0].is_01())? sc_lv<52>(): ((or_cond_59_reg_941.read()[0].to_bool())? ap_const_lv52_0: phitmp2_fu_741_p4.read());
}

void scaled_fixed2ieee::thread_phitmp2_fu_741_p4() {
    phitmp2_fu_741_p4 = p_Val2_s_reg_258.read().range(61, 10);
}

void scaled_fixed2ieee::thread_result_write_assign_fu_774_p1() {
    result_write_assign_fu_774_p1 = p_Result_31_fu_764_p4.read();
}

void scaled_fixed2ieee::thread_sel_tmp3_fu_538_p2() {
    sel_tmp3_fu_538_p2 = (!tmp_35_reg_859.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(tmp_35_reg_859.read() == ap_const_lv2_2);
}

void scaled_fixed2ieee::thread_sel_tmp4_fu_543_p2() {
    sel_tmp4_fu_543_p2 = (!tmp_35_reg_859.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(tmp_35_reg_859.read() == ap_const_lv2_1);
}

void scaled_fixed2ieee::thread_sel_tmp5_fu_548_p2() {
    sel_tmp5_fu_548_p2 = (!tmp_35_reg_859.read().is_01() || !ap_const_lv2_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_35_reg_859.read() == ap_const_lv2_0);
}

void scaled_fixed2ieee::thread_sel_tmp9_fu_414_p2() {
    sel_tmp9_fu_414_p2 = (!i_reg_144.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_144.read() == ap_const_lv2_1);
}

void scaled_fixed2ieee::thread_sel_tmp_fu_400_p2() {
    sel_tmp_fu_400_p2 = (!i_reg_144.read().is_01() || !ap_const_lv2_0.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_144.read() == ap_const_lv2_0);
}

void scaled_fixed2ieee::thread_sh_assign_1_fu_661_p3() {
    sh_assign_1_fu_661_p3 = (!isNeg_fu_647_p3.read()[0].is_01())? sc_lv<32>(): ((isNeg_fu_647_p3.read()[0].to_bool())? tmp_s_fu_655_p2.read(): sh_assign_fu_633_p6.read());
}

void scaled_fixed2ieee::thread_sh_assign_fu_633_p5() {
    sh_assign_fu_633_p5 = i2_reg_237.read().range(2-1, 0);
}

void scaled_fixed2ieee::thread_shift_2_fu_669_p2() {
    shift_2_fu_669_p2 = (!sh_assign_reg_900.read().is_01() || !shift_reg_225.read().is_01())? sc_lv<32>(): (sc_biguint<32>(sh_assign_reg_900.read()) + sc_biguint<32>(shift_reg_225.read()));
}

void scaled_fixed2ieee::thread_tmp_19_fu_306_p1() {
    tmp_19_fu_306_p1 = in_V.read().range(15-1, 0);
}

void scaled_fixed2ieee::thread_tmp_1_fu_309_p3() {
    tmp_1_fu_309_p3 = esl_concat<15,1>(tmp_19_fu_306_p1.read(), ap_const_lv1_1);
}

void scaled_fixed2ieee::thread_tmp_20_fu_300_p2() {
    tmp_20_fu_300_p2 = (!Lo_assign_fu_294_p2.read().is_01() || !Hi_assign_fu_288_p2.read().is_01())? sc_lv<1>(): (sc_biguint<6>(Lo_assign_fu_294_p2.read()) > sc_biguint<6>(Hi_assign_fu_288_p2.read()));
}

void scaled_fixed2ieee::thread_tmp_21_fu_329_p4() {
    tmp_21_fu_329_p4 = in_V.read().range(0, 62);
}

void scaled_fixed2ieee::thread_tmp_22_fu_338_p2() {
    tmp_22_fu_338_p2 = (!Lo_assign_reg_806.read().is_01() || !Hi_assign_reg_800.read().is_01())? sc_lv<6>(): (sc_biguint<6>(Lo_assign_reg_806.read()) - sc_biguint<6>(Hi_assign_reg_800.read()));
}

void scaled_fixed2ieee::thread_tmp_23_fu_342_p2() {
    tmp_23_fu_342_p2 = (!ap_const_lv6_3E.is_01() || !Lo_assign_reg_806.read().is_01())? sc_lv<6>(): (sc_bigint<6>(ap_const_lv6_3E) - sc_biguint<6>(Lo_assign_reg_806.read()));
}

void scaled_fixed2ieee::thread_tmp_24_fu_347_p2() {
    tmp_24_fu_347_p2 = (!Hi_assign_reg_800.read().is_01() || !Lo_assign_reg_806.read().is_01())? sc_lv<6>(): (sc_biguint<6>(Hi_assign_reg_800.read()) - sc_biguint<6>(Lo_assign_reg_806.read()));
}

void scaled_fixed2ieee::thread_tmp_25_fu_351_p3() {
    tmp_25_fu_351_p3 = (!tmp_20_reg_814.read()[0].is_01())? sc_lv<6>(): ((tmp_20_reg_814.read()[0].to_bool())? tmp_22_fu_338_p2.read(): tmp_24_fu_347_p2.read());
}

void scaled_fixed2ieee::thread_tmp_26_fu_358_p3() {
    tmp_26_fu_358_p3 = (!tmp_20_reg_814.read()[0].is_01())? sc_lv<63>(): ((tmp_20_reg_814.read()[0].to_bool())? tmp_21_fu_329_p4.read(): in_V.read());
}

void scaled_fixed2ieee::thread_tmp_27_fu_364_p3() {
    tmp_27_fu_364_p3 = (!tmp_20_reg_814.read()[0].is_01())? sc_lv<6>(): ((tmp_20_reg_814.read()[0].to_bool())? tmp_23_fu_342_p2.read(): Lo_assign_reg_806.read());
}

void scaled_fixed2ieee::thread_tmp_28_fu_370_p2() {
    tmp_28_fu_370_p2 = (!ap_const_lv6_3E.is_01() || !tmp_25_fu_351_p3.read().is_01())? sc_lv<6>(): (sc_bigint<6>(ap_const_lv6_3E) - sc_biguint<6>(tmp_25_fu_351_p3.read()));
}

void scaled_fixed2ieee::thread_tmp_29_fu_376_p1() {
    tmp_29_fu_376_p1 = esl_zext<63,6>(tmp_27_fu_364_p3.read());
}

void scaled_fixed2ieee::thread_tmp_2_fu_674_p1() {
    tmp_2_fu_674_p1 = esl_zext<63,32>(sh_assign_1_reg_911.read());
}

void scaled_fixed2ieee::thread_tmp_30_fu_386_p1() {
    tmp_30_fu_386_p1 = esl_zext<63,6>(tmp_28_reg_826.read());
}

void scaled_fixed2ieee::thread_tmp_31_fu_380_p2() {
    tmp_31_fu_380_p2 = (!tmp_29_fu_376_p1.read().is_01())? sc_lv<63>(): tmp_26_fu_358_p3.read() >> (unsigned short)tmp_29_fu_376_p1.read().to_uint();
}

void scaled_fixed2ieee::thread_tmp_32_fu_389_p2() {
    tmp_32_fu_389_p2 = (!tmp_30_fu_386_p1.read().is_01())? sc_lv<63>(): ap_const_lv63_7FFFFFFFFFFFFFFF >> (unsigned short)tmp_30_fu_386_p1.read().to_uint();
}

void scaled_fixed2ieee::thread_tmp_34_fu_428_p1() {
    tmp_34_fu_428_p1 = p_Result_s_fu_395_p2.read().range(16-1, 0);
}

void scaled_fixed2ieee::thread_tmp_35_fu_504_p1() {
    tmp_35_fu_504_p1 = i1_reg_204.read().range(2-1, 0);
}

void scaled_fixed2ieee::thread_tmp_36_fu_615_p3() {
    tmp_36_fu_615_p3 = i2_reg_237.read().range(2, 2);
}

void scaled_fixed2ieee::thread_tmp_39_fu_701_p1() {
    tmp_39_fu_701_p1 = prescale.read().range(12-1, 0);
}

void scaled_fixed2ieee::thread_tmp_3_fu_432_p3() {
    tmp_3_fu_432_p3 = esl_concat<16,1>(tmp_34_fu_428_p1.read(), ap_const_lv1_1);
}

void scaled_fixed2ieee::thread_tmp_40_fu_724_p3() {
    tmp_40_fu_724_p3 = newexp_fu_718_p2.read().range(31, 31);
}

void scaled_fixed2ieee::thread_tmp_41_fu_737_p1() {
    tmp_41_fu_737_p1 = newexp_fu_718_p2.read().range(11-1, 0);
}

void scaled_fixed2ieee::thread_tmp_4_fu_677_p2() {
    tmp_4_fu_677_p2 = (!tmp_2_fu_674_p1.read().is_01())? sc_lv<63>(): in_shift_reg_215.read() << (unsigned short)tmp_2_fu_674_p1.read().to_uint();
}

void scaled_fixed2ieee::thread_tmp_51_cast_fu_715_p1() {
    tmp_51_cast_fu_715_p1 = esl_sext<32,12>(tmp_7_reg_931.read());
}

void scaled_fixed2ieee::thread_tmp_5_fu_683_p2() {
    tmp_5_fu_683_p2 = (!in_shift_reg_215.read().is_01() || !tmp_2_fu_674_p1.read().is_01())? sc_lv<63>(): sc_bigint<63>(in_shift_reg_215.read()) >> (unsigned short)tmp_2_fu_674_p1.read().to_uint();
}

void scaled_fixed2ieee::thread_tmp_6_fu_696_p2() {
    tmp_6_fu_696_p2 = (!sh_assign_reg_900.read().is_01() || !ap_const_lv32_10.is_01())? sc_lv<1>(): sc_lv<1>(sh_assign_reg_900.read() == ap_const_lv32_10);
}

void scaled_fixed2ieee::thread_tmp_7_fu_704_p2() {
    tmp_7_fu_704_p2 = (!ap_const_lv12_3FF.is_01() || !tmp_39_fu_701_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(ap_const_lv12_3FF) - sc_biguint<12>(tmp_39_fu_701_p1.read()));
}

void scaled_fixed2ieee::thread_tmp_8_fu_710_p2() {
    tmp_8_fu_710_p2 = (!in_V.read().is_01() || !ap_const_lv63_0.is_01())? sc_lv<1>(): sc_lv<1>(in_V.read() == ap_const_lv63_0);
}

void scaled_fixed2ieee::thread_tmp_fu_280_p3() {
    tmp_fu_280_p3 = esl_concat<2,4>(i_reg_144.read(), ap_const_lv4_0);
}

void scaled_fixed2ieee::thread_tmp_s_fu_655_p2() {
    tmp_s_fu_655_p2 = (!ap_const_lv32_0.is_01() || !sh_assign_fu_633_p6.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_biguint<32>(sh_assign_fu_633_p6.read()));
}

void scaled_fixed2ieee::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond1_fu_268_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_492_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_36_reg_891.read()) || 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_fu_696_p2.read())))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXXXXXXXXX";
            break;
    }
}

}


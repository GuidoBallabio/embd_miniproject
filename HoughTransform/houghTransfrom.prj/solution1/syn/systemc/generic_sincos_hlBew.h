// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ==============================================================

#ifndef __generic_sincos_hlBew_H__
#define __generic_sincos_hlBew_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct generic_sincos_hlBew_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 23;
  static const unsigned AddressRange = 128;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(generic_sincos_hlBew_ram) {
        ram[0] = "0b10100011001101011110001";
        ram[1] = "0b10100011001101001100000";
        ram[2] = "0b10100011001100100101101";
        ram[3] = "0b10100011001011101101001";
        ram[4] = "0b10100011001010100110101";
        ram[5] = "0b10100011001001010000001";
        ram[6] = "0b10100011000111100010110";
        ram[7] = "0b10100011000101100011001";
        ram[8] = "0b10100011000011010010101";
        ram[9] = "0b10100011000000110001011";
        ram[10] = "0b10100010111110000000010";
        ram[11] = "0b10100010111010111000111";
        ram[12] = "0b10100010110111100100100";
        ram[13] = "0b10100010110011111000101";
        ram[14] = "0b10100010101111111100110";
        ram[15] = "0b10100010101011101101111";
        ram[16] = "0b10100010100111010010001";
        ram[17] = "0b10100010100010011111101";
        ram[18] = "0b10100010011101011110101";
        ram[19] = "0b10100010011000000100110";
        ram[20] = "0b10100010010010011110101";
        ram[21] = "0b10100010001100100110111";
        ram[22] = "0b10100010000110011111001";
        ram[23] = "0b10100001111111111111000";
        ram[24] = "0b10100001111001010100011";
        ram[25] = "0b10100001110010010011111";
        ram[26] = "0b10100001101011000001111";
        ram[27] = "0b10100001100011011111001";
        ram[28] = "0b10100001011011100101101";
        ram[29] = "0b10100001010011011111010";
        ram[30] = "0b10100001001011001000100";
        ram[31] = "0b10100001000010011010110";
        ram[32] = "0b10100000111001100001101";
        ram[33] = "0b10100000110000010000100";
        ram[34] = "0b10100000100110110010110";
        ram[35] = "0b10100000011100111111110";
        ram[36] = "0b10100000010010111101111";
        ram[37] = "0b10100000001000100111111";
        ram[38] = "0b10011111111110000010101";
        ram[39] = "0b10011111110011001001110";
        ram[40] = "0b10011111101000000000110";
        ram[41] = "0b10011111011100100110101";
        ram[42] = "0b10011111010000111000011";
        ram[43] = "0b10011111000100111011000";
        ram[44] = "0b10011110111000101010110";
        ram[45] = "0b10011110101100001011011";
        ram[46] = "0b10011110011111011001011";
        ram[47] = "0b10011110010010010101000";
        ram[48] = "0b10011110000100111111001";
        ram[49] = "0b10011101110111011001111";
        ram[50] = "0b10011101101001011110100";
        ram[51] = "0b10011101011011010011111";
        ram[52] = "0b10011101001100111101011";
        ram[53] = "0b10011100111110010001010";
        ram[54] = "0b10011100101111010100111";
        ram[55] = "0b10011100100000000100111";
        ram[56] = "0b10011100010000100110001";
        ram[57] = "0b10011100000000110010001";
        ram[58] = "0b10011011110000110011010";
        ram[59] = "0b10011011100000100011100";
        ram[60] = "0b10011011001111111100011";
        ram[61] = "0b10011010111111000101010";
        ram[62] = "0b10011010101110000100110";
        ram[63] = "0b10011010011100101100101";
        ram[64] = "0b10011010001011000101100";
        ram[65] = "0b10011001111001001010001";
        ram[66] = "0b10011001100111000011000";
        ram[67] = "0b10011001010100101001100";
        ram[68] = "0b10011001000001111101000";
        ram[69] = "0b10011000101111000000001";
        ram[70] = "0b10011000011011110010101";
        ram[71] = "0b10011000001000010110001";
        ram[72] = "0b10010111110100101001001";
        ram[73] = "0b10010111100000101001011";
        ram[74] = "0b10010111001100011000100";
        ram[75] = "0b10010110110111111001000";
        ram[76] = "0b10010110100011001011011";
        ram[77] = "0b10010110001110000111111";
        ram[78] = "0b10010101111000111011010";
        ram[79] = "0b10010101100011011000001";
        ram[80] = "0b10010101001101100110010";
        ram[81] = "0b10010100110111100100111";
        ram[82] = "0b10010100100001010010011";
        ram[83] = "0b10010100001010110000100";
        ram[84] = "0b10010011110011111101011";
        ram[85] = "0b10010011011100111001010";
        ram[86] = "0b10010011000101100111001";
        ram[87] = "0b10010010101110000101100";
        ram[88] = "0b10010010010110001110110";
        ram[89] = "0b10010001111110001111110";
        ram[90] = "0b10010001100101111001010";
        ram[91] = "0b10010001001101011011000";
        ram[92] = "0b10010000110100101000100";
        ram[93] = "0b10010000011011100000111";
        ram[94] = "0b10010000000010001111010";
        ram[95] = "0b10001111101000101101111";
        ram[96] = "0b10001111001110111101001";
        ram[97] = "0b10001110110100111110000";
        ram[98] = "0b10001110011010101100111";
        ram[99] = "0b10001110000000001011010";
        ram[100] = "0b10001101100101011110101";
        ram[101] = "0b10001101001010011100111";
        ram[102] = "0b10001100101111001110001";
        ram[103] = "0b10001100010011110000111";
        ram[104] = "0b10001011111000000100011";
        ram[105] = "0b10001011011100001000111";
        ram[106] = "0b10001010111111111111111";
        ram[107] = "0b10001010100011100111001";
        ram[108] = "0b10001010000110111101001";
        ram[109] = "0b10001001101010000111010";
        ram[110] = "0b10001001001100111100111";
        ram[111] = "0b10001000101111101000111";
        ram[112] = "0b10001000010010000011110";
        ram[113] = "0b10000111110100010000111";
        ram[114] = "0b10000111010110001110011";
        ram[115] = "0b10000110110111111110000";
        ram[116] = "0b10000110011001011101101";
        ram[117] = "0b10000101111010101111110";
        ram[118] = "0b10000101011011110110010";
        ram[119] = "0b10000100111100101001000";
        ram[120] = "0b10000100011101010011010";
        ram[121] = "0b10000011111101101001111";
        ram[122] = "0b10000011011101110010110";
        ram[123] = "0b10000010111101101110100";
        ram[124] = "0b10000010011101011011010";
        ram[125] = "0b10000001111100111100111";
        ram[126] = "0b10000001011100010001110";
        ram[127] = "0b10000000111011010011001";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(generic_sincos_hlBew) {


static const unsigned DataWidth = 23;
static const unsigned AddressRange = 128;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


generic_sincos_hlBew_ram* meminst;


SC_CTOR(generic_sincos_hlBew) {
meminst = new generic_sincos_hlBew_ram("generic_sincos_hlBew_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~generic_sincos_hlBew() {
    delete meminst;
}


};//endmodule
#endif

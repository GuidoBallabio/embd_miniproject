// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ==============================================================

#ifndef __generic_sincos_hlsc4_H__
#define __generic_sincos_hlsc4_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct generic_sincos_hlsc4_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 58;
  static const unsigned AddressRange = 128;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(generic_sincos_hlsc4_ram) {
        ram[0] = "0b0000000000000000000000000000000000000000000000000000000000";
        ram[1] = "0b0000000000000010011101111010011100010111010101101101101101";
        ram[2] = "0b0000000000001001110111101001011001000110110100100100101011";
        ram[3] = "0b0000000000010110001101001011101101001010111001011110110111";
        ram[4] = "0b0000000000100111011110011111011110110011001011110011010011";
        ram[5] = "0b0000000000111101101011100010000011100010110000000111110111";
        ram[6] = "0b0000000001011000110100010000000000010000100010100011011100";
        ram[7] = "0b0000000001111000111000100101001001000111111000100000110111";
        ram[8] = "0b0000000010011101111000011100100001101001001010000010001011";
        ram[9] = "0b0000000011000111110011110000011100101010100010100100010001";
        ram[10] = "0b0000000011110110101010011010011100011000111001010010110101";
        ram[11] = "0b0000000100101010011100010011010010011000110000111100010101";
        ram[12] = "0b0000000101100011001001010010111111100111011111000110000001";
        ram[13] = "0b0000000110100000110001010000110100011100011010111111101100";
        ram[14] = "0b0000000111100011010100000011010000101010010011110111000001";
        ram[15] = "0b0000001000101010110001100000000011100000101110101010010101";
        ram[16] = "0b0000001001110111001001011100001011101101101011011010100001";
        ram[17] = "0b0000001011001000011011101011110111011111010001111011110100";
        ram[18] = "0b0000001100011110101000000010100100100101100110000101010100";
        ram[19] = "0b0000001101111001101110010011000000010100100011011110110111";
        ram[20] = "0b0000001111011001101110001111000111100110000000101100111000";
        ram[21] = "0b0000010000111110100111101000000110111011111001111010001100";
        ram[22] = "0b0000010010101000011010001110011010100010100010111111000010";
        ram[23] = "0b0000010100010111000101110001101110010011000001000101010110";
        ram[24] = "0b0000010110001010101010000000111101110101101011101001100100";
        ram[25] = "0b0000011000000011000110101010010100100100110100110111111101";
        ram[26] = "0b0000011010000000011011011011001101101111011001100101101011";
        ram[27] = "0b0000011100000010101000000000010100011011111000100101011010";
        ram[28] = "0b0000011110001001101100000101100011101011010001010111000001";
        ram[29] = "0b0000100000010101100111010110000110011100001010010001110011";
        ram[30] = "0b0000100010100110011001011100010111101101111110001000110111";
        ram[31] = "0b0000100100111100000010000010000010100100010001001001000011";
        ram[32] = "0b0000100111010110100000110000000010001010001101010000000101";
        ram[33] = "0b0000101001110101110101001110100001110110000101111100001000";
        ram[34] = "0b0000101100011001111111000100111101001101000011010011011110";
        ram[35] = "0b0000101111000010111101111010000000000110110100100011101011";
        ram[36] = "0b0000110001110000110001010011100110110001101001110111100001";
        ram[37] = "0b0000110100100011011000110110111101110110010101100011010001";
        ram[38] = "0b0000110111011010110100001000100010011100010100100110100101";
        ram[39] = "0b0000111010010111000010101100000010001101111110100011011000";
        ram[40] = "0b0000111101011000000100000100011011011100111100101001001001";
        ram[41] = "0b0001000000011101110111110011111101000110101000010011111000";
        ram[42] = "0b0001000011101000011101011100000110111000110000111101111111";
        ram[43] = "0b0001000110110111110100011101101001010110001001000100100011";
        ram[44] = "0b0001001010001011111100011000100101111011011010011101000111";
        ram[45] = "0b0001001101100100110100101100001111000100000001111100001110";
        ram[46] = "0b0001010001000010011100110111001000001111010010001100001001";
        ram[47] = "0b0001010100100100110100010111000110000101011101110010110001";
        ram[48] = "0b0001011000001011111010101001001110011101001000100110000000";
        ram[49] = "0b0001011011110111101111001001111000100000100000001101111011";
        ram[50] = "0b0001011111101000010001010100101100110010111011110011100111";
        ram[51] = "0b0001100011011101100000100100100101010110100010111100000111";
        ram[52] = "0b0001100111010111011100010011101101110001111011101110011110";
        ram[53] = "0b0001101011010110000011111011100011010110000000000100000001";
        ram[54] = "0b0001101111011001010110110100110101000011111010000010000000";
        ram[55] = "0b0001110011100001010100010111100011110011000111011011101001";
        ram[56] = "0b0001110111101101111011111011000010010111100100011011101100";
        ram[57] = "0b0001111011111111001100110101110101100111111101010100100000";
        ram[58] = "0b0010000000010101000110011101110100100100000111010101110010";
        ram[59] = "0b0010000100101111101000001000001000011011100000100110110000";
        ram[60] = "0b0010001001001110110001001001001100110011110111000100000101";
        ram[61] = "0b0010001101110010100000110100101111101111110110100000010011";
        ram[62] = "0b0010010010011010110110011101110001110101111101100101101100";
        ram[63] = "0b0010010111000111110001010110100110010111011001111000110100";
        ram[64] = "0b0010011011111001010000110000110011010111001010111010010101";
        ram[65] = "0b0010100000101111010011111101010001110001001100000111001000";
        ram[66] = "0b0010100101101001111010001100001101100001100101110101101111";
        ram[67] = "0b0010101010101001000010101101000101101100000101001111111001";
        ram[68] = "0b0010101111101100101100101110101100100011011011000110110110";
        ram[69] = "0b0010110100110100110111011111000111110001000001100001110001";
        ram[70] = "0b0010111010000001100010001011110000011100101000100100100100";
        ram[71] = "0b0010111111010010101100000001010011010100001001101110010001";
        ram[72] = "0b0011000100101000010100001011110000110011100010001101100111";
        ram[73] = "0b0011001010000010011001110110011101001100110100001010101011";
        ram[74] = "0b0011001111100000111100001100000000110000001110100100010101";
        ram[75] = "0b0011010101000011111010010110010111110100011100000000001000";
        ram[76] = "0b0011011010101011010011011110110010111110111000001011100111";
        ram[77] = "0b0011100000010111000110101101110111001100001100001101011110";
        ram[78] = "0b0011100110000111010011001011011101111000110001100101011110";
        ram[79] = "0b0011101011111011110111111110110101001001011011111001101011";
        ram[80] = "0b0011110001110100110100001110011111110100001001001111110010";
        ram[81] = "0b0011110111110010000111000000010101101000111001010001000010";
        ram[82] = "0b0011111101110011101111011001100011011010101010110111100100";
        ram[83] = "0b0100000011111001101100011110101011001000100000100011100011";
        ram[84] = "0b0100001010000011111101010011100100000110101011010111000000";
        ram[85] = "0b0100010000010010100000111011011011000111111100010110100111";
        ram[86] = "0b0100010110100101010110011000110010100110111100101110010001";
        ram[87] = "0b0100011100111100011100101101100010101111101100010111111011";
        ram[88] = "0b0100100011010111110010111010111001101001000111000011000110";
        ram[89] = "0b0100101001110111011000000001011011011110101111111011110010";
        ram[90] = "0b0100110000011011001011000001000010101010100011101111001001";
        ram[91] = "0b0100110111000011001010111000111111111110110001001100100000";
        ram[92] = "0b0100111101101111010110100111111010101111111000000001000101";
        ram[93] = "0b0101000100011111101101001011110000111110101110001101000000";
        ram[94] = "0b0101001011010100001101100001110111100010101011110000000001";
        ram[95] = "0b0101010010001100110110100110111010010011111100101100010010";
        ram[96] = "0b0101011001001001100111010110111100010101111001011101101100";
        ram[97] = "0b0101100000001010011110101101011000000001100101100100000111";
        ram[98] = "0b0101100111001111011011100100111111010000010100011110111101";
        ram[99] = "0b0101101110011000011100110111111011100110010100111000011101";
        ram[100] = "0b0101110101100101100001011111101110011101100001111110111000";
        ram[101] = "0b0101111100110110101000010101010001010000011011001010001101";
        ram[102] = "0b0110000100001011110000010000110101100101000001101100100010";
        ram[103] = "0b0110001011100100111000001010000101010111111100101011010100";
        ram[104] = "0b0110010011000001111110111000000011000111100011000000000100";
        ram[105] = "0b0110011010100011000011010001001001111111001011011110100101";
        ram[106] = "0b0110100010001000000100001011001110000010100010111111000011";
        ram[107] = "0b0110101001110001000000011011011100011001001000101010000111";
        ram[108] = "0b0110110001011101110110110110011011011001110000000101011110";
        ram[109] = "0b0110111001001110100110010000001010110110001001011110110111";
        ram[110] = "0b0111000001000011001101011100000100000110101111110011111001";
        ram[111] = "0b0111001000111011101011001100111010010110011100110100101111";
        ram[112] = "0b0111010000110111111110010100111010101110100011000000000110";
        ram[113] = "0b0111011000111000000101100101101100100010101101010110010110";
        ram[114] = "0b0111100000111011111111110000010001011101000101000010000111";
        ram[115] = "0b0111101001000011101011100101000101101010011100110100100000";
        ram[116] = "0b0111110001001111000111110100000000000110100010010011000001";
        ram[117] = "0b0111111001011110010011001100010010101000010100110101001011";
        ram[118] = "0b1000000001110001001100011100101010001110100010010000010000";
        ram[119] = "0b1000001010000111110010010011001111001100001001001110101110";
        ram[120] = "0b1000010010100010000011011101100101010101000001010001111111";
        ram[121] = "0b1000011010111111111110101000101100001010101000011100001000";
        ram[122] = "0b1000100011100001100010100000111111001000110110011111101101";
        ram[123] = "0b1000101100000110101101110010010101110010110101110011111000";
        ram[124] = "0b1000110100101111011111001000000100000000000001101010100111";
        ram[125] = "0b1000111101011011110101001100111010001001001010000111000111";
        ram[126] = "0b1001000110001011101110101011000101010101011101010010010111";
        ram[127] = "0b1001001110111111001010001100001111100111110110001011110101";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(generic_sincos_hlsc4) {


static const unsigned DataWidth = 58;
static const unsigned AddressRange = 128;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


generic_sincos_hlsc4_ram* meminst;


SC_CTOR(generic_sincos_hlsc4) {
meminst = new generic_sincos_hlsc4_ram("generic_sincos_hlsc4_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~generic_sincos_hlsc4() {
    delete meminst;
}


};//endmodule
#endif

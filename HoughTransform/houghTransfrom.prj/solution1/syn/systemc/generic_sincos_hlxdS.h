// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ==============================================================

#ifndef __generic_sincos_hlxdS_H__
#define __generic_sincos_hlxdS_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct generic_sincos_hlxdS_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 59;
  static const unsigned AddressRange = 128;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(generic_sincos_hlxdS_ram) {
        ram[0] = "0b11001001000011111101101010100010001000010110100011000010010";
        ram[1] = "0b11001001000011111000011111110011001110000000001110001000111";
        ram[2] = "0b11001001000011101000111111100110111101100011110000100011001";
        ram[3] = "0b11001001000011001111001001111110110010110100101010001100111";
        ram[4] = "0b11001001000010101010111110111101000110110011001111101111110";
        ram[5] = "0b11001001000001111100011110100101001111101100011001101100110";
        ram[6] = "0b11001001000001000011101000111011100000111001001100110110010";
        ram[7] = "0b11001001000000000000011110000101001010111110011011111010100";
        ram[8] = "0b11001000111110110010111110001000011011101100000010011111001";
        ram[9] = "0b11001000111101011011001001001100011101111100011001001100110";
        ram[10] = "0b11001000111011111000111111011001011001110011100011001100010";
        ram[11] = "0b11001000111010001100100000111000010100011110010100110100010";
        ram[12] = "0b11001000111000010101101101110011010000010001010011101000100";
        ram[13] = "0b11001000110110010100100110010101001100100111101111101001000";
        ram[14] = "0b11001000110100001001001010101010000110000010010101110100100";
        ram[15] = "0b11001000110001110011011010111110110110000101111011111010010";
        ram[16] = "0b11001000101111010011010111100001010011011010000101011111000";
        ram[17] = "0b11001000101100101001000000100000010001100111100010010010100";
        ram[18] = "0b11001000101001110100010110001011100001010110100101111000100";
        ram[19] = "0b11001000100110110101011000110011110000001101011000100010000";
        ram[20] = "0b11001000100011101100001000101010101000101110000001011010110";
        ram[21] = "0b11001000100000011000100110000010110010010100101010000111101";
        ram[22] = "0b11001000011100111010110001001111110001010101011011011001001";
        ram[23] = "0b11001000011001010010101010100110000110111010010011010000001";
        ram[24] = "0b11001000010101100000010010011011010001000000110100010110101";
        ram[25] = "0b11001000010001100011101001000101101010010111101110101011001";
        ram[26] = "0b11001000001101011100101110111100101010011100100001100000111";
        ram[27] = "0b11001000001001001011100100011000100101011000110110110011110";
        ram[28] = "0b11001000000100110000001001110010101011111111110111110000100";
        ram[29] = "0b11001000000000001010011111100101001011101011011010110010100";
        ram[30] = "0b11000111111011011010100110001011001110011001001010110101011";
        ram[31] = "0b11000111110110100000011110000000111010100111100111111101100";
        ram[32] = "0b11000111110001011100000111100011010011010011000001010101100";
        ram[33] = "0b11000111101100001101100011010000010111110010001000100001111";
        ram[34] = "0b11000111100110110100110001100111000011110010111110001100000";
        ram[35] = "0b11000111100001010001110011000111001111010111011000000010111";
        ram[36] = "0b11000111011011100100101000010001101110110001100000010101000";
        ram[37] = "0b11000111010101101101010001101000010010100000001110011111111";
        ram[38] = "0b11000111001111101011101111101101100111001011011001011001110";
        ram[39] = "0b11000111001001100000000011000101010101100000000010110011000";
        ram[40] = "0b11000111000011001010001100010100000010001100011100010000111";
        ram[41] = "0b11000110111100101010001011111111001101111100000101100001110";
        ram[42] = "0b11000110110110000000000010101101010101010011100100001011111";
        ram[43] = "0b11000110101111001011110001000101110000101100010100110110010";
        ram[44] = "0b11000110101000001101010111110000110100010000010101101100110";
        ram[45] = "0b11000110100001000100110111010111101111110101101010100000101";
        ram[46] = "0b11000110011001110010010000100100101110111001111010000011010";
        ram[47] = "0b11000110010010010101100100000010111000011101100101000000000";
        ram[48] = "0b11000110001010101110110010011110001110111111010110010001011";
        ram[49] = "0b11000110000010111101111100100011110000010111001100110101011";
        ram[50] = "0b11000101111011000011000011000001010101110001011110111111000";
        ram[51] = "0b11000101110010111110000110100101110011101001110111001000010";
        ram[52] = "0b11000101101010101111001000000000111001100110001010000010010";
        ram[53] = "0b11000101100010010110001000000011010010010001000110100110010";
        ram[54] = "0b11000101011001110011000111011110100011010100111111001000001";
        ram[55] = "0b11000101010001000110000111000101001101010110001100001001000";
        ram[56] = "0b11000101001000001111000111101010101011101101101000101101010";
        ram[57] = "0b11000100111111001110001010000011010100100011001000010100101";
        ram[58] = "0b11000100110110000011001111000100011000100111100110010110010";
        ram[59] = "0b11000100101100101110010111100100000011001111001111000000010";
        ram[60] = "0b11000100100011001111100100011001011010001011100001111100111";
        ram[61] = "0b11000100011001100110110110011100011101100101001110011101010";
        ram[62] = "0b11000100001111110100001110100110000111110110001001001010000";
        ram[63] = "0b11000100000101110111101101110000001101100010111011011010101";
        ram[64] = "0b11000011111011110001010100110101011101010100101100010110001";
        ram[65] = "0b11000011110001100001000100110001011111110010100011011010101";
        ram[66] = "0b11000011100111000110111110100000110111011011000100101111100";
        ram[67] = "0b11000011011100100011000011000001000000011101100111000000011";
        ram[68] = "0b11000011010001110101010011010000010000110011100011000100101";
        ram[69] = "0b11000011000110111101110000001101110111111001011101010001101";
        ram[70] = "0b11000010111011111100011010111001111110101000001000011001011";
        ram[71] = "0b11000010110000110001010100010101100111001101100010010111100";
        ram[72] = "0b11000010100101011100011101100010101101000101101010101011011";
        ram[73] = "0b11000010011001111101110111100100000100110011010010100010010";
        ram[74] = "0b11000010001110010101100011011101011011111000100110110000110";
        ram[75] = "0b11000010000010100011100010010011011000101111110011011101110";
        ram[76] = "0b11000001110110100111110101001011011010100011100001011110011";
        ram[77] = "0b11000001101010100010011101001011111001000111001101100101000";
        ram[78] = "0b11000001011110010011011011011100000100101111011001100100001";
        ram[79] = "0b11000001010001111010110001000100000110001001110111000100110";
        ram[80] = "0b11000001000101011000011111001100111110010101101100010011011";
        ram[81] = "0b11000000111000101100100111000000100110011011010010100010101";
        ram[82] = "0b11000000101011110111001001101001101111100100001110100101001";
        ram[83] = "0b11000000011110111000001000010100000010110011000011000000010";
        ram[84] = "0b11000000010001101111100100001100000000111010111100010111110";
        ram[85] = "0b11000000000100011101011110011111000010010111010111010011100";
        ram[86] = "0b10111111110111000001111000011011010111000011100000100001011";
        ram[87] = "0b10111111101001011100110011010000000110010001101110110010001";
        ram[88] = "0b10111111011011101110010000001101001110100010110110110100110";
        ram[89] = "0b10111111001101110110010000100011100101011101011001010000000";
        ram[90] = "0b10111110111111110100110101100100110111100100101010011010010";
        ram[91] = "0b10111110110001101010000000100011101000001111110100010011111";
        ram[92] = "0b10111110100011010101110010110011010001100000110010100001000";
        ram[93] = "0b10111110010100111000001101101000000011111011001000000111100";
        ram[94] = "0b10111110000110010001010010010111000110011010101111110000011";
        ram[95] = "0b10111101110111100001000010010110010110001010100101101101000";
        ram[96] = "0b10111101101000100111011110111100100110011011001100000011111";
        ram[97] = "0b10111101011001100100101001100001100000011001001001000011010";
        ram[98] = "0b10111101001010011000100011011101100011000011011111011100110";
        ram[99] = "0b10111100111011000011001110001010000011000010000001001010000";
        ram[100] = "0b10111100101011100100101011000001001010011011011011111011111";
        ram[101] = "0b10111100011011111100111011011101111000101011100000010101010";
        ram[102] = "0b10111100001100001100000000111100000010011001000010110011101";
        ram[103] = "0b10111011111100010001111100111000010001001011110111000100011";
        ram[104] = "0b10111011101100001110110000110000000011100010100101101010011";
        ram[105] = "0b10111011011100000010011110000001101100101000011011110011111";
        ram[106] = "0b10111011001011101101000110001100010100001010110101100010000";
        ram[107] = "0b10111010111011001110101010101111110110001111000010000011011";
        ram[108] = "0b10111010101010100111001101001101000011000111100010100010110";
        ram[109] = "0b10111010011001110110101111000101011111001001100011001011101";
        ram[110] = "0b10111010001000111101010001111011100010100010001110100101000";
        ram[111] = "0b10111001110111111010110111010010011001001011111011100100110";
        ram[112] = "0b10111001100110101111100000101110000010100011010101011011100";
        ram[113] = "0b10111001010101011011001111110011010001011100011110011100101";
        ram[114] = "0b10111001000011111110000110000111101011110111101101000000000";
        ram[115] = "0b10111000110010011000000101010001101010110110100011000011100";
        ram[116] = "0b10111000100000101001001110111000011010010000100000001000110";
        ram[117] = "0b10111000001110110001100100100011111000100111101101110100110";
        ram[118] = "0b10110111111100110001000111111100110110111101100110101111011";
        ram[119] = "0b10110111101010100111111010101100111000100111011000000110010";
        ram[120] = "0b10110111011000010101111110011110010011000010011101110011101";
        ram[121] = "0b10110111000101111011010100111100001101101000111001001010000";
        ram[122] = "0b10110110110011010111111111110010100001100101100010000111101";
        ram[123] = "0b10110110100000101100000000101101111001101000010011010001010";
        ram[124] = "0b10110110001101110111011001011011110001111010010000010110110";
        ram[125] = "0b10110101111010111010001011101010010111110001100111100011000";
        ram[126] = "0b10110101100111110100011001001000101001100101101101011000001";
        ram[127] = "0b10110101010100100110000011100110010110100010110011011001000";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(generic_sincos_hlxdS) {


static const unsigned DataWidth = 59;
static const unsigned AddressRange = 128;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


generic_sincos_hlxdS_ram* meminst;


SC_CTOR(generic_sincos_hlxdS) {
meminst = new generic_sincos_hlxdS_ram("generic_sincos_hlxdS_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~generic_sincos_hlxdS() {
    delete meminst;
}


};//endmodule
#endif

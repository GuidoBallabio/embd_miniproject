// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _roundf_HH_
#define _roundf_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "roundf_mask_table1.h"
#include "roundf_one_half_tbkb.h"

namespace ap_rtl {

struct roundf : public sc_module {
    // Port declarations 8
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > x;
    sc_out< sc_lv<32> > ap_return;


    // Module declarations
    roundf(sc_module_name name);
    SC_HAS_PROCESS(roundf);

    ~roundf();

    sc_trace_file* mVcdFile;

    roundf_mask_table1* mask_table1_U;
    roundf_one_half_tbkb* one_half_table2_U;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<5> > mask_table1_address0;
    sc_signal< sc_logic > mask_table1_ce0;
    sc_signal< sc_lv<23> > mask_table1_q0;
    sc_signal< sc_lv<5> > one_half_table2_address0;
    sc_signal< sc_logic > one_half_table2_ce0;
    sc_signal< sc_lv<24> > one_half_table2_q0;
    sc_signal< sc_lv<32> > t_V_6_fu_70_p1;
    sc_signal< sc_lv<32> > t_V_6_reg_200;
    sc_signal< sc_lv<1> > tmp_i_i_fu_84_p2;
    sc_signal< sc_lv<1> > tmp_i_i_reg_206;
    sc_signal< sc_lv<1> > tmp_105_i_i_fu_90_p2;
    sc_signal< sc_lv<1> > tmp_105_i_i_reg_212;
    sc_signal< sc_lv<23> > mask_reg_227;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<24> > one_half_reg_232;
    sc_signal< sc_lv<32> > sel_tmp_fu_175_p1;
    sc_signal< sc_lv<32> > sel_tmp_reg_237;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<32> > tmp_106_i_i_fu_106_p1;
    sc_signal< sc_lv<8> > loc_V_fu_74_p4;
    sc_signal< sc_lv<5> > index_V_fu_96_p4;
    sc_signal< sc_lv<1> > p_Result_s_fu_112_p3;
    sc_signal< sc_lv<32> > one_half_cast_fu_127_p1;
    sc_signal< sc_lv<32> > p_Val2_s_fu_130_p2;
    sc_signal< sc_lv<23> > loc_V_2_fu_135_p1;
    sc_signal< sc_lv<23> > tmp_108_i_i_fu_139_p2;
    sc_signal< sc_lv<9> > tmp_fu_150_p4;
    sc_signal< sc_lv<23> > xs_sig_V_fu_144_p2;
    sc_signal< sc_lv<32> > p_Result_46_fu_119_p3;
    sc_signal< sc_lv<32> > p_Result_47_fu_160_p3;
    sc_signal< sc_lv<32> > sel_tmp_v_fu_168_p3;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > sel_tmp1_fu_179_p2;
    sc_signal< sc_lv<1> > sel_tmp2_fu_184_p2;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_state2;
    static const sc_lv<4> ap_ST_fsm_state3;
    static const sc_lv<4> ap_ST_fsm_state4;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_7E;
    static const sc_lv<8> ap_const_lv8_96;
    static const sc_lv<32> ap_const_lv32_1B;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<31> ap_const_lv31_0;
    static const sc_lv<23> ap_const_lv23_7FFFFF;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_index_V_fu_96_p4();
    void thread_loc_V_2_fu_135_p1();
    void thread_loc_V_fu_74_p4();
    void thread_mask_table1_address0();
    void thread_mask_table1_ce0();
    void thread_one_half_cast_fu_127_p1();
    void thread_one_half_table2_address0();
    void thread_one_half_table2_ce0();
    void thread_p_Result_46_fu_119_p3();
    void thread_p_Result_47_fu_160_p3();
    void thread_p_Result_s_fu_112_p3();
    void thread_p_Val2_s_fu_130_p2();
    void thread_sel_tmp1_fu_179_p2();
    void thread_sel_tmp2_fu_184_p2();
    void thread_sel_tmp_fu_175_p1();
    void thread_sel_tmp_v_fu_168_p3();
    void thread_t_V_6_fu_70_p1();
    void thread_tmp_105_i_i_fu_90_p2();
    void thread_tmp_106_i_i_fu_106_p1();
    void thread_tmp_108_i_i_fu_139_p2();
    void thread_tmp_fu_150_p4();
    void thread_tmp_i_i_fu_84_p2();
    void thread_xs_sig_V_fu_144_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif

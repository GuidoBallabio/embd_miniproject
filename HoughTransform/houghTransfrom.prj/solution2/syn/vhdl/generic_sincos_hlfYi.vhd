-- ==============================================================
-- File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.2
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ==============================================================

library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity generic_sincos_hlfYi_rom is 
    generic(
             dwidth     : integer := 44; 
             awidth     : integer := 7; 
             mem_size    : integer := 128
    ); 
    port (
          addr0      : in std_logic_vector(awidth-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(dwidth-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of generic_sincos_hlfYi_rom is 

signal addr0_tmp : std_logic_vector(awidth-1 downto 0); 
type mem_array is array (0 to mem_size-1) of std_logic_vector (dwidth-1 downto 0); 
signal mem : mem_array := (
    0 => "10011101111010011110011001001101111101100100", 
    1 => "10011101111010010010001101111100101101100000", 
    2 => "10011101111001101101101100001010101111110010", 
    3 => "10011101111000110000110011111101101100100001", 
    4 => "10011101110111011011100101011110111100001101", 
    5 => "10011101110101101110000000111011101001000010", 
    6 => "10011101110011101000000110100100101011010010", 
    7 => "10011101110001001001110110101110101101000001", 
    8 => "10011101101110010011010001110010001000011000", 
    9 => "10011101101011000100011000001011000111001110", 
    10 => "10011101100111011101001010011001100011101010", 
    11 => "10011101100011011101101001000001000111011001", 
    12 => "10011101011111000101110100101001001100011010", 
    13 => "10011101011010010101101101111100111100100000", 
    14 => "10011101010101001101010101101011010000011111", 
    15 => "10011101001111101100101100100110110001110101", 
    16 => "10011101001001110011110011100101111001011100", 
    17 => "10011101000011100010101011100010101110000010", 
    18 => "10011100111100111001010101011011000111000000", 
    19 => "10011100110101110111110010010000101010101111", 
    20 => "10011100101110011110000011001000101101001101", 
    21 => "10011100100110101100001001001100010011000000", 
    22 => "10011100011110100010000101101000001101101110", 
    23 => "10011100010101111111111001101100111110010011", 
    24 => "10011100001101000101100110101110110010001000", 
    25 => "10011100000011110011001110000101100110101011", 
    26 => "10011011111010001000110001001101000110010101", 
    27 => "10011011110000000110010001100100101001001101", 
    28 => "10011011100101101011110000101111010011111010", 
    29 => "10011011011010111001010000010011111000100100", 
    30 => "10011011001111101110110001111100110110101000", 
    31 => "10011011000100001100010111011000011000110011", 
    32 => "10011010111000010010000010011000010111111010", 
    33 => "10011010101011111111110100110010011000000001", 
    34 => "10011010011111010101110000011111100111101101", 
    35 => "10011010010010010011110111011101000010001001", 
    36 => "10011010000100111010001011101011001101100110", 
    37 => "10011001110111001000101111001110011011010010", 
    38 => "10011001101000111111100100001110100110110111", 
    39 => "10011001011010011110101100110111010101111010", 
    40 => "10011001001011100110001011010111110111000101", 
    41 => "10011000111100010110000010000011000100111000", 
    42 => "10011000101100101110010011001111100000011111", 
    43 => "10011000011100101111000001010111010100001110", 
    44 => "10011000001100011000001110111000010100111011", 
    45 => "10010111111011101001111110010011111100110010", 
    46 => "10010111101010100100010010001111001111001010", 
    47 => "10010111011001000111001101010010110110011100", 
    48 => "10010111000111010010110010001011000010110111", 
    49 => "10010110110101000111000011100111101101010010", 
    50 => "10010110100010100100000100011100010010101010", 
    51 => "10010110001111101001110111011111110101111010", 
    52 => "10010101111100011000011111101100111111001110", 
    53 => "10010101101000110000000000000001111011010000", 
    54 => "10010101010100110000011011100000011011011100", 
    55 => "10010101000000011001110101001101110100101010", 
    56 => "10010100101011101100010000010010111110100110", 
    57 => "10010100010110100111101111111100010100000111", 
    58 => "10010100000001001100010111011001110011000000", 
    59 => "10010011101011011010001001111110111001010010", 
    60 => "10010011010101010001001011000010100111111010", 
    61 => "10010010111110110001011101111111100000001100", 
    62 => "10010010100111111011000110010011100010100111", 
    63 => "10010010010000101110000111100000010000001000", 
    64 => "10010001111001001010100101001010101001100000", 
    65 => "10010001100001010000100010111011001101100011", 
    66 => "10010001001001000000000100011101110111110100", 
    67 => "10010000110000011001001101100010000100110010", 
    68 => "10010000010111011100000001111010101001010011", 
    69 => "10001111111110001000100101011101111010000100", 
    70 => "10001111100100011110111100000101100110001111", 
    71 => "10001111001010011111001001101110111000010000", 
    72 => "10001110110000001001010010011010010100110001", 
    73 => "10001110010101011101011010001011111001111001", 
    74 => "10001101111010011011100101001011000001010100", 
    75 => "10001101011111000011110111100010011001110011", 
    76 => "10001101000011010110010101100000001101000111", 
    77 => "10001100100111010011000011010101111011000010", 
    78 => "10001100001010111010000101011000011010011011", 
    79 => "10001011101110001011011111111111110111110011", 
    80 => "10001011010001000111010111100111110101100000", 
    81 => "10001010110011101101110000101111001001100110", 
    82 => "10001010010101111110101111110111111111101000", 
    83 => "10001001110111111010011001100111110100010111", 
    84 => "10001001011001100000110010100111011001010101", 
    85 => "10001000111010110001111111100010110000100100", 
    86 => "10001000011011101110000101001001001101001000", 
    87 => "10000111111100010101001000001101010011011101", 
    88 => "10000111011100100111001101100100110110100111", 
    89 => "10000110111100100100011010001000111001000111", 
    90 => "10000110011100001100110010110101101011000111", 
    91 => "10000101111011100000011100101010101011011001", 
    92 => "10000101011010011111011100101010100100111111", 
    93 => "10000100111001001001110111111011001100100101", 
    94 => "10000100010111011111110011100101100100010000", 
    95 => "10000011110101100001010100110101111000010110", 
    96 => "10000011010011001110100000111011011101101001", 
    97 => "10000010110000100111011101001000110010001111", 
    98 => "10000010001101101100001110110011011011100000", 
    99 => "10000001101010011100111011010100000110110001", 
    100 => "10000001000110111001101000000110100110001001", 
    101 => "10000000100011000010011010101001110001011000", 
    102 => "01111111111110110111011000011111100110011110", 
    103 => "01111111011010011000100111001101000101110010", 
    104 => "01111110110101100110001100011010010001111100", 
    105 => "01111110010000100000001101110010001111101011", 
    106 => "01111101101011000110110001000011000110011111", 
    107 => "01111101000101011001111011111101111010111100", 
    108 => "01111100011111011001110100010110110011100111", 
    109 => "01111011111001000110100000000100110100111001", 
    110 => "01111011010010100000000101000010000000000010", 
    111 => "01111010101011100110101001001011010010001111", 
    112 => "01111010000100011010010010100000100101010011", 
    113 => "01111001011100111011000111000100101110011110", 
    114 => "01111000110101001001001100111101011011101111", 
    115 => "01111000001101000100101010010011010011011001", 
    116 => "01110111100100101101100101010001110101100101", 
    117 => "01110110111100000100000100000111010110011111", 
    118 => "01110110010011001000001101000101000011110010", 
    119 => "01110101101001111010000110011110111101001101", 
    120 => "01110101000000011001110110101011110111010000", 
    121 => "01110100010110100111100100000101011011101000", 
    122 => "01110011101100100011010101001000000011100100", 
    123 => "01110011000010001101010000010010111001110000", 
    124 => "01110010010111100101011100000111111001100101", 
    125 => "01110001101100101011111111001011101110011011", 
    126 => "01110001000001100001000000000101110000010111", 
    127 => "01110000010110000100100101100000000100000110" );

attribute syn_rom_style : string;
attribute syn_rom_style of mem : signal is "select_rom";
attribute ROM_STYLE : string;
attribute ROM_STYLE of mem : signal is "distributed";

attribute EQUIVALENT_REGISTER_REMOVAL : string;
begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;


Library IEEE;
use IEEE.std_logic_1164.all;

entity generic_sincos_hlfYi is
    generic (
        DataWidth : INTEGER := 44;
        AddressRange : INTEGER := 128;
        AddressWidth : INTEGER := 7);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of generic_sincos_hlfYi is
    component generic_sincos_hlfYi_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    generic_sincos_hlfYi_rom_U :  component generic_sincos_hlfYi_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;



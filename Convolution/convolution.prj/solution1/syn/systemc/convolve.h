// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _convolve_HH_
#define _convolve_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "convolve_fadd_32nbkb.h"
#include "convolve_fmul_32ncud.h"
#include "convolve_sitofp_3dEe.h"
#include "convolve_mul_6ns_eOg.h"
#include "convolve_ama_addmfYi.h"
#include "convolve_conv_s_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_CONV_ADDR_WIDTH = 15,
         unsigned int C_S_AXI_CONV_DATA_WIDTH = 32>
struct convolve : public sc_module {
    // Port declarations 20
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_logic > s_axi_conv_AWVALID;
    sc_out< sc_logic > s_axi_conv_AWREADY;
    sc_in< sc_uint<C_S_AXI_CONV_ADDR_WIDTH> > s_axi_conv_AWADDR;
    sc_in< sc_logic > s_axi_conv_WVALID;
    sc_out< sc_logic > s_axi_conv_WREADY;
    sc_in< sc_uint<C_S_AXI_CONV_DATA_WIDTH> > s_axi_conv_WDATA;
    sc_in< sc_uint<C_S_AXI_CONV_DATA_WIDTH/8> > s_axi_conv_WSTRB;
    sc_in< sc_logic > s_axi_conv_ARVALID;
    sc_out< sc_logic > s_axi_conv_ARREADY;
    sc_in< sc_uint<C_S_AXI_CONV_ADDR_WIDTH> > s_axi_conv_ARADDR;
    sc_out< sc_logic > s_axi_conv_RVALID;
    sc_in< sc_logic > s_axi_conv_RREADY;
    sc_out< sc_uint<C_S_AXI_CONV_DATA_WIDTH> > s_axi_conv_RDATA;
    sc_out< sc_lv<2> > s_axi_conv_RRESP;
    sc_out< sc_logic > s_axi_conv_BVALID;
    sc_in< sc_logic > s_axi_conv_BREADY;
    sc_out< sc_lv<2> > s_axi_conv_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    convolve(sc_module_name name);
    SC_HAS_PROCESS(convolve);

    ~convolve();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    convolve_conv_s_axi<C_S_AXI_CONV_ADDR_WIDTH,C_S_AXI_CONV_DATA_WIDTH>* convolve_conv_s_axi_U;
    convolve_fadd_32nbkb<1,7,32,32,32>* convolve_fadd_32nbkb_U0;
    convolve_fmul_32ncud<1,4,32,32,32>* convolve_fmul_32ncud_U1;
    convolve_sitofp_3dEe<1,6,32,32>* convolve_sitofp_3dEe_U2;
    convolve_mul_6ns_eOg<1,2,6,7,12>* convolve_mul_6ns_eOg_U3;
    convolve_ama_addmfYi<1,1,6,2,7,6,12>* convolve_ama_addmfYi_U4;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<28> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<12> > in_r_address0;
    sc_signal< sc_logic > in_r_ce0;
    sc_signal< sc_lv<16> > in_r_q0;
    sc_signal< sc_logic > out_r_ce0;
    sc_signal< sc_logic > out_r_we0;
    sc_signal< sc_logic > krnl_ce0;
    sc_signal< sc_lv<32> > krnl_q0;
    sc_signal< sc_lv<32> > grp_fu_201_p1;
    sc_signal< sc_lv<32> > reg_204;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<12> > grp_fu_214_p2;
    sc_signal< sc_lv<12> > tmp_1_reg_516;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<12> > out_addr_reg_524;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<6> > r_fu_246_p2;
    sc_signal< sc_lv<1> > exitcond_fu_240_p2;
    sc_signal< sc_lv<5> > kc_cast5_cast_fu_252_p1;
    sc_signal< sc_lv<5> > kc_cast5_cast_reg_537;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<2> > kc_1_fu_262_p2;
    sc_signal< sc_lv<2> > kc_1_reg_545;
    sc_signal< sc_lv<12> > col_offset_cast_cast_fu_284_p1;
    sc_signal< sc_lv<12> > col_offset_cast_cast_reg_550;
    sc_signal< sc_lv<1> > tmp_2_fu_256_p2;
    sc_signal< sc_lv<6> > c_1_fu_288_p2;
    sc_signal< sc_lv<4> > krnl_addr_reg_560;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<2> > kr_1_fu_332_p2;
    sc_signal< sc_lv<2> > kr_1_reg_568;
    sc_signal< sc_lv<2> > tmp1_fu_338_p2;
    sc_signal< sc_lv<2> > tmp1_reg_573;
    sc_signal< sc_lv<1> > tmp_3_fu_326_p2;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<16> > in_load_reg_583;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<32> > tmp_12_fu_351_p1;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<32> > tmp_13_fu_355_p1;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_lv<32> > krnl_load_reg_598;
    sc_signal< sc_lv<32> > grp_fu_197_p2;
    sc_signal< sc_lv<32> > tmp_5_reg_603;
    sc_signal< sc_lv<32> > grp_fu_193_p2;
    sc_signal< sc_lv<32> > x_assign_reg_608;
    sc_signal< sc_logic > ap_CS_fsm_state25;
    sc_signal< sc_lv<1> > p_Result_s_reg_613;
    sc_signal< sc_logic > ap_CS_fsm_state26;
    sc_signal< sc_lv<23> > loc_V_1_fu_381_p1;
    sc_signal< sc_lv<23> > loc_V_1_reg_618;
    sc_signal< sc_lv<1> > isNeg_fu_395_p3;
    sc_signal< sc_lv<1> > isNeg_reg_623;
    sc_signal< sc_lv<9> > sh_assign_1_fu_413_p3;
    sc_signal< sc_lv<9> > sh_assign_1_reg_628;
    sc_signal< sc_lv<15> > p_Val2_3_fu_478_p3;
    sc_signal< sc_lv<15> > p_Val2_3_reg_634;
    sc_signal< sc_logic > ap_CS_fsm_state27;
    sc_signal< sc_lv<16> > p_Val2_s_fu_494_p3;
    sc_signal< sc_logic > ap_CS_fsm_state28;
    sc_signal< sc_lv<6> > r1_reg_122;
    sc_signal< sc_lv<6> > c_reg_134;
    sc_signal< sc_lv<1> > exitcond9_fu_220_p2;
    sc_signal< sc_lv<16> > sum_reg_146;
    sc_signal< sc_lv<2> > kc_reg_159;
    sc_signal< sc_lv<16> > sum_1_reg_170;
    sc_signal< sc_lv<2> > kr_reg_182;
    sc_signal< sc_lv<32> > tmp_7_cast_fu_235_p1;
    sc_signal< sc_lv<32> > tmp_10_cast_fu_321_p1;
    sc_signal< sc_lv<32> > tmp_12_cast_fu_347_p1;
    sc_signal< sc_logic > ap_CS_fsm_state19;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_lv<32> > grp_fu_201_p0;
    sc_signal< sc_lv<6> > grp_fu_214_p0;
    sc_signal< sc_lv<7> > grp_fu_214_p1;
    sc_signal< sc_lv<12> > c_cast6_cast_fu_226_p1;
    sc_signal< sc_lv<12> > tmp_7_fu_230_p2;
    sc_signal< sc_lv<2> > tmp_fu_268_p2;
    sc_signal< sc_lv<6> > tmp_cast_fu_274_p1;
    sc_signal< sc_lv<6> > col_offset_fu_278_p2;
    sc_signal< sc_lv<4> > tmp_8_fu_298_p3;
    sc_signal< sc_lv<5> > p_shl_cast_fu_306_p1;
    sc_signal< sc_lv<5> > kr_cast4_cast_fu_294_p1;
    sc_signal< sc_lv<5> > tmp_9_fu_310_p2;
    sc_signal< sc_lv<5> > tmp_s_fu_316_p2;
    sc_signal< sc_lv<12> > grp_fu_501_p4;
    sc_signal< sc_lv<32> > p_Val2_1_fu_360_p1;
    sc_signal< sc_lv<8> > loc_V_fu_371_p4;
    sc_signal< sc_lv<9> > tmp_i_i_i_i_cast2_fu_385_p1;
    sc_signal< sc_lv<9> > sh_assign_fu_389_p2;
    sc_signal< sc_lv<8> > tmp_2_i_i_i_fu_403_p2;
    sc_signal< sc_lv<9> > tmp_2_i_i_i_cast_fu_409_p1;
    sc_signal< sc_lv<25> > tmp_1_i_i_i_fu_421_p4;
    sc_signal< sc_lv<32> > sh_assign_1_cast_fu_434_p1;
    sc_signal< sc_lv<25> > sh_assign_1_cast_cas_fu_437_p1;
    sc_signal< sc_lv<63> > tmp_1_i_i_i_cast3_fu_430_p1;
    sc_signal< sc_lv<63> > tmp_3_i_i_i_fu_440_p1;
    sc_signal< sc_lv<25> > tmp_4_i_i_i_fu_444_p2;
    sc_signal< sc_lv<1> > tmp_19_fu_456_p3;
    sc_signal< sc_lv<63> > tmp_5_i_i_i_fu_450_p2;
    sc_signal< sc_lv<15> > tmp_14_fu_464_p1;
    sc_signal< sc_lv<15> > tmp_15_fu_468_p4;
    sc_signal< sc_lv<16> > tmp_7_i_i_i_fu_485_p1;
    sc_signal< sc_lv<16> > tmp_10_i_i_i_fu_488_p2;
    sc_signal< sc_lv<7> > grp_fu_501_p2;
    sc_signal< sc_lv<6> > grp_fu_501_p3;
    sc_signal< sc_lv<28> > ap_NS_fsm;
    sc_signal< sc_lv<12> > grp_fu_214_p00;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<28> ap_ST_fsm_state1;
    static const sc_lv<28> ap_ST_fsm_state2;
    static const sc_lv<28> ap_ST_fsm_state3;
    static const sc_lv<28> ap_ST_fsm_state4;
    static const sc_lv<28> ap_ST_fsm_state5;
    static const sc_lv<28> ap_ST_fsm_state6;
    static const sc_lv<28> ap_ST_fsm_state7;
    static const sc_lv<28> ap_ST_fsm_state8;
    static const sc_lv<28> ap_ST_fsm_state9;
    static const sc_lv<28> ap_ST_fsm_state10;
    static const sc_lv<28> ap_ST_fsm_state11;
    static const sc_lv<28> ap_ST_fsm_state12;
    static const sc_lv<28> ap_ST_fsm_state13;
    static const sc_lv<28> ap_ST_fsm_state14;
    static const sc_lv<28> ap_ST_fsm_state15;
    static const sc_lv<28> ap_ST_fsm_state16;
    static const sc_lv<28> ap_ST_fsm_state17;
    static const sc_lv<28> ap_ST_fsm_state18;
    static const sc_lv<28> ap_ST_fsm_state19;
    static const sc_lv<28> ap_ST_fsm_state20;
    static const sc_lv<28> ap_ST_fsm_state21;
    static const sc_lv<28> ap_ST_fsm_state22;
    static const sc_lv<28> ap_ST_fsm_state23;
    static const sc_lv<28> ap_ST_fsm_state24;
    static const sc_lv<28> ap_ST_fsm_state25;
    static const sc_lv<28> ap_ST_fsm_state26;
    static const sc_lv<28> ap_ST_fsm_state27;
    static const sc_lv<28> ap_ST_fsm_state28;
    static const sc_lv<32> ap_const_lv32_0;
    static const int C_S_AXI_DATA_WIDTH;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_19;
    static const sc_lv<32> ap_const_lv32_1A;
    static const sc_lv<32> ap_const_lv32_1B;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<12> ap_const_lv12_32;
    static const sc_lv<6> ap_const_lv6_31;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<9> ap_const_lv9_181;
    static const sc_lv<8> ap_const_lv8_7F;
    static const sc_lv<32> ap_const_lv32_26;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state19();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state25();
    void thread_ap_CS_fsm_state26();
    void thread_ap_CS_fsm_state27();
    void thread_ap_CS_fsm_state28();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_c_1_fu_288_p2();
    void thread_c_cast6_cast_fu_226_p1();
    void thread_col_offset_cast_cast_fu_284_p1();
    void thread_col_offset_fu_278_p2();
    void thread_exitcond9_fu_220_p2();
    void thread_exitcond_fu_240_p2();
    void thread_grp_fu_201_p0();
    void thread_grp_fu_214_p0();
    void thread_grp_fu_214_p00();
    void thread_grp_fu_214_p1();
    void thread_grp_fu_501_p2();
    void thread_grp_fu_501_p3();
    void thread_in_r_address0();
    void thread_in_r_ce0();
    void thread_isNeg_fu_395_p3();
    void thread_kc_1_fu_262_p2();
    void thread_kc_cast5_cast_fu_252_p1();
    void thread_kr_1_fu_332_p2();
    void thread_kr_cast4_cast_fu_294_p1();
    void thread_krnl_ce0();
    void thread_loc_V_1_fu_381_p1();
    void thread_loc_V_fu_371_p4();
    void thread_out_r_ce0();
    void thread_out_r_we0();
    void thread_p_Val2_1_fu_360_p1();
    void thread_p_Val2_3_fu_478_p3();
    void thread_p_Val2_s_fu_494_p3();
    void thread_p_shl_cast_fu_306_p1();
    void thread_r_fu_246_p2();
    void thread_sh_assign_1_cast_cas_fu_437_p1();
    void thread_sh_assign_1_cast_fu_434_p1();
    void thread_sh_assign_1_fu_413_p3();
    void thread_sh_assign_fu_389_p2();
    void thread_tmp1_fu_338_p2();
    void thread_tmp_10_cast_fu_321_p1();
    void thread_tmp_10_i_i_i_fu_488_p2();
    void thread_tmp_12_cast_fu_347_p1();
    void thread_tmp_12_fu_351_p1();
    void thread_tmp_13_fu_355_p1();
    void thread_tmp_14_fu_464_p1();
    void thread_tmp_15_fu_468_p4();
    void thread_tmp_19_fu_456_p3();
    void thread_tmp_1_i_i_i_cast3_fu_430_p1();
    void thread_tmp_1_i_i_i_fu_421_p4();
    void thread_tmp_2_fu_256_p2();
    void thread_tmp_2_i_i_i_cast_fu_409_p1();
    void thread_tmp_2_i_i_i_fu_403_p2();
    void thread_tmp_3_fu_326_p2();
    void thread_tmp_3_i_i_i_fu_440_p1();
    void thread_tmp_4_i_i_i_fu_444_p2();
    void thread_tmp_5_i_i_i_fu_450_p2();
    void thread_tmp_7_cast_fu_235_p1();
    void thread_tmp_7_fu_230_p2();
    void thread_tmp_7_i_i_i_fu_485_p1();
    void thread_tmp_8_fu_298_p3();
    void thread_tmp_9_fu_310_p2();
    void thread_tmp_cast_fu_274_p1();
    void thread_tmp_fu_268_p2();
    void thread_tmp_i_i_i_i_cast2_fu_385_p1();
    void thread_tmp_s_fu_316_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
